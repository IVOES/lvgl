demos/benchmark/assets/img_benchmark_cogwheel_alpha256.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_color.h:374:25: error: The address of local variable 'c' is accessed at non-zero index. [objectIndex]
    return tmp[0] + (tmp[1] << 8) + (tmp[2] << 16);
                        ^
src/misc/lv_color.h:373:33: note: Address of variable taken here.
    uint8_t * tmp = (uint8_t *) &c;
                                ^
src/misc/lv_color.h:374:25: note: The address of local variable 'c' is accessed at non-zero index.
    return tmp[0] + (tmp[1] << 8) + (tmp[2] << 16);
                        ^
src/misc/lv_color.h:398:9: error: The address of local variable 'c16' is accessed at non-zero index. [objectIndex]
    c16p[1] = buf[1];
        ^
src/misc/lv_color.h:396:34: note: Address of variable taken here.
    uint8_t * c16p = (uint8_t *) &c16;
                                 ^
src/misc/lv_color.h:398:9: note: The address of local variable 'c16' is accessed at non-zero index.
    c16p[1] = buf[1];
        ^
src/misc/lv_style.h:458:39: style: The scope of the variable 'const_prop' can be reduced. [variableScope]
        const lv_style_const_prop_t * const_prop;
                                      ^
src/misc/lv_color.h:689:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            LV_ASSERT(res_opa_saved != 0);
^
src/misc/lv_assert.h:19:0: error: No header in #include [preprocessorErrorDirective]
#include LV_ASSERT_HANDLER_INCLUDE
^
src/misc/lv_math.h:47:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM int16_t lv_trigo_sin(int16_t angle);
^
src/misc/lv_math.h:49:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static inline LV_ATTRIBUTE_FAST_MEM int16_t lv_trigo_cos(int16_t angle)
^
src/misc/lv_math.h:87:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_sqrt(uint32_t x, lv_sqrt_res_t * q, uint32_t mask);
^
src/misc/lv_color.h:583:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t mix)
^
src/misc/lv_color.h:615:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out)
^
src/misc/lv_color.h:631:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color_t c2, uint8_t mix)
^
src/misc/lv_color.h:651:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_opa,
^
src/misc/lv_color.h:766:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num);
^
src/draw/sw/lv_draw_sw_gradient.h:74:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM lv_grad_color_t lv_gradient_calculate(const lv_grad_dsc_t * dsc, lv_coord_t range,
^
src/draw/lv_draw_rect.h:77:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_draw_rect_dsc_init(lv_draw_rect_dsc_t * dsc);
^
src/draw/lv_draw_label.h:71:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_draw_label_dsc_init(lv_draw_label_dsc_t * dsc);
^
src/draw/lv_draw_label.h:82:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_draw_label(struct _lv_draw_ctx_t * draw_ctx, const lv_draw_label_dsc_t * dsc,
^
src/draw/lv_draw_line.h:46:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_draw_line_dsc_init(lv_draw_line_dsc_t * dsc);
^
src/draw/lv_draw_mask.h:244:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM lv_draw_mask_res_t lv_draw_mask_apply(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,
^
src/draw/lv_draw_mask.h:260:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM lv_draw_mask_res_t lv_draw_mask_apply_ids(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,
^
src/draw/lv_draw_mask.h:302:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM uint8_t lv_draw_mask_get_cnt(void);
^
src/core/lv_disp.h:291:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FLUSH_READY' since the value of 'CONFIG_LV_ATTRIBUTE_FLUSH_READY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FLUSH_READY void lv_disp_flush_ready(lv_disp_t * disp);
^
src/core/lv_disp.h:300:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FLUSH_READY' since the value of 'CONFIG_LV_ATTRIBUTE_FLUSH_READY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FLUSH_READY bool lv_disp_flush_is_last(lv_disp_t * disp);
^
src/hal/lv_hal_tick.h:43:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_TICK_INC' since the value of 'CONFIG_LV_ATTRIBUTE_TICK_INC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_TICK_INC void lv_tick_inc(uint32_t tick_period);
^
src/misc/lv_timer.h:68:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_TIMER_HANDLER' since the value of 'CONFIG_LV_ATTRIBUTE_TIMER_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_TIMER_HANDLER uint32_t lv_timer_handler(void);
^
src/misc/lv_timer.h:78:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_TIMER_HANDLER' since the value of 'CONFIG_LV_ATTRIBUTE_TIMER_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static inline LV_ATTRIBUTE_TIMER_HANDLER uint32_t lv_timer_handler_run_in_period(uint32_t ms)
^
src/lv_api_map.h:40:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_TIMER_HANDLER' since the value of 'CONFIG_LV_ATTRIBUTE_TIMER_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static inline LV_ATTRIBUTE_TIMER_HANDLER uint32_t lv_task_handler(void)
^
demos/benchmark/assets/img_benchmark_cogwheel_argb.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 445 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/benchmark/assets/img_benchmark_cogwheel_chroma_keyed.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 445 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/benchmark/assets/img_benchmark_cogwheel_indexed16.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/benchmark/assets/img_benchmark_cogwheel_rgb.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 445 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/benchmark/assets/img_benchmark_cogwheel_rgb565a8.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/benchmark/assets/lv_font_bechmark_montserrat_12_compr_az.c.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/benchmark/assets/lv_font_bechmark_montserrat_16_compr_az.c.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/benchmark/assets/lv_font_bechmark_montserrat_28_compr_az.c.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/benchmark/lv_demo_benchmark.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 450 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/flex_layout/lv_demo_flex_layout_ctrl_pad.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/flex_layout/lv_demo_flex_layout_flex_loader.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/flex_layout/lv_demo_flex_layout_main.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/flex_layout/lv_demo_flex_layout_view.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/flex_layout/lv_demo_flex_layout_view_child_node.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/flex_layout/lv_demo_flex_layout_view_ctrl_pad.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/keypad_encoder/lv_demo_keypad_encoder.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 449 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_corner_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_list_pause.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_list_pause_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_list_play.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_list_play_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_loop.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_loop_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_next.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_next_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_pause.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_pause_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_play.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_play_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_prev.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_prev_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_rnd.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_btn_rnd_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_corner_left.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_corner_left_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_corner_right.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_corner_right_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_cover_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_cover_1_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_cover_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_cover_2_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_cover_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_cover_3_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_icon_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_icon_1_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_icon_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_icon_2_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_icon_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_icon_3_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_icon_4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_icon_4_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_list_border.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_list_border_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_logo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_slider_knob.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_slider_knob_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_wave_bottom.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_wave_bottom_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_wave_top.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/assets/img_lv_demo_music_wave_top_large.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 451 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/lv_demo_music.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/lv_demo_music_list.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 453 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/music/lv_demo_music_main.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 459 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/stress/lv_demo_stress.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 449 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/widgets/assets/img_clothes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/widgets/assets/img_demo_widgets_avatar.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/widgets/assets/img_lvgl_logo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
demos/widgets/lv_demo_widgets.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 457 configurations. Use --force to check all configurations. [toomanyconfigs]

^
env_support/pikascript/pika_lv_point_t.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
env_support/pikascript/pika_lv_timer_t.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
env_support/pikascript/pika_lv_wegit.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
env_support/pikascript/pika_lvgl.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
env_support/pikascript/pika_lvgl_indev_t.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
env_support/pikascript/pika_lvgl_lv_event.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
env_support/pikascript/pika_lvgl_lv_obj.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
env_support/pikascript/pika_lvgl_lv_style_t.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
env_support/rt-thread/lv_rt_thread_port.c:36:0: information: Skipping configuration '__RTTHREAD__;rt_align' since the value of 'rt_align' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
rt_align(RT_ALIGN_SIZE)
^
examples/anim/lv_example_anim_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/anim/lv_example_anim_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/anim/lv_example_anim_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/anim/lv_example_anim_timeline_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/assets/animimg001.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/assets/animimg001.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' since the value of 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG001 uint8_t animimg001_map[] = {
^
examples/assets/animimg001.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG001 uint8_t animimg001_map[] = {
^
examples/assets/animimg002.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/assets/animimg002.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' since the value of 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG002 uint8_t animimg002_map[] = {
^
examples/assets/animimg002.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG002 uint8_t animimg002_map[] = {
^
examples/assets/animimg003.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/assets/animimg003.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' since the value of 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG003 uint8_t animimg003_map[] = {
^
examples/assets/animimg003.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG003 uint8_t animimg003_map[] = {
^
examples/assets/emoji/img_emoji_F617.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/assets/emoji/img_emoji_F617.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_1F617 uint8_t emoji_F617_map[] = {
^
examples/assets/img_caret_down.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/assets/img_caret_down.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' since the value of 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMG_CARET_DOWN uint8_t img_caret_down_map[] = {
^
examples/assets/img_caret_down.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMG_CARET_DOWN uint8_t img_caret_down_map[] = {
^
examples/assets/img_cogwheel_argb.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/assets/img_cogwheel_argb.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_COGWHEEL_ARGB uint8_t img_cogwheel_argb_map[] = {
^
examples/assets/img_cogwheel_chroma_keyed.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 446 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/assets/img_cogwheel_chroma_keyed.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_COGWHEEL_CHROMA_KEYED uint8_t img_cogwheel_chroma_keyed_map[] = {
^
examples/assets/img_cogwheel_indexed16.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/assets/img_cogwheel_indexed16.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_COGWHEEL_INDEXED16 uint8_t img_cogwheel_indexed16_map[] = {
^
examples/assets/img_cogwheel_rgb.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 446 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/assets/img_cogwheel_rgb.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_COGWHEEL_RGB uint8_t img_cogwheel_rgb_map[] = {
^
examples/assets/img_hand.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/assets/img_hand.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_IMG_IMG_HAND uint8_t img_hand_map[] = {
^
examples/assets/img_skew_strip.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/assets/img_skew_strip.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' since the value of 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMG_SKEW_STRIP uint8_t img_skew_strip_map[] = {
^
examples/assets/img_skew_strip.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMG_SKEW_STRIP uint8_t img_skew_strip_map[] = {
^
examples/assets/img_star.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/assets/img_star.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' since the value of 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMG_STAR uint8_t img_star_map[] = {
^
examples/assets/img_star.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMG_STAR uint8_t img_star_map[] = {
^
examples/assets/imgbtn_left.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/assets/imgbtn_left.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' since the value of 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMGBTN_LEFT uint8_t imgbtn_left_map[] = {
^
examples/assets/imgbtn_left.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMGBTN_LEFT uint8_t imgbtn_left_map[] = {
^
examples/assets/imgbtn_mid.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/assets/imgbtn_mid.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' since the value of 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMGBTN_MID uint8_t imgbtn_mid_map[] = {
^
examples/assets/imgbtn_mid.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMGBTN_MID uint8_t imgbtn_mid_map[] = {
^
examples/assets/imgbtn_right.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/assets/imgbtn_right.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' since the value of 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMGBTN_RIGHT uint8_t imgbtn_right_map[] = {
^
examples/assets/imgbtn_right.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMGBTN_RIGHT uint8_t imgbtn_right_map[] = {
^
examples/event/lv_example_event_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/event/lv_example_event_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/event/lv_example_event_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/event/lv_example_event_4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/get_started/lv_example_get_started_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/get_started/lv_example_get_started_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/get_started/lv_example_get_started_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/get_started/lv_example_get_started_4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/layouts/flex/lv_example_flex_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/layouts/flex/lv_example_flex_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/layouts/flex/lv_example_flex_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/layouts/flex/lv_example_flex_4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/layouts/flex/lv_example_flex_5.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/layouts/flex/lv_example_flex_6.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/layouts/grid/lv_example_grid_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/layouts/grid/lv_example_grid_1.c:20:16: style: The scope of the variable 'label' can be reduced. [variableScope]
    lv_obj_t * label;
               ^
examples/layouts/grid/lv_example_grid_1.c:21:16: style: The scope of the variable 'obj' can be reduced. [variableScope]
    lv_obj_t * obj;
               ^
examples/layouts/grid/lv_example_grid_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/layouts/grid/lv_example_grid_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/layouts/grid/lv_example_grid_3.c:25:16: style: The scope of the variable 'label' can be reduced. [variableScope]
    lv_obj_t * label;
               ^
examples/layouts/grid/lv_example_grid_3.c:26:16: style: The scope of the variable 'obj' can be reduced. [variableScope]
    lv_obj_t * obj;
               ^
examples/layouts/grid/lv_example_grid_4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/layouts/grid/lv_example_grid_4.c:22:16: style: The scope of the variable 'label' can be reduced. [variableScope]
    lv_obj_t * label;
               ^
examples/layouts/grid/lv_example_grid_4.c:23:16: style: The scope of the variable 'obj' can be reduced. [variableScope]
    lv_obj_t * obj;
               ^
examples/layouts/grid/lv_example_grid_5.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/layouts/grid/lv_example_grid_5.c:30:16: style: The scope of the variable 'label' can be reduced. [variableScope]
    lv_obj_t * label;
               ^
examples/layouts/grid/lv_example_grid_5.c:31:16: style: The scope of the variable 'obj' can be reduced. [variableScope]
    lv_obj_t * obj;
               ^
examples/layouts/grid/lv_example_grid_6.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/layouts/grid/lv_example_grid_6.c:20:16: style: The scope of the variable 'label' can be reduced. [variableScope]
    lv_obj_t * label;
               ^
examples/layouts/grid/lv_example_grid_6.c:21:16: style: The scope of the variable 'obj' can be reduced. [variableScope]
    lv_obj_t * obj;
               ^
examples/libs/barcode/lv_example_barcode_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/libs/bmp/lv_example_bmp_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/libs/ffmpeg/lv_example_ffmpeg_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/libs/ffmpeg/lv_example_ffmpeg_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/libs/freetype/lv_example_freetype_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 445 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/libs/gif/img_bulb_gif.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/libs/gif/img_bulb_gif.c:12:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' since the value of 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_BULB_GIF uint8_t img_blub_gif_map[] = {
^
examples/libs/gif/img_bulb_gif.c:12:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_BULB_GIF uint8_t img_blub_gif_map[] = {
^
examples/libs/gif/lv_example_gif_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/libs/png/img_wink_png.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/libs/png/lv_example_png_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/libs/qrcode/lv_example_qrcode_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/libs/rlottie/lv_example_rlottie_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/libs/rlottie/lv_example_rlottie_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/libs/rlottie/lv_example_rlottie_approve.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/libs/sjpg/lv_example_sjpg_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/libs/tiny_ttf/lv_example_tiny_ttf_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/libs/tiny_ttf/lv_example_tiny_ttf_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/file_explorer/lv_example_file_explorer_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 445 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/file_explorer/lv_example_file_explorer_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 445 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/file_explorer/lv_example_file_explorer_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 445 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/fragment/lv_example_fragment_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/fragment/lv_example_fragment_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/gridnav/lv_example_gridnav_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/gridnav/lv_example_gridnav_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/gridnav/lv_example_gridnav_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/gridnav/lv_example_gridnav_4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/ime/lv_example_ime_pinyin_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/ime/lv_example_ime_pinyin_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/imgfont/lv_example_imgfont_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 446 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/monkey/lv_example_monkey_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/monkey/lv_example_monkey_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/monkey/lv_example_monkey_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/msg/lv_example_msg_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/msg/lv_example_msg_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/msg/lv_example_msg_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/others/snapshot/lv_example_snapshot_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/porting/lv_port_fs_template.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/scroll/lv_example_scroll_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/scroll/lv_example_scroll_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/scroll/lv_example_scroll_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/scroll/lv_example_scroll_4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/scroll/lv_example_scroll_5.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/scroll/lv_example_scroll_6.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/styles/lv_example_style_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/styles/lv_example_style_10.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/styles/lv_example_style_11.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/styles/lv_example_style_12.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/styles/lv_example_style_13.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/styles/lv_example_style_14.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/styles/lv_example_style_15.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/styles/lv_example_style_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/styles/lv_example_style_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/styles/lv_example_style_4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/styles/lv_example_style_5.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/styles/lv_example_style_6.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/styles/lv_example_style_7.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/styles/lv_example_style_8.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/styles/lv_example_style_9.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/animimg/lv_example_animimg_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/arc/lv_example_arc_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/arc/lv_example_arc_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/bar/lv_example_bar_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/bar/lv_example_bar_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/bar/lv_example_bar_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/bar/lv_example_bar_4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/bar/lv_example_bar_5.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/bar/lv_example_bar_6.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/btn/lv_example_btn_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/btn/lv_example_btn_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/btn/lv_example_btn_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/btnmatrix/lv_example_btnmatrix_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/btnmatrix/lv_example_btnmatrix_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/btnmatrix/lv_example_btnmatrix_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/calendar/lv_example_calendar_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/canvas/lv_example_canvas_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/canvas/lv_example_canvas_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/canvas/lv_example_canvas_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/canvas/lv_example_canvas_3.c:31:22: style: Variable 'dsc.border_width' is reassigned a value before the old one has been used. [redundantAssignment]
    dsc.border_width = 3;
                     ^
examples/widgets/canvas/lv_example_canvas_3.c:25:22: note: dsc.border_width is assigned
    dsc.border_width = 3;
                     ^
examples/widgets/canvas/lv_example_canvas_3.c:31:22: note: dsc.border_width is overwritten
    dsc.border_width = 3;
                     ^
examples/widgets/canvas/lv_example_canvas_4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/canvas/lv_example_canvas_5.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/canvas/lv_example_canvas_6.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/canvas/lv_example_canvas_7.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/chart/lv_example_chart_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/chart/lv_example_chart_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/chart/lv_example_chart_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/chart/lv_example_chart_4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/chart/lv_example_chart_5.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/chart/lv_example_chart_6.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/chart/lv_example_chart_7.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/chart/lv_example_chart_8.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/chart/lv_example_chart_9.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/chart/lv_example_chart_9.c:18:20: style: Variable 'a[(s+2)%p]' is reassigned a value before the old one has been used. [redundantAssignment]
    a[(s + 2) % p] = LV_CHART_POINT_NONE;
                   ^
examples/widgets/chart/lv_example_chart_9.c:17:20: note: a[(s+2)%p] is assigned
    a[(s + 2) % p] = LV_CHART_POINT_NONE;
                   ^
examples/widgets/chart/lv_example_chart_9.c:18:20: note: a[(s+2)%p] is overwritten
    a[(s + 2) % p] = LV_CHART_POINT_NONE;
                   ^
examples/widgets/checkbox/lv_example_checkbox_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/checkbox/lv_example_checkbox_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/colorwheel/lv_example_colorwheel_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/dropdown/lv_example_dropdown_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/dropdown/lv_example_dropdown_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/dropdown/lv_example_dropdown_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/img/lv_example_img_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/img/lv_example_img_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/img/lv_example_img_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/img/lv_example_img_4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/imgbtn/lv_example_imgbtn_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/keyboard/lv_example_keyboard_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/keyboard/lv_example_keyboard_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/label/lv_example_label_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/label/lv_example_label_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/label/lv_example_label_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/label/lv_example_label_4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/label/lv_example_label_5.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/led/lv_example_led_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/line/lv_example_line_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/list/lv_example_list_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/list/lv_example_list_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/list/lv_example_list_2.c:55:18: style: Checking if unsigned expression 'index' is less than zero. [unsignedLessThanZero]
        if(index <= 0) return;
                 ^
examples/widgets/menu/lv_example_menu_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/menu/lv_example_menu_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/menu/lv_example_menu_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/menu/lv_example_menu_4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/menu/lv_example_menu_5.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/meter/lv_example_meter_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/meter/lv_example_meter_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/meter/lv_example_meter_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/meter/lv_example_meter_4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/msgbox/lv_example_msgbox_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/obj/lv_example_obj_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/obj/lv_example_obj_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/roller/lv_example_roller_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/roller/lv_example_roller_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/roller/lv_example_roller_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/slider/lv_example_slider_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/slider/lv_example_slider_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/slider/lv_example_slider_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/span/lv_example_span_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/spinbox/lv_example_spinbox_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/spinner/lv_example_spinner_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/switch/lv_example_switch_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/table/lv_example_table_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/table/lv_example_table_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/tabview/lv_example_tabview_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/tabview/lv_example_tabview_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/textarea/lv_example_textarea_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/textarea/lv_example_textarea_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/textarea/lv_example_textarea_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/tileview/lv_example_tileview_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/widgets/win/lv_example_win_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/lv_disp.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 433 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/lv_disp.c:551:34: style:inconclusive: Function 'lv_scr_load_anim' argument 1 names different: declaration 'scr' definition 'new_scr'. [funcArgNamesDifferent]
void lv_scr_load_anim(lv_obj_t * new_scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, bool auto_del)
                                 ^
src/core/lv_disp.h:381:42: note: Function 'lv_scr_load_anim' argument 1 names different: declaration 'scr' definition 'new_scr'.
void lv_scr_load_anim(struct _lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay,
                                         ^
src/core/lv_disp.c:551:34: note: Function 'lv_scr_load_anim' argument 1 names different: declaration 'scr' definition 'new_scr'.
void lv_scr_load_anim(lv_obj_t * new_scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, bool auto_del)
                                 ^
src/core/lv_disp.c:995:44: style:inconclusive: Function 'is_out_anim' argument 1 names different: declaration 'a' definition 'anim_type'. [funcArgNamesDifferent]
static bool is_out_anim(lv_scr_load_anim_t anim_type)
                                           ^
src/core/lv_disp.c:57:44: note: Function 'is_out_anim' argument 1 names different: declaration 'a' definition 'anim_type'.
static bool is_out_anim(lv_scr_load_anim_t a);
                                           ^
src/core/lv_disp.c:995:44: note: Function 'is_out_anim' argument 1 names different: declaration 'a' definition 'anim_type'.
static bool is_out_anim(lv_scr_load_anim_t anim_type)
                                           ^
src/core/lv_disp.c:75:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(disp);
^
src/core/lv_disp.c:115:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(disp->refr_timer);
^
src/core/lv_disp.c:481:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(draw_ctx);
^
src/core/lv_disp.c:703:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(disp);
^
src/core/lv_disp.c:710:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(disp);
^
src/core/lv_disp.c:717:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(disp);
^
src/core/lv_disp.c:724:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(disp);
^
src/draw/sw/lv_draw_sw_blend.h:61:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_draw_sw_blend_basic(struct _lv_draw_ctx_t * draw_ctx, const lv_draw_sw_blend_dsc_t * dsc);
^
src/draw/sw/lv_draw_sw.h:61:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_draw_sw_img_decoded(struct _lv_draw_ctx_t * draw_ctx, const lv_draw_img_dsc_t * draw_dsc,
^
src/draw/sw/lv_draw_sw.h:65:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_draw_sw_line(struct _lv_draw_ctx_t * draw_ctx, const lv_draw_line_dsc_t * dsc,
^
src/core/lv_disp.c:445:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FLUSH_READY' since the value of 'CONFIG_LV_ATTRIBUTE_FLUSH_READY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FLUSH_READY void lv_disp_flush_ready(lv_disp_t * disp)
^
src/core/lv_disp.c:451:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FLUSH_READY' since the value of 'CONFIG_LV_ATTRIBUTE_FLUSH_READY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FLUSH_READY bool lv_disp_flush_is_last(lv_disp_t * disp)
^
src/core/lv_group.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/lv_group.c:139:8: warning: Either the condition 'obj->spec_attr==NULL' is redundant or there is possible null pointer dereference: obj->spec_attr. [nullPointerRedundantCheck]
    obj->spec_attr->group_p = group;
       ^
src/core/lv_group.c:138:23: note: Assuming that condition 'obj->spec_attr==NULL' is not redundant
    if(obj->spec_attr == NULL) lv_obj_allocate_spec_attr(obj);
                      ^
src/core/lv_group.c:139:8: note: Null pointer dereference
    obj->spec_attr->group_p = group;
       ^
src/core/lv_group.c:244:17: warning: Either the condition 'g->obj_focus!=NULL' is redundant or there is possible null pointer dereference: i. [nullPointerRedundantCheck]
    lv_obj_t ** i;
                ^
src/core/lv_group.c:255:29: note: Assuming that condition 'g->obj_focus!=NULL' is not redundant
            if(g->obj_focus != NULL) {
                            ^
src/core/lv_group.c:253:28: note: Assignment to 'g->obj_focus=i'
            g->obj_focus = i;
                           ^
src/core/lv_group.c:244:17: note: Null pointer dereference
    lv_obj_t ** i;
                ^
src/core/lv_group.c:53:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(group);
^
src/core/lv_group.c:142:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(next);
^
src/core/lv_indev.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/lv_indev.c:621:20: warning: Identical inner 'if' condition is always true. [identicalInnerCondition]
                if(!dis) lv_obj_send_event(indev_obj_act, LV_EVENT_PRESSED, indev_act);
                   ^
src/core/lv_indev.c:614:17: note: outer condition: !dis
        else if(!dis) {
                ^
src/core/lv_indev.c:621:20: note: identical inner condition: !dis
                if(!dis) lv_obj_send_event(indev_obj_act, LV_EVENT_PRESSED, indev_act);
                   ^
src/core/lv_indev.c:999:26: warning: Identical inner 'if' condition is always true. [identicalInnerCondition]
        if(indev_obj_act == NULL) {
                         ^
src/core/lv_indev.c:998:22: note: outer condition: indev_obj_act==NULL
    if(indev_obj_act == NULL) {
                     ^
src/core/lv_indev.c:999:26: note: identical inner condition: indev_obj_act==NULL
        if(indev_obj_act == NULL) {
                         ^
src/core/lv_indev.c:96:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(indev);
^
src/core/lv_indev.c:119:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(indev);
^
src/core/lv_indev_scroll.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/lv_obj.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 452 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/lv_obj.c:507:8: style: The if condition is the same as the previous if condition [duplicateCondition]
    if(parent) obj->flags |= LV_OBJ_FLAG_SCROLL_CHAIN;
       ^
src/core/lv_obj.c:506:8: note: First condition
    if(parent) obj->flags |= LV_OBJ_FLAG_PRESS_LOCK;
       ^
src/core/lv_obj.c:507:8: note: Second condition
    if(parent) obj->flags |= LV_OBJ_FLAG_SCROLL_CHAIN;
       ^
src/core/lv_obj.c:171:18: style: Condition 'txt_u8[0]!=0xc3' is always true [knownConditionTrueFalse]
    if(txt_u8[0] != 0xc3 || txt_u8[1] != 0x81 || txt_u8[2] != 0x00) {
                 ^
src/core/lv_obj.c:703:36: style: Checking if unsigned expression 'lv_area_get_size(&hor_area)' is less than zero. [unsignedLessThanZero]
    if(lv_area_get_size(&hor_area) <= 0 && lv_area_get_size(&ver_area) <= 0) return;
                                   ^
src/core/lv_obj.c:703:72: style: Checking if unsigned expression 'lv_area_get_size(&ver_area)' is less than zero. [unsignedLessThanZero]
    if(lv_area_get_size(&hor_area) <= 0 && lv_area_get_size(&ver_area) <= 0) return;
                                                                       ^
src/core/lv_obj.c:411:31: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    return obj->state & state ? true : false;
                              ^
src/core/lv_obj.c:180:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MSG(LV_BIG_ENDIAN_SYSTEM == 1,
^
src/core/lv_obj.c:184:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MSG(LV_BIG_ENDIAN_SYSTEM == 0,
^
src/core/lv_obj.c:434:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(obj->spec_attr);
^
src/core/lv_obj_class.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/lv_obj_draw.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/lv_obj_draw.c:54:13: style: The if condition is the same as the previous if condition [duplicateCondition]
    if(part != LV_PART_MAIN) draw_dsc->blend_mode = lv_obj_get_style_blend_mode(obj, part);
            ^
src/core/lv_obj_draw.c:42:13: note: First condition
    if(part != LV_PART_MAIN) {
            ^
src/core/lv_obj_draw.c:54:13: note: Second condition
    if(part != LV_PART_MAIN) draw_dsc->blend_mode = lv_obj_get_style_blend_mode(obj, part);
            ^
src/core/lv_obj_event.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/lv_obj_event.c:107:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(obj);
^
src/core/lv_obj_event.c:115:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(obj);
^
src/core/lv_obj_event.c:122:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(obj);
^
src/core/lv_obj_pos.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/lv_obj_pos.c:207:12: style: Redundant condition: !on1. 'on1 || (!on1 && on2)' is equivalent to 'on1 || on2' [redundantCondition]
    if(on1 || (!on1 && on2)) lv_obj_scrollbar_invalidate(parent);
           ^
src/core/lv_obj_pos.c:760:16: style: Redundant condition: !on1. 'on1 || (!on1 && on2)' is equivalent to 'on1 || on2' [redundantCondition]
        if(on1 || (!on1 && on2)) lv_obj_scrollbar_invalidate(parent);
               ^
src/core/lv_obj_pos.c:93:10: style: The scope of the variable 'w_is_pct' can be reduced. [variableScope]
    bool w_is_pct = false;
         ^
src/core/lv_obj_pos.c:128:10: style: The scope of the variable 'h_is_pct' can be reduced. [variableScope]
    bool h_is_pct = false;
         ^
src/core/lv_obj_pos.c:93:19: style: Variable 'w_is_pct' is assigned a value that is never used. [unreadVariable]
    bool w_is_pct = false;
                  ^
src/core/lv_obj_pos.c:128:19: style: Variable 'h_is_pct' is assigned a value that is never used. [unreadVariable]
    bool h_is_pct = false;
                  ^
src/core/lv_obj_pos.c:322:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(LV_GC_ROOT(_lv_layout_list));
^
src/core/lv_obj_scroll.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/lv_obj_scroll.c:630:36: style: Checking if unsigned expression 'lv_area_get_size(&hor_area)' is less than zero. [unsignedLessThanZero]
    if(lv_area_get_size(&hor_area) <= 0 && lv_area_get_size(&ver_area) <= 0) return;
                                   ^
src/core/lv_obj_scroll.c:630:72: style: Checking if unsigned expression 'lv_area_get_size(&ver_area)' is less than zero. [unsignedLessThanZero]
    if(lv_area_get_size(&hor_area) <= 0 && lv_area_get_size(&ver_area) <= 0) return;
                                                                       ^
src/core/lv_obj_scroll.c:305:50: style:inconclusive: Function 'lv_obj_scroll_by' argument 2 names different: declaration 'x' definition 'dx'. [funcArgNamesDifferent]
void lv_obj_scroll_by(lv_obj_t * obj, lv_coord_t dx, lv_coord_t dy, lv_anim_enable_t anim_en)
                                                 ^
src/core/lv_obj_scroll.h:195:58: note: Function 'lv_obj_scroll_by' argument 2 names different: declaration 'x' definition 'dx'.
void lv_obj_scroll_by(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y, lv_anim_enable_t anim_en);
                                                         ^
src/core/lv_obj_scroll.c:305:50: note: Function 'lv_obj_scroll_by' argument 2 names different: declaration 'x' definition 'dx'.
void lv_obj_scroll_by(lv_obj_t * obj, lv_coord_t dx, lv_coord_t dy, lv_anim_enable_t anim_en)
                                                 ^
src/core/lv_obj_scroll.c:305:65: style:inconclusive: Function 'lv_obj_scroll_by' argument 3 names different: declaration 'y' definition 'dy'. [funcArgNamesDifferent]
void lv_obj_scroll_by(lv_obj_t * obj, lv_coord_t dx, lv_coord_t dy, lv_anim_enable_t anim_en)
                                                                ^
src/core/lv_obj_scroll.h:195:72: note: Function 'lv_obj_scroll_by' argument 3 names different: declaration 'y' definition 'dy'.
void lv_obj_scroll_by(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y, lv_anim_enable_t anim_en);
                                                                       ^
src/core/lv_obj_scroll.c:305:65: note: Function 'lv_obj_scroll_by' argument 3 names different: declaration 'y' definition 'dy'.
void lv_obj_scroll_by(lv_obj_t * obj, lv_coord_t dx, lv_coord_t dy, lv_anim_enable_t anim_en)
                                                                ^
src/core/lv_obj_scroll.c:450:60: style:inconclusive: Function 'lv_obj_get_scrollbar_area' argument 2 names different: declaration 'hor' definition 'hor_area'. [funcArgNamesDifferent]
void lv_obj_get_scrollbar_area(lv_obj_t * obj, lv_area_t * hor_area, lv_area_t * ver_area)
                                                           ^
src/core/lv_obj_scroll.h:284:68: note: Function 'lv_obj_get_scrollbar_area' argument 2 names different: declaration 'hor' definition 'hor_area'.
void lv_obj_get_scrollbar_area(struct _lv_obj_t * obj, lv_area_t * hor, lv_area_t * ver);
                                                                   ^
src/core/lv_obj_scroll.c:450:60: note: Function 'lv_obj_get_scrollbar_area' argument 2 names different: declaration 'hor' definition 'hor_area'.
void lv_obj_get_scrollbar_area(lv_obj_t * obj, lv_area_t * hor_area, lv_area_t * ver_area)
                                                           ^
src/core/lv_obj_scroll.c:450:82: style:inconclusive: Function 'lv_obj_get_scrollbar_area' argument 3 names different: declaration 'ver' definition 'ver_area'. [funcArgNamesDifferent]
void lv_obj_get_scrollbar_area(lv_obj_t * obj, lv_area_t * hor_area, lv_area_t * ver_area)
                                                                                 ^
src/core/lv_obj_scroll.h:284:85: note: Function 'lv_obj_get_scrollbar_area' argument 3 names different: declaration 'ver' definition 'ver_area'.
void lv_obj_get_scrollbar_area(struct _lv_obj_t * obj, lv_area_t * hor, lv_area_t * ver);
                                                                                    ^
src/core/lv_obj_scroll.c:450:82: note: Function 'lv_obj_get_scrollbar_area' argument 3 names different: declaration 'ver' definition 'ver_area'.
void lv_obj_get_scrollbar_area(lv_obj_t * obj, lv_area_t * hor_area, lv_area_t * ver_area)
                                                                                 ^
src/core/lv_obj_scroll.c:662:20: style: Variable 'sr' is assigned a value that is never used. [unreadVariable]
                sr = LV_MIN(sr, -sl);
                   ^
src/core/lv_obj_style.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/lv_obj_style.c:226:63: style:inconclusive: Function 'lv_obj_refresh_style' argument 2 names different: declaration 'part' definition 'selector'. [funcArgNamesDifferent]
void lv_obj_refresh_style(lv_obj_t * obj, lv_style_selector_t selector, lv_style_prop_t prop)
                                                              ^
src/core/lv_obj_style.h:125:61: note: Function 'lv_obj_refresh_style' argument 2 names different: declaration 'part' definition 'selector'.
void lv_obj_refresh_style(struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop);
                                                            ^
src/core/lv_obj_style.c:226:63: note: Function 'lv_obj_refresh_style' argument 2 names different: declaration 'part' definition 'selector'.
void lv_obj_refresh_style(lv_obj_t * obj, lv_style_selector_t selector, lv_style_prop_t prop)
                                                              ^
src/core/lv_obj_style.c:385:77: style:inconclusive: Function '_lv_obj_style_create_transition' argument 5 names different: declaration 'tr' definition 'tr_dsc'. [funcArgNamesDifferent]
                                     const _lv_obj_style_transition_dsc_t * tr_dsc)
                                                                            ^
src/core/lv_obj_style.h:185:99: note: Function '_lv_obj_style_create_transition' argument 5 names different: declaration 'tr' definition 'tr_dsc'.
                                     lv_state_t new_state, const _lv_obj_style_transition_dsc_t * tr);
                                                                                                  ^
src/core/lv_obj_style.c:385:77: note: Function '_lv_obj_style_create_transition' argument 5 names different: declaration 'tr' definition 'tr_dsc'.
                                     const _lv_obj_style_transition_dsc_t * tr_dsc)
                                                                            ^
src/core/lv_obj_style.c:605:79: style:inconclusive: Function 'get_trans_style' argument 2 names different: declaration 'part' definition 'selector'. [funcArgNamesDifferent]
static _lv_obj_style_t * get_trans_style(lv_obj_t * obj,  lv_style_selector_t selector)
                                                                              ^
src/core/lv_obj_style.c:48:67: note: Function 'get_trans_style' argument 2 names different: declaration 'part' definition 'selector'.
static _lv_obj_style_t * get_trans_style(lv_obj_t * obj, uint32_t part);
                                                                  ^
src/core/lv_obj_style.c:605:79: note: Function 'get_trans_style' argument 2 names different: declaration 'part' definition 'selector'.
static _lv_obj_style_t * get_trans_style(lv_obj_t * obj,  lv_style_selector_t selector)
                                                                              ^
src/core/lv_obj_style.c:461:45: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
        bool valid1 = state_act & (~state1) ? false : true;
                                            ^
src/core/lv_obj_style.c:462:45: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
        bool valid2 = state_act & (~state2) ? false : true;
                                            ^
src/core/lv_obj_style.c:80:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT(obj->style_cnt < 63);
^
src/core/lv_obj_style.c:99:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT(obj->style_cnt != 0);
^
src/core/lv_obj_style.c:101:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(obj->styles);
^
src/core/lv_obj_style.c:415:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(tr);
^
src/core/lv_obj_style.c:578:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT(obj->style_cnt != 0);
^
src/core/lv_obj_style.c:580:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(obj->styles);
^
src/core/lv_obj_style.c:616:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT(obj->style_cnt != 0);
^
src/core/lv_obj_style_gen.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/lv_obj_tree.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/lv_refr.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 433 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/lv_refr.c:276:39: style:inconclusive: Function '_lv_disp_refr_timer' argument 1 names different: declaration 'timer' definition 'tmr'. [funcArgNamesDifferent]
void _lv_disp_refr_timer(lv_timer_t * tmr)
                                      ^
src/core/lv_refr.h:98:39: note: Function '_lv_disp_refr_timer' argument 1 names different: declaration 'timer' definition 'tmr'.
void _lv_disp_refr_timer(lv_timer_t * timer);
                                      ^
src/core/lv_refr.c:276:39: note: Function '_lv_disp_refr_timer' argument 1 names different: declaration 'timer' definition 'tmr'.
void _lv_disp_refr_timer(lv_timer_t * tmr)
                                      ^
src/core/lv_refr.c:34:17: style: struct member 'perf_monitor_t::perf_last_time' is never used. [unusedStructMember]
    uint32_t    perf_last_time;
                ^
src/core/lv_refr.c:35:17: style: struct member 'perf_monitor_t::elaps_sum' is never used. [unusedStructMember]
    uint32_t    elaps_sum;
                ^
src/core/lv_refr.c:36:17: style: struct member 'perf_monitor_t::frame_cnt' is never used. [unusedStructMember]
    uint32_t    frame_cnt;
                ^
src/core/lv_refr.c:37:17: style: struct member 'perf_monitor_t::fps_sum_cnt' is never used. [unusedStructMember]
    uint32_t    fps_sum_cnt;
                ^
src/core/lv_refr.c:38:17: style: struct member 'perf_monitor_t::fps_sum_all' is never used. [unusedStructMember]
    uint32_t    fps_sum_all;
                ^
src/core/lv_refr.c:40:17: style: struct member 'perf_monitor_t::perf_label' is never used. [unusedStructMember]
    lv_obj_t  * perf_label;
                ^
src/core/lv_refr.c:45:18: style: struct member 'mem_monitor_t::mem_last_time' is never used. [unusedStructMember]
    uint32_t     mem_last_time;
                 ^
src/core/lv_refr.c:47:18: style: struct member 'mem_monitor_t::mem_label' is never used. [unusedStructMember]
    lv_obj_t  *  mem_label;
                 ^
src/core/lv_refr.c:1021:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static LV_ATTRIBUTE_FAST_MEM void draw_buf_rotate_90(bool invert_i, lv_coord_t area_w, lv_coord_t area_h,
^
src/core/lv_theme.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/lv_theme.c:65:63: style:inconclusive: Function 'lv_theme_set_parent' argument 2 names different: declaration 'parent' definition 'base'. [funcArgNamesDifferent]
void lv_theme_set_parent(lv_theme_t * new_theme, lv_theme_t * base)
                                                              ^
src/core/lv_theme.h:68:63: note: Function 'lv_theme_set_parent' argument 2 names different: declaration 'parent' definition 'base'.
void lv_theme_set_parent(lv_theme_t * new_theme, lv_theme_t * parent);
                                                              ^
src/core/lv_theme.c:65:63: note: Function 'lv_theme_set_parent' argument 2 names different: declaration 'parent' definition 'base'.
void lv_theme_set_parent(lv_theme_t * new_theme, lv_theme_t * base)
                                                              ^
src/dev/disp/fb/lv_linux_fbdev.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 333 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/dev/disp/tft_espi/lv_tft_espi.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 332 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_color.h:389:14: style: C-style pointer casting [cstyleCast]
    return *((lv_color8_t *) buf);
             ^
src/misc/lv_color.h:411:14: style: C-style pointer casting [cstyleCast]
    return *((lv_color32_t *) buf);
             ^
src/dev/sdl/lv_sdl_keyboard.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 332 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/dev/sdl/lv_sdl_mouse.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 332 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/dev/sdl/lv_sdl_mousewheel.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 333 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/dev/sdl/lv_sdl_window.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 436 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/arm2d/lv_gpu_arm2d.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/gd32_ipa/lv_gpu_gd32_ipa.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 435 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/lv_draw.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 426 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/lv_draw_arc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 425 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/lv_draw_img.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/lv_draw_img.c:28:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_res_t decode_and_draw(lv_draw_ctx_t * draw_ctx, const lv_draw_img_dsc_t * draw_dsc,
^
src/draw/lv_draw_img.c:132:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_res_t decode_and_draw(lv_draw_ctx_t * draw_ctx, const lv_draw_img_dsc_t * draw_dsc,
^
src/draw/lv_draw_label.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/lv_draw_label.c:202:27: style: Variable 'cmd_state' is assigned a value that is never used. [unreadVariable]
    cmd_state_t cmd_state = CMD_STATE_WAIT;
                          ^
src/draw/lv_draw_label.c:77:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_draw_label(lv_draw_ctx_t * draw_ctx, const lv_draw_label_dsc_t * dsc,
^
src/draw/lv_draw_layer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/lv_draw_layer.c:43:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(layer_ctx);
^
src/draw/lv_draw_line.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/lv_draw_line.c:37:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_draw_line_dsc_init(lv_draw_line_dsc_t * dsc)
^
src/draw/lv_draw_line.c:45:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_draw_line(struct _lv_draw_ctx_t * draw_ctx, const lv_draw_line_dsc_t * dsc,
^
src/draw/lv_draw_mask.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 426 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/lv_draw_mask.c:1505:20: style: Array index 'i' is used before limits check. [arrayIndexThenCheck]
        for(; cir_y[i] == y && i < (int32_t)cir_size; i++) {
                   ^
src/draw/lv_draw_mask.c:628:26: style: Condition 'k>=0' is always true [knownConditionTrueFalse]
                    if(k >= 0 && k < len) lv_memzero(&mask_buf[k], len - k);
                         ^
src/draw/lv_draw_mask.c:627:26: note: Assuming that condition 'k<0' is not redundant
                    if(k < 0) return LV_DRAW_MASK_RES_TRANSP;
                         ^
src/draw/lv_draw_mask.c:628:26: note: Condition 'k>=0' is always true
                    if(k >= 0 && k < len) lv_memzero(&mask_buf[k], len - k);
                         ^
src/draw/lv_draw_mask.c:598:95: style:inconclusive: Function 'lv_draw_mask_line' argument 5 names different: declaration 'param' definition 'p'. [funcArgNamesDifferent]
                                                                  lv_draw_mask_line_param_t * p)
                                                                                              ^
src/draw/lv_draw_mask.c:31:95: note: Function 'lv_draw_mask_line' argument 5 names different: declaration 'param' definition 'p'.
                                                                  lv_draw_mask_line_param_t * param);
                                                                                              ^
src/draw/lv_draw_mask.c:598:95: note: Function 'lv_draw_mask_line' argument 5 names different: declaration 'param' definition 'p'.
                                                                  lv_draw_mask_line_param_t * p)
                                                                                              ^
src/draw/lv_draw_mask.c:916:97: style:inconclusive: Function 'lv_draw_mask_angle' argument 5 names different: declaration 'param' definition 'p'. [funcArgNamesDifferent]
                                                                   lv_draw_mask_angle_param_t * p)
                                                                                                ^
src/draw/lv_draw_mask.c:37:97: note: Function 'lv_draw_mask_angle' argument 5 names different: declaration 'param' definition 'p'.
                                                                   lv_draw_mask_angle_param_t * param);
                                                                                                ^
src/draw/lv_draw_mask.c:916:97: note: Function 'lv_draw_mask_angle' argument 5 names different: declaration 'param' definition 'p'.
                                                                   lv_draw_mask_angle_param_t * p)
                                                                                                ^
src/draw/lv_draw_mask.c:1055:99: style:inconclusive: Function 'lv_draw_mask_radius' argument 5 names different: declaration 'param' definition 'p'. [funcArgNamesDifferent]
                                                                    lv_draw_mask_radius_param_t * p)
                                                                                                  ^
src/draw/lv_draw_mask.c:34:99: note: Function 'lv_draw_mask_radius' argument 5 names different: declaration 'param' definition 'p'.
                                                                    lv_draw_mask_radius_param_t * param);
                                                                                                  ^
src/draw/lv_draw_mask.c:1055:99: note: Function 'lv_draw_mask_radius' argument 5 names different: declaration 'param' definition 'p'.
                                                                    lv_draw_mask_radius_param_t * p)
                                                                                                  ^
src/draw/lv_draw_mask.c:1172:95: style:inconclusive: Function 'lv_draw_mask_fade' argument 5 names different: declaration 'param' definition 'p'. [funcArgNamesDifferent]
                                                                  lv_draw_mask_fade_param_t * p)
                                                                                              ^
src/draw/lv_draw_mask.c:40:95: note: Function 'lv_draw_mask_fade' argument 5 names different: declaration 'param' definition 'p'.
                                                                  lv_draw_mask_fade_param_t * param);
                                                                                              ^
src/draw/lv_draw_mask.c:1172:95: note: Function 'lv_draw_mask_fade' argument 5 names different: declaration 'param' definition 'p'.
                                                                  lv_draw_mask_fade_param_t * p)
                                                                                              ^
src/draw/lv_draw_mask.c:1218:93: style:inconclusive: Function 'lv_draw_mask_map' argument 5 names different: declaration 'param' definition 'p'. [funcArgNamesDifferent]
                                                                 lv_draw_mask_map_param_t * p)
                                                                                            ^
src/draw/lv_draw_mask.c:43:93: note: Function 'lv_draw_mask_map' argument 5 names different: declaration 'param' definition 'p'.
                                                                 lv_draw_mask_map_param_t * param);
                                                                                            ^
src/draw/lv_draw_mask.c:1218:93: note: Function 'lv_draw_mask_map' argument 5 names different: declaration 'param' definition 'p'.
                                                                 lv_draw_mask_map_param_t * p)
                                                                                            ^
src/draw/lv_draw_mask.c:869:31: style: Variable 'k' is assigned a value that is never used. [unreadVariable]
                if(k > len) k = len;
                              ^
src/draw/lv_draw_mask.c:1115:11: style: Variable 'abs_x' is assigned a value that is never used. [unreadVariable]
    abs_x -= rect.x1;
          ^
src/draw/lv_draw_mask.c:444:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MSG(start_angle >= 0 && start_angle <= 360, "Unexpected start angle");
^
src/draw/lv_draw_mask.c:452:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MSG(end_angle >= 0 && start_angle <= 360, "Unexpected end angle");
^
src/draw/lv_draw_mask.c:516:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(entry);
^
src/draw/lv_draw_mask.c:1373:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(c->buf);
^
src/draw/lv_draw_mask.c:29:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_line(lv_opa_t * mask_buf, lv_coord_t abs_x,
^
src/draw/lv_draw_mask.c:32:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_radius(lv_opa_t * mask_buf, lv_coord_t abs_x,
^
src/draw/lv_draw_mask.c:35:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_angle(lv_opa_t * mask_buf, lv_coord_t abs_x,
^
src/draw/lv_draw_mask.c:38:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_fade(lv_opa_t * mask_buf, lv_coord_t abs_x,
^
src/draw/lv_draw_mask.c:41:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_map(lv_opa_t * mask_buf, lv_coord_t abs_x,
^
src/draw/lv_draw_mask.c:44:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_polygon(lv_opa_t * mask_buf, lv_coord_t abs_x,
^
src/draw/lv_draw_mask.c:48:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t line_mask_flat(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,
^
src/draw/lv_draw_mask.c:51:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t line_mask_steep(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,
^
src/draw/lv_draw_mask.c:61:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static inline lv_opa_t mask_mix(lv_opa_t mask_act, lv_opa_t mask_new);
^
src/draw/lv_draw_mask.c:111:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM lv_draw_mask_res_t lv_draw_mask_apply(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,
^
src/draw/lv_draw_mask.c:145:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM lv_draw_mask_res_t lv_draw_mask_apply_ids(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,
^
src/draw/lv_draw_mask.c:246:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM uint8_t lv_draw_mask_get_cnt(void)
^
src/draw/lv_draw_mask.c:596:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_line(lv_opa_t * mask_buf, lv_coord_t abs_x,
^
src/draw/lv_draw_mask.c:656:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t line_mask_flat(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,
^
src/draw/lv_draw_mask.c:772:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t line_mask_steep(lv_opa_t * mask_buf, lv_coord_t abs_x, lv_coord_t abs_y,
^
src/draw/lv_draw_mask.c:914:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_angle(lv_opa_t * mask_buf, lv_coord_t abs_x,
^
src/draw/lv_draw_mask.c:1053:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_radius(lv_opa_t * mask_buf, lv_coord_t abs_x,
^
src/draw/lv_draw_mask.c:1170:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_fade(lv_opa_t * mask_buf, lv_coord_t abs_x,
^
src/draw/lv_draw_mask.c:1216:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_map(lv_opa_t * mask_buf, lv_coord_t abs_x,
^
src/draw/lv_draw_mask.c:1250:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static lv_draw_mask_res_t lv_draw_mask_polygon(lv_opa_t * mask_buf, lv_coord_t abs_x,
^
src/draw/lv_draw_mask.c:1523:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static inline lv_opa_t mask_mix(lv_opa_t mask_act, lv_opa_t mask_new)
^
src/draw/lv_draw_rect.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 425 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/lv_draw_rect.c:37:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_draw_rect_dsc_init(lv_draw_rect_dsc_t * dsc)
^
src/draw/lv_draw_transform.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 425 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/lv_draw_transform.c:43:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(draw_ctx);
^
src/draw/lv_draw_triangle.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 425 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/lv_img_buf.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 422 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/lv_img_cache.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 331 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/lv_img_cache.c:39:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(manager);
^
src/draw/lv_img_cache.c:45:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(manager);
^
src/draw/lv_img_cache.c:51:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(img_cache_manager.open_cb);
^
src/draw/lv_img_cache.c:57:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(img_cache_manager.set_size_cb);
^
src/draw/lv_img_cache.c:63:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(img_cache_manager.invalidate_src_cb);
^
src/draw/lv_img_cache_builtin.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 426 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/lv_img_decoder.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 424 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/lv_img_decoder.c:56:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(decoder);
^
src/draw/lv_img_decoder.c:116:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(dsc->src);
^
src/draw/lv_img_decoder.c:199:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(decoder);
^
src/draw/lv_img_decoder.c:330:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            LV_ASSERT_MALLOC(dsc->user_data);
^
src/draw/nxp/pxp/lv_draw_pxp.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/nxp/pxp/lv_draw_pxp_blend.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/nxp/pxp/lv_draw_pxp_blend.c:54:0: error: Syntax error in #elif [preprocessorErrorDirective]
#elif
^
src/lv_conf_kconfig.h:11:0: error: No header in #include [preprocessorErrorDirective]
#  include LV_CONF_KCONFIG_EXTERNAL_INCLUDE
^
src/draw/nxp/pxp/lv_draw_pxp_blend.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/draw/nxp/pxp/lv_gpu_nxp_pxp.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 430 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/nxp/pxp/lv_gpu_nxp_pxp_osa.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 330 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/nxp/vglite/lv_draw_vglite.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/nxp/vglite/lv_draw_vglite_arc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/nxp/vglite/lv_draw_vglite_arc.c:361:11: style: The scope of the variable 'a_pt' can be reduced. [variableScope]
    float a_pt;
          ^
src/draw/nxp/vglite/lv_draw_vglite_blend.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/nxp/vglite/lv_draw_vglite_line.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/nxp/vglite/lv_draw_vglite_rect.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/nxp/vglite/lv_vglite_buf.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/nxp/vglite/lv_vglite_utils.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sdl/lv_draw_sdl.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sdl/lv_draw_sdl_arc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sdl/lv_draw_sdl_bg.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sdl/lv_draw_sdl_composite.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 430 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sdl/lv_draw_sdl_img.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sdl/lv_draw_sdl_label.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sdl/lv_draw_sdl_layer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sdl/lv_draw_sdl_line.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sdl/lv_draw_sdl_mask.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sdl/lv_draw_sdl_polygon.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sdl/lv_draw_sdl_rect.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sdl/lv_draw_sdl_stack_blur.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 331 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sdl/lv_draw_sdl_texture_cache.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sdl/lv_draw_sdl_utils.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 430 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/stm32_dma2d/lv_gpu_stm32_dma2d.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 434 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sw/lv_draw_sw.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sw/lv_draw_sw.c:118:31: style: Condition 'draw_ctx->color_format==LV_COLOR_FORMAT_RGB565' is always false [knownConditionTrueFalse]
    if(draw_ctx->color_format == LV_COLOR_FORMAT_RGB565) return;
                              ^
src/draw/sw/lv_draw_sw.c:111:31: note: Assuming that condition 'draw_ctx->color_format==LV_COLOR_FORMAT_NATIVE' is not redundant
    if(draw_ctx->color_format == LV_COLOR_FORMAT_NATIVE) return;
                              ^
src/draw/sw/lv_draw_sw.c:118:31: note: Condition 'draw_ctx->color_format==LV_COLOR_FORMAT_RGB565' is always false
    if(draw_ctx->color_format == LV_COLOR_FORMAT_RGB565) return;
                              ^
src/draw/sw/lv_draw_sw.c:172:5: style:inconclusive: Statements following return, break, continue, goto or throw will never be executed. [unreachableCode]
    LV_LOG_WARN("Couldn't convert the image to the desired format");
    ^
src/draw/sw/lv_draw_sw_arc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sw/lv_draw_sw_arc.c:280:69: style: Condition 'q->start_quarter!=0' is always true [knownConditionTrueFalse]
    else if((q->start_quarter == q->end_quarter && q->start_quarter != 0 && q->end_angle < q->start_angle) ||
                                                                    ^
src/draw/sw/lv_draw_sw_arc.c:251:30: note: Assuming that condition 'q->start_quarter==0' is not redundant
    else if(q->start_quarter == 0 || q->end_quarter == 0) {
                             ^
src/draw/sw/lv_draw_sw_arc.c:280:69: note: Condition 'q->start_quarter!=0' is always true
    else if((q->start_quarter == q->end_quarter && q->start_quarter != 0 && q->end_angle < q->start_angle) ||
                                                                    ^
src/draw/sw/lv_draw_sw_arc.c:347:69: style: Condition 'q->start_quarter!=1' is always true [knownConditionTrueFalse]
    else if((q->start_quarter == q->end_quarter && q->start_quarter != 1 && q->end_angle < q->start_angle) ||
                                                                    ^
src/draw/sw/lv_draw_sw_arc.c:318:30: note: Assuming that condition 'q->start_quarter==1' is not redundant
    else if(q->start_quarter == 1 || q->end_quarter == 1) {
                             ^
src/draw/sw/lv_draw_sw_arc.c:347:69: note: Condition 'q->start_quarter!=1' is always true
    else if((q->start_quarter == q->end_quarter && q->start_quarter != 1 && q->end_angle < q->start_angle) ||
                                                                    ^
src/draw/sw/lv_draw_sw_arc.c:414:69: style: Condition 'q->start_quarter!=2' is always true [knownConditionTrueFalse]
    else if((q->start_quarter == q->end_quarter && q->start_quarter != 2 && q->end_angle < q->start_angle) ||
                                                                    ^
src/draw/sw/lv_draw_sw_arc.c:385:30: note: Assuming that condition 'q->start_quarter==2' is not redundant
    else if(q->start_quarter == 2 || q->end_quarter == 2) {
                             ^
src/draw/sw/lv_draw_sw_arc.c:414:69: note: Condition 'q->start_quarter!=2' is always true
    else if((q->start_quarter == q->end_quarter && q->start_quarter != 2 && q->end_angle < q->start_angle) ||
                                                                    ^
src/draw/sw/lv_draw_sw_arc.c:481:69: style: Condition 'q->start_quarter!=3' is always true [knownConditionTrueFalse]
    else if((q->start_quarter == q->end_quarter && q->start_quarter != 3 && q->end_angle < q->start_angle) ||
                                                                    ^
src/draw/sw/lv_draw_sw_arc.c:452:30: note: Assuming that condition 'q->start_quarter==3' is not redundant
    else if(q->start_quarter == 3 || q->end_quarter == 3) {
                             ^
src/draw/sw/lv_draw_sw_arc.c:481:69: note: Condition 'q->start_quarter!=3' is always true
    else if((q->start_quarter == q->end_quarter && q->start_quarter != 3 && q->end_angle < q->start_angle) ||
                                                                    ^
src/draw/sw/lv_draw_sw_arc.c:517:30: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
        cir_x = (cir_x - pa) >> ps;
                             ^
src/draw/sw/lv_draw_sw_arc.c:528:30: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
        cir_y = (cir_y - pa) >> ps;
                             ^
src/draw/sw/lv_draw_sw_blend.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 433 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sw/lv_draw_sw_blend.c:445:34: style: Condition '*mask!=last_mask' is always true [knownConditionTrueFalse]
                        if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
                                 ^
src/draw/sw/lv_draw_sw_blend.c:444:24: note: Assuming that condition '*mask' is not redundant
                    if(*mask) {
                       ^
src/draw/sw/lv_draw_sw_blend.c:445:34: note: Condition '*mask!=last_mask' is always true
                        if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
                                 ^
src/draw/sw/lv_draw_sw_blend.c:598:28: style: Variable 'mask_tmp_x' is reassigned a value before the old one has been used. [redundantAssignment]
                mask_tmp_x = (const lv_opa_t *)mask32;
                           ^
src/draw/sw/lv_draw_sw_blend.c:592:29: note: mask_tmp_x is assigned
                            MAP_NORMAL_MASK_PX(x + 3)
                            ^
src/draw/sw/lv_draw_sw_blend.c:598:28: note: mask_tmp_x is overwritten
                mask_tmp_x = (const lv_opa_t *)mask32;
                           ^
src/draw/sw/lv_draw_sw_blend.c:29:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void fill_normal(lv_color_t * dest_buf, const lv_area_t * dest_area,
^
src/draw/sw/lv_draw_sw_blend.c:33:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void fill_argb(lv_color_t * dest_buf, const lv_area_t * dest_area,
^
src/draw/sw/lv_draw_sw_blend.c:39:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void map_normal(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
^
src/draw/sw/lv_draw_sw_blend.c:42:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void map_argb(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
^
src/draw/sw/lv_draw_sw_blend.c:92:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_draw_sw_blend_basic(lv_draw_ctx_t * draw_ctx, const lv_draw_sw_blend_dsc_t * dsc)
^
src/draw/sw/lv_draw_sw_blend.c:171:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void fill_normal(lv_color_t * dest_buf, const lv_area_t * dest_area,
^
src/draw/sw/lv_draw_sw_blend.c:378:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void fill_argb(lv_color_t * dest_buf, const lv_area_t * dest_area,
^
src/draw/sw/lv_draw_sw_blend.c:532:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void map_normal(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
^
src/draw/sw/lv_draw_sw_blend.c:625:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void map_argb(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
^
src/draw/sw/lv_draw_sw_dither.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 424 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sw/lv_draw_sw_gradient.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sw/lv_draw_sw_gradient.c:334:33: error: Division by zero. [zerodiv]
    lv_opa_t mix = (frac * 255) / d;
                                ^
src/draw/sw/lv_draw_sw_gradient.c:317:17: note: Assignment 'd=0', assigned value is 0
    int32_t d = 0;
                ^
src/draw/sw/lv_draw_sw_gradient.c:334:33: note: Division by zero
    lv_opa_t mix = (frac * 255) / d;
                                ^
src/draw/sw/lv_draw_sw_gradient.c:67:51: warning: Function 'compute_key' argument order different: declaration 'g, w, h' definition 'g, size, w' [funcArgOrderDifferent]
static uint32_t compute_key(const lv_grad_dsc_t * g, lv_coord_t size, lv_coord_t w)
                                                  ^
src/draw/sw/lv_draw_sw_gradient.c:50:52: note: Function 'compute_key' argument order different: declaration 'g, w, h' definition 'g, size, w'
static  uint32_t compute_key(const lv_grad_dsc_t * g, lv_coord_t w, lv_coord_t h);
                                                   ^
src/draw/sw/lv_draw_sw_gradient.c:67:51: note: Function 'compute_key' argument order different: declaration 'g, w, h' definition 'g, size, w'
static uint32_t compute_key(const lv_grad_dsc_t * g, lv_coord_t size, lv_coord_t w)
                                                  ^
src/draw/sw/lv_draw_sw_gradient.c:253:51: style:inconclusive: Function 'lv_gradient_get' argument 1 names different: declaration 'gradient' definition 'g'. [funcArgNamesDifferent]
lv_grad_t * lv_gradient_get(const lv_grad_dsc_t * g, lv_coord_t w, lv_coord_t h)
                                                  ^
src/draw/sw/lv_draw_sw_gradient.h:87:51: note: Function 'lv_gradient_get' argument 1 names different: declaration 'gradient' definition 'g'.
lv_grad_t * lv_gradient_get(const lv_grad_dsc_t * gradient, lv_coord_t w, lv_coord_t h);
                                                  ^
src/draw/sw/lv_draw_sw_gradient.c:253:51: note: Function 'lv_gradient_get' argument 1 names different: declaration 'gradient' definition 'g'.
lv_grad_t * lv_gradient_get(const lv_grad_dsc_t * g, lv_coord_t w, lv_coord_t h)
                                                  ^
src/draw/sw/lv_draw_sw_gradient.c:195:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            LV_ASSERT_MALLOC(item);
^
src/draw/sw/lv_draw_sw_gradient.c:248:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(LV_GC_ROOT(_lv_grad_cache_mem));
^
src/draw/sw/lv_draw_sw_gradient.c:330:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT(d != 0);
^
src/draw/sw/lv_draw_sw_gradient.c:298:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM lv_grad_color_t lv_gradient_calculate(const lv_grad_dsc_t * dsc, lv_coord_t range,
^
src/draw/sw/lv_draw_sw_img.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 433 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sw/lv_draw_sw_img.c:139:28: style: Variable 'blend_dsc.mask_res' is reassigned a value before the old one has been used. [redundantAssignment]
        blend_dsc.mask_res = mask_res_def;
                           ^
src/draw/sw/lv_draw_sw_img.c:131:28: note: blend_dsc.mask_res is assigned
        blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
                           ^
src/draw/sw/lv_draw_sw_img.c:139:28: note: blend_dsc.mask_res is overwritten
        blend_dsc.mask_res = mask_res_def;
                           ^
src/draw/sw/lv_draw_sw_img.c:48:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_draw_sw_img_decoded(struct _lv_draw_ctx_t * draw_ctx, const lv_draw_img_dsc_t * draw_dsc,
^
src/draw/sw/lv_draw_sw_layer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sw/lv_draw_sw_layer.c:74:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(layer_sw_ctx->base_draw.buf);
^
src/draw/sw/lv_draw_sw_letter.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 435 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sw/lv_draw_sw_letter.c:362:16: style: Variable 'mask_p' is assigned a value that is never used. [unreadVariable]
        mask_p = 0;
               ^
src/draw/sw/lv_draw_sw_letter.c:32:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void draw_letter_normal(lv_draw_ctx_t * draw_ctx, const lv_draw_label_dsc_t * dsc,
^
src/draw/sw/lv_draw_sw_letter.c:179:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void draw_letter_normal(lv_draw_ctx_t * draw_ctx, const lv_draw_label_dsc_t * dsc,
^
src/draw/sw/lv_draw_sw_line.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sw/lv_draw_sw_line.c:28:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void draw_line_skew(struct _lv_draw_ctx_t * draw_ctx, const lv_draw_line_dsc_t * dsc,
^
src/draw/sw/lv_draw_sw_line.c:30:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void draw_line_hor(struct _lv_draw_ctx_t * draw_ctx, const lv_draw_line_dsc_t * dsc,
^
src/draw/sw/lv_draw_sw_line.c:32:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void draw_line_ver(struct _lv_draw_ctx_t * draw_ctx, const lv_draw_line_dsc_t * dsc,
^
src/draw/sw/lv_draw_sw_line.c:54:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_draw_sw_line(struct _lv_draw_ctx_t * draw_ctx, const lv_draw_line_dsc_t * dsc,
^
src/draw/sw/lv_draw_sw_line.c:114:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void draw_line_hor(struct _lv_draw_ctx_t * draw_ctx, const lv_draw_line_dsc_t * dsc,
^
src/draw/sw/lv_draw_sw_line.c:200:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void draw_line_ver(struct _lv_draw_ctx_t * draw_ctx, const lv_draw_line_dsc_t * dsc,
^
src/draw/sw/lv_draw_sw_line.c:280:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void draw_line_skew(struct _lv_draw_ctx_t * draw_ctx, const lv_draw_line_dsc_t * dsc,
^
src/draw/sw/lv_draw_sw_polygon.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sw/lv_draw_sw_polygon.c:98:5: error: Address of local auto-variable assigned to a function parameter. [autoVariables]
    draw_ctx->clip_area = &clip_area;
    ^
src/draw/sw/lv_draw_sw_rect.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 434 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/sw/lv_draw_sw_rect.c:963:24: style: Assignment 'sw=1' is redundant with condition 'sw_ori==1'. [duplicateConditionalAssign]
    if(sw_ori == 1) sw = 1;
                       ^
src/draw/sw/lv_draw_sw_rect.c:963:15: note: Condition 'sw_ori==1'
    if(sw_ori == 1) sw = 1;
              ^
src/draw/sw/lv_draw_sw_rect.c:963:24: note: Assignment 'sw=1' is redundant
    if(sw_ori == 1) sw = 1;
                       ^
src/draw/sw/lv_draw_sw_rect.c:910:24: style: Variable 'blend_dsc.mask_buf' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_dsc.mask_buf = mask_buf;
                       ^
src/draw/sw/lv_draw_sw_rect.c:526:24: note: blend_dsc.mask_buf is assigned
    blend_dsc.mask_buf = mask_buf;
                       ^
src/draw/sw/lv_draw_sw_rect.c:910:24: note: blend_dsc.mask_buf is overwritten
    blend_dsc.mask_buf = mask_buf;
                       ^
src/draw/sw/lv_draw_sw_rect.c:581:19: style: Variable 'blend_area.x1' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.x1 = shadow_area.x2 - corner_size + 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:557:27: note: blend_area.x1 is assigned
            blend_area.x1 = clip_area_sub.x1;
                          ^
src/draw/sw/lv_draw_sw_rect.c:581:19: note: blend_area.x1 is overwritten
    blend_area.x1 = shadow_area.x2 - corner_size + 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:580:19: style: Variable 'blend_area.x2' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.x2 = shadow_area.x2;
                  ^
src/draw/sw/lv_draw_sw_rect.c:558:27: note: blend_area.x2 is assigned
            blend_area.x2 = clip_area_sub.x2;
                          ^
src/draw/sw/lv_draw_sw_rect.c:580:19: note: blend_area.x2 is overwritten
    blend_area.x2 = shadow_area.x2;
                  ^
src/draw/sw/lv_draw_sw_rect.c:582:19: style: Variable 'blend_area.y1' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.y1 = shadow_area.y2 - corner_size + 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:561:31: note: blend_area.y1 is assigned
                blend_area.y1 = y;
                              ^
src/draw/sw/lv_draw_sw_rect.c:582:19: note: blend_area.y1 is overwritten
    blend_area.y1 = shadow_area.y2 - corner_size + 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:583:19: style: Variable 'blend_area.y2' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.y2 = shadow_area.y2;
                  ^
src/draw/sw/lv_draw_sw_rect.c:562:31: note: blend_area.y2 is assigned
                blend_area.y2 = y;
                              ^
src/draw/sw/lv_draw_sw_rect.c:583:19: note: blend_area.y2 is overwritten
    blend_area.y2 = shadow_area.y2;
                  ^
src/draw/sw/lv_draw_sw_rect.c:622:19: style: Variable 'blend_area.x1' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.x1 = shadow_area.x1 + corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:600:27: note: blend_area.x1 is assigned
            blend_area.x1 = clip_area_sub.x1;
                          ^
src/draw/sw/lv_draw_sw_rect.c:622:19: note: blend_area.x1 is overwritten
    blend_area.x1 = shadow_area.x1 + corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:623:19: style: Variable 'blend_area.x2' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.x2 = shadow_area.x2 - corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:601:27: note: blend_area.x2 is assigned
            blend_area.x2 = clip_area_sub.x2;
                          ^
src/draw/sw/lv_draw_sw_rect.c:623:19: note: blend_area.x2 is overwritten
    blend_area.x2 = shadow_area.x2 - corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:624:19: style: Variable 'blend_area.y1' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.y1 = shadow_area.y1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:604:31: note: blend_area.y1 is assigned
                blend_area.y1 = y;
                              ^
src/draw/sw/lv_draw_sw_rect.c:624:19: note: blend_area.y1 is overwritten
    blend_area.y1 = shadow_area.y1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:625:19: style: Variable 'blend_area.y2' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.y2 = shadow_area.y1 + corner_size - 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:605:31: note: blend_area.y2 is assigned
                blend_area.y2 = y;
                              ^
src/draw/sw/lv_draw_sw_rect.c:625:19: note: blend_area.y2 is overwritten
    blend_area.y2 = shadow_area.y1 + corner_size - 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:669:19: style: Variable 'blend_area.x1' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.x1 = shadow_area.x1 + corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:645:27: note: blend_area.x1 is assigned
            blend_area.x1 = clip_area_sub.x1;
                          ^
src/draw/sw/lv_draw_sw_rect.c:669:19: note: blend_area.x1 is overwritten
    blend_area.x1 = shadow_area.x1 + corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:670:19: style: Variable 'blend_area.x2' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.x2 = shadow_area.x2 - corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:646:27: note: blend_area.x2 is assigned
            blend_area.x2 = clip_area_sub.x2;
                          ^
src/draw/sw/lv_draw_sw_rect.c:670:19: note: blend_area.x2 is overwritten
    blend_area.x2 = shadow_area.x2 - corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:671:19: style: Variable 'blend_area.y1' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.y1 = shadow_area.y2 - corner_size + 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:649:31: note: blend_area.y1 is assigned
                blend_area.y1 = y;
                              ^
src/draw/sw/lv_draw_sw_rect.c:671:19: note: blend_area.y1 is overwritten
    blend_area.y1 = shadow_area.y2 - corner_size + 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:672:19: style: Variable 'blend_area.y2' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.y2 = shadow_area.y2;
                  ^
src/draw/sw/lv_draw_sw_rect.c:650:31: note: blend_area.y2 is assigned
                blend_area.y2 = y;
                              ^
src/draw/sw/lv_draw_sw_rect.c:672:19: note: blend_area.y2 is overwritten
    blend_area.y2 = shadow_area.y2;
                  ^
src/draw/sw/lv_draw_sw_rect.c:722:19: style: Variable 'blend_area.x1' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.x1 = shadow_area.x2 - corner_size + 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:692:27: note: blend_area.x1 is assigned
            blend_area.x1 = clip_area_sub.x1;
                          ^
src/draw/sw/lv_draw_sw_rect.c:722:19: note: blend_area.x1 is overwritten
    blend_area.x1 = shadow_area.x2 - corner_size + 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:723:19: style: Variable 'blend_area.x2' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.x2 = shadow_area.x2;
                  ^
src/draw/sw/lv_draw_sw_rect.c:693:27: note: blend_area.x2 is assigned
            blend_area.x2 = clip_area_sub.x2;
                          ^
src/draw/sw/lv_draw_sw_rect.c:723:19: note: blend_area.x2 is overwritten
    blend_area.x2 = shadow_area.x2;
                  ^
src/draw/sw/lv_draw_sw_rect.c:724:19: style: Variable 'blend_area.y1' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.y1 = shadow_area.y1 + corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:696:31: note: blend_area.y1 is assigned
                blend_area.y1 = y;
                              ^
src/draw/sw/lv_draw_sw_rect.c:724:19: note: blend_area.y1 is overwritten
    blend_area.y1 = shadow_area.y1 + corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:725:19: style: Variable 'blend_area.y2' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.y2 = shadow_area.y2 - corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:697:31: note: blend_area.y2 is assigned
                blend_area.y2 = y;
                              ^
src/draw/sw/lv_draw_sw_rect.c:725:19: note: blend_area.y2 is overwritten
    blend_area.y2 = shadow_area.y2 - corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:779:19: style: Variable 'blend_area.x1' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.x1 = shadow_area.x1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:744:27: note: blend_area.x1 is assigned
            blend_area.x1 = clip_area_sub.x1;
                          ^
src/draw/sw/lv_draw_sw_rect.c:779:19: note: blend_area.x1 is overwritten
    blend_area.x1 = shadow_area.x1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:780:19: style: Variable 'blend_area.x2' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.x2 = shadow_area.x1 + corner_size - 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:745:27: note: blend_area.x2 is assigned
            blend_area.x2 = clip_area_sub.x2;
                          ^
src/draw/sw/lv_draw_sw_rect.c:780:19: note: blend_area.x2 is overwritten
    blend_area.x2 = shadow_area.x1 + corner_size - 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:781:19: style: Variable 'blend_area.y1' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.y1 = shadow_area.y1 + corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:748:31: note: blend_area.y1 is assigned
                blend_area.y1 = y;
                              ^
src/draw/sw/lv_draw_sw_rect.c:781:19: note: blend_area.y1 is overwritten
    blend_area.y1 = shadow_area.y1 + corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:782:19: style: Variable 'blend_area.y2' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.y2 = shadow_area.y2 - corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:749:31: note: blend_area.y2 is assigned
                blend_area.y2 = y;
                              ^
src/draw/sw/lv_draw_sw_rect.c:782:19: note: blend_area.y2 is overwritten
    blend_area.y2 = shadow_area.y2 - corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:819:19: style: Variable 'blend_area.x1' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.x1 = shadow_area.x1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:800:27: note: blend_area.x1 is assigned
            blend_area.x1 = clip_area_sub.x1;
                          ^
src/draw/sw/lv_draw_sw_rect.c:819:19: note: blend_area.x1 is overwritten
    blend_area.x1 = shadow_area.x1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:820:19: style: Variable 'blend_area.x2' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.x2 = shadow_area.x1 + corner_size - 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:801:27: note: blend_area.x2 is assigned
            blend_area.x2 = clip_area_sub.x2;
                          ^
src/draw/sw/lv_draw_sw_rect.c:820:19: note: blend_area.x2 is overwritten
    blend_area.x2 = shadow_area.x1 + corner_size - 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:821:19: style: Variable 'blend_area.y1' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.y1 = shadow_area.y1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:804:31: note: blend_area.y1 is assigned
                blend_area.y1 = y;
                              ^
src/draw/sw/lv_draw_sw_rect.c:821:19: note: blend_area.y1 is overwritten
    blend_area.y1 = shadow_area.y1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:822:19: style: Variable 'blend_area.y2' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.y2 = shadow_area.y1 + corner_size - 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:805:31: note: blend_area.y2 is assigned
                blend_area.y2 = y;
                              ^
src/draw/sw/lv_draw_sw_rect.c:822:19: note: blend_area.y2 is overwritten
    blend_area.y2 = shadow_area.y1 + corner_size - 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:864:19: style: Variable 'blend_area.x1' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.x1 = shadow_area.x1 ;
                  ^
src/draw/sw/lv_draw_sw_rect.c:840:27: note: blend_area.x1 is assigned
            blend_area.x1 = clip_area_sub.x1;
                          ^
src/draw/sw/lv_draw_sw_rect.c:864:19: note: blend_area.x1 is overwritten
    blend_area.x1 = shadow_area.x1 ;
                  ^
src/draw/sw/lv_draw_sw_rect.c:865:19: style: Variable 'blend_area.x2' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.x2 = shadow_area.x1 + corner_size - 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:841:27: note: blend_area.x2 is assigned
            blend_area.x2 = clip_area_sub.x2;
                          ^
src/draw/sw/lv_draw_sw_rect.c:865:19: note: blend_area.x2 is overwritten
    blend_area.x2 = shadow_area.x1 + corner_size - 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:866:19: style: Variable 'blend_area.y1' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.y1 = shadow_area.y2 - corner_size + 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:844:31: note: blend_area.y1 is assigned
                blend_area.y1 = y;
                              ^
src/draw/sw/lv_draw_sw_rect.c:866:19: note: blend_area.y1 is overwritten
    blend_area.y1 = shadow_area.y2 - corner_size + 1;
                  ^
src/draw/sw/lv_draw_sw_rect.c:867:19: style: Variable 'blend_area.y2' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.y2 = shadow_area.y2;
                  ^
src/draw/sw/lv_draw_sw_rect.c:845:31: note: blend_area.y2 is assigned
                blend_area.y2 = y;
                              ^
src/draw/sw/lv_draw_sw_rect.c:867:19: note: blend_area.y2 is overwritten
    blend_area.y2 = shadow_area.y2;
                  ^
src/draw/sw/lv_draw_sw_rect.c:906:19: style: Variable 'blend_area.x1' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.x1 = shadow_area.x1 + corner_size ;
                  ^
src/draw/sw/lv_draw_sw_rect.c:884:27: note: blend_area.x1 is assigned
            blend_area.x1 = clip_area_sub.x1;
                          ^
src/draw/sw/lv_draw_sw_rect.c:906:19: note: blend_area.x1 is overwritten
    blend_area.x1 = shadow_area.x1 + corner_size ;
                  ^
src/draw/sw/lv_draw_sw_rect.c:907:19: style: Variable 'blend_area.x2' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.x2 = shadow_area.x2 - corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:885:27: note: blend_area.x2 is assigned
            blend_area.x2 = clip_area_sub.x2;
                          ^
src/draw/sw/lv_draw_sw_rect.c:907:19: note: blend_area.x2 is overwritten
    blend_area.x2 = shadow_area.x2 - corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:908:19: style: Variable 'blend_area.y1' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.y1 = shadow_area.y1 + corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:888:31: note: blend_area.y1 is assigned
                blend_area.y1 = y;
                              ^
src/draw/sw/lv_draw_sw_rect.c:908:19: note: blend_area.y1 is overwritten
    blend_area.y1 = shadow_area.y1 + corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:909:19: style: Variable 'blend_area.y2' is reassigned a value before the old one has been used. [redundantAssignment]
    blend_area.y2 = shadow_area.y2 - corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:889:31: note: blend_area.y2 is assigned
                blend_area.y2 = y;
                              ^
src/draw/sw/lv_draw_sw_rect.c:909:19: note: blend_area.y2 is overwritten
    blend_area.y2 = shadow_area.y2 - corner_size;
                  ^
src/draw/sw/lv_draw_sw_rect.c:1278:23: style: Variable 'blend_area.x1' is reassigned a value before the old one has been used. [redundantAssignment]
        blend_area.x1 = draw_area.x1;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1241:23: note: blend_area.x1 is assigned
        blend_area.x1 = core_area.x1;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1278:23: note: blend_area.x1 is overwritten
        blend_area.x1 = draw_area.x1;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1279:23: style: Variable 'blend_area.x2' is reassigned a value before the old one has been used. [redundantAssignment]
        blend_area.x2 = draw_area.x2;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1242:23: note: blend_area.x2 is assigned
        blend_area.x2 = core_area.x2;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1279:23: note: blend_area.x2 is overwritten
        blend_area.x2 = draw_area.x2;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1278:23: style: Variable 'blend_area.x1' is reassigned a value before the old one has been used. [redundantAssignment]
        blend_area.x1 = draw_area.x1;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1249:23: note: blend_area.x1 is assigned
        blend_area.x1 = core_area.x1;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1278:23: note: blend_area.x1 is overwritten
        blend_area.x1 = draw_area.x1;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1279:23: style: Variable 'blend_area.x2' is reassigned a value before the old one has been used. [redundantAssignment]
        blend_area.x2 = draw_area.x2;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1250:23: note: blend_area.x2 is assigned
        blend_area.x2 = core_area.x2;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1279:23: note: blend_area.x2 is overwritten
        blend_area.x2 = draw_area.x2;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1278:23: style: Variable 'blend_area.x1' is reassigned a value before the old one has been used. [redundantAssignment]
        blend_area.x1 = draw_area.x1;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1257:23: note: blend_area.x1 is assigned
        blend_area.x1 = outer_area->x1;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1278:23: note: blend_area.x1 is overwritten
        blend_area.x1 = draw_area.x1;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1279:23: style: Variable 'blend_area.x2' is reassigned a value before the old one has been used. [redundantAssignment]
        blend_area.x2 = draw_area.x2;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1258:23: note: blend_area.x2 is assigned
        blend_area.x2 = inner_area->x1 - 1;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1279:23: note: blend_area.x2 is overwritten
        blend_area.x2 = draw_area.x2;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1278:23: style: Variable 'blend_area.x1' is reassigned a value before the old one has been used. [redundantAssignment]
        blend_area.x1 = draw_area.x1;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1265:23: note: blend_area.x1 is assigned
        blend_area.x1 = inner_area->x2 + 1;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1278:23: note: blend_area.x1 is overwritten
        blend_area.x1 = draw_area.x1;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1279:23: style: Variable 'blend_area.x2' is reassigned a value before the old one has been used. [redundantAssignment]
        blend_area.x2 = draw_area.x2;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1266:23: note: blend_area.x2 is assigned
        blend_area.x2 = outer_area->x2;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1279:23: note: blend_area.x2 is overwritten
        blend_area.x2 = draw_area.x2;
                      ^
src/draw/sw/lv_draw_sw_rect.c:1404:10: style: Variable 'a.x1' is reassigned a value before the old one has been used. [redundantAssignment]
    a.x1 = outer_area->x1;
         ^
src/draw/sw/lv_draw_sw_rect.c:1388:10: note: a.x1 is assigned
    a.x1 = outer_area->x1;
         ^
src/draw/sw/lv_draw_sw_rect.c:1404:10: note: a.x1 is overwritten
    a.x1 = outer_area->x1;
         ^
src/draw/sw/lv_draw_sw_rect.c:1405:10: style: Variable 'a.x2' is reassigned a value before the old one has been used. [redundantAssignment]
    a.x2 = inner_area->x1 - 1;
         ^
src/draw/sw/lv_draw_sw_rect.c:1389:10: note: a.x2 is assigned
    a.x2 = outer_area->x2;
         ^
src/draw/sw/lv_draw_sw_rect.c:1405:10: note: a.x2 is overwritten
    a.x2 = inner_area->x1 - 1;
         ^
src/draw/sw/lv_draw_sw_rect.c:1397:10: style: Variable 'a.y1' is reassigned a value before the old one has been used. [redundantAssignment]
    a.y1 = inner_area->y2 + 1;
         ^
src/draw/sw/lv_draw_sw_rect.c:1390:10: note: a.y1 is assigned
    a.y1 = outer_area->y1;
         ^
src/draw/sw/lv_draw_sw_rect.c:1397:10: note: a.y1 is overwritten
    a.y1 = inner_area->y2 + 1;
         ^
src/draw/sw/lv_draw_sw_rect.c:1398:10: style: Variable 'a.y2' is reassigned a value before the old one has been used. [redundantAssignment]
    a.y2 = outer_area->y2;
         ^
src/draw/sw/lv_draw_sw_rect.c:1391:10: note: a.y2 is assigned
    a.y2 = inner_area->y1 - 1;
         ^
src/draw/sw/lv_draw_sw_rect.c:1398:10: note: a.y2 is overwritten
    a.y2 = outer_area->y2;
         ^
src/draw/sw/lv_draw_sw_rect.c:1406:10: style: Variable 'a.y1' is reassigned a value before the old one has been used. [redundantAssignment]
    a.y1 = (top_side) ? inner_area->y1 : outer_area->y1;
         ^
src/draw/sw/lv_draw_sw_rect.c:1397:10: note: a.y1 is assigned
    a.y1 = inner_area->y2 + 1;
         ^
src/draw/sw/lv_draw_sw_rect.c:1406:10: note: a.y1 is overwritten
    a.y1 = (top_side) ? inner_area->y1 : outer_area->y1;
         ^
src/draw/sw/lv_draw_sw_rect.c:1407:10: style: Variable 'a.y2' is reassigned a value before the old one has been used. [redundantAssignment]
    a.y2 = (bottom_side) ? inner_area->y2 : outer_area->y2;
         ^
src/draw/sw/lv_draw_sw_rect.c:1398:10: note: a.y2 is assigned
    a.y2 = outer_area->y2;
         ^
src/draw/sw/lv_draw_sw_rect.c:1407:10: note: a.y2 is overwritten
    a.y2 = (bottom_side) ? inner_area->y2 : outer_area->y2;
         ^
src/draw/sw/lv_draw_sw_rect.c:1413:10: style: Variable 'a.x1' is reassigned a value before the old one has been used. [redundantAssignment]
    a.x1 = inner_area->x2 + 1;
         ^
src/draw/sw/lv_draw_sw_rect.c:1404:10: note: a.x1 is assigned
    a.x1 = outer_area->x1;
         ^
src/draw/sw/lv_draw_sw_rect.c:1413:10: note: a.x1 is overwritten
    a.x1 = inner_area->x2 + 1;
         ^
src/draw/sw/lv_draw_sw_rect.c:1414:10: style: Variable 'a.x2' is reassigned a value before the old one has been used. [redundantAssignment]
    a.x2 = outer_area->x2;
         ^
src/draw/sw/lv_draw_sw_rect.c:1405:10: note: a.x2 is assigned
    a.x2 = inner_area->x1 - 1;
         ^
src/draw/sw/lv_draw_sw_rect.c:1414:10: note: a.x2 is overwritten
    a.x2 = outer_area->x2;
         ^
src/draw/sw/lv_draw_sw_rect.c:1033:13: style: Same expression used in consecutive assignments of 's_left' and 's_right'. [duplicateAssignExpression]
    int32_t s_left = sw >> 1;
            ^
src/draw/sw/lv_draw_sw_rect.c:1034:13: note: Same expression used in consecutive assignments of 's_left' and 's_right'.
    int32_t s_right = (sw >> 1);
            ^
src/draw/sw/lv_draw_sw_rect.c:1033:13: note: Same expression used in consecutive assignments of 's_left' and 's_right'.
    int32_t s_left = sw >> 1;
            ^
src/draw/sw/lv_draw_sw_rect.c:1273:16: style: The scope of the variable 'blend_w' can be reduced. [variableScope]
    lv_coord_t blend_w;
               ^
src/draw/sw/lv_draw_sw_rect.c:944:114: style:inconclusive: Function 'shadow_draw_corner_buf' argument 3 names different: declaration 's' definition 'sw'. [funcArgNamesDifferent]
LV_ATTRIBUTE_FAST_MEM static void shadow_draw_corner_buf(const lv_area_t * coords, uint16_t * sh_buf, lv_coord_t sw,
                                                                                                                 ^
src/draw/sw/lv_draw_sw_rect.c:42:114: note: Function 'shadow_draw_corner_buf' argument 3 names different: declaration 's' definition 'sw'.
LV_ATTRIBUTE_FAST_MEM static void shadow_draw_corner_buf(const lv_area_t * coords, uint16_t * sh_buf, lv_coord_t s,
                                                                                                                 ^
src/draw/sw/lv_draw_sw_rect.c:944:114: note: Function 'shadow_draw_corner_buf' argument 3 names different: declaration 's' definition 'sw'.
LV_ATTRIBUTE_FAST_MEM static void shadow_draw_corner_buf(const lv_area_t * coords, uint16_t * sh_buf, lv_coord_t sw,
                                                                                                                 ^
src/draw/sw/lv_draw_sw_rect.c:1112:30: style: Variable 'opa' is assigned a value that is never used. [unreadVariable]
    if(opa > LV_OPA_MAX) opa = LV_OPA_COVER;
                             ^
src/draw/sw/lv_draw_sw_rect.c:40:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void draw_shadow(lv_draw_ctx_t * draw_ctx, const lv_draw_rect_dsc_t * dsc,
^
src/draw/sw/lv_draw_sw_rect.c:42:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void shadow_draw_corner_buf(const lv_area_t * coords, uint16_t * sh_buf, lv_coord_t s,
^
src/draw/sw/lv_draw_sw_rect.c:44:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void shadow_blur_corner(lv_coord_t size, lv_coord_t sw, uint16_t * sh_ups_buf);
^
src/draw/sw/lv_draw_sw_rect.c:424:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void draw_shadow(lv_draw_ctx_t * draw_ctx, const lv_draw_rect_dsc_t * dsc,
^
src/draw/sw/lv_draw_sw_rect.c:944:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void shadow_draw_corner_buf(const lv_area_t * coords, uint16_t * sh_buf, lv_coord_t sw,
^
src/draw/sw/lv_draw_sw_rect.c:1031:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM static void shadow_blur_corner(lv_coord_t size, lv_coord_t sw, uint16_t * sh_ups_buf)
^
src/draw/sw/lv_draw_sw_transform.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 432 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/draw/swm341_dma2d/lv_gpu_swm341_dma2d.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 432 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 419 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font.c:51:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(font_p);
^
src/font/lv_font.c:68:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(font_p);
^
src/font/lv_font.c:69:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(dsc_out);
^
src/font/lv_font.c:138:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(font);
^
src/font/lv_font_dejavu_16_persian_hebrew.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_fmt_txt.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 426 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_fmt_txt.c:79:77: style:inconclusive: Function 'lv_font_get_bitmap_fmt_txt' argument 2 names different: declaration 'letter' definition 'unicode_letter'. [funcArgNamesDifferent]
const uint8_t * lv_font_get_bitmap_fmt_txt(const lv_font_t * font, uint32_t unicode_letter)
                                                                            ^
src/font/lv_font_fmt_txt.h:210:77: note: Function 'lv_font_get_bitmap_fmt_txt' argument 2 names different: declaration 'letter' definition 'unicode_letter'.
const uint8_t * lv_font_get_bitmap_fmt_txt(const lv_font_t * font, uint32_t letter);
                                                                            ^
src/font/lv_font_fmt_txt.c:79:77: note: Function 'lv_font_get_bitmap_fmt_txt' argument 2 names different: declaration 'letter' definition 'unicode_letter'.
const uint8_t * lv_font_get_bitmap_fmt_txt(const lv_font_t * font, uint32_t unicode_letter)
                                                                            ^
src/font/lv_font_loader.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_loader.c:86:39: style:inconclusive: Function 'lv_font_load' argument 1 names different: declaration 'fontName' definition 'font_name'. [funcArgNamesDifferent]
lv_font_t * lv_font_load(const char * font_name)
                                      ^
src/font/lv_font_loader.h:29:39: note: Function 'lv_font_load' argument 1 names different: declaration 'fontName' definition 'font_name'.
lv_font_t * lv_font_load(const char * fontName);
                                      ^
src/font/lv_font_loader.c:86:39: note: Function 'lv_font_load' argument 1 names different: declaration 'fontName' definition 'font_name'.
lv_font_t * lv_font_load(const char * font_name)
                                      ^
src/font/lv_font_montserrat_10.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_12.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_12_subpx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_14.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_14.c:24:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' since the value of 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
^
src/font/lv_font_montserrat_16.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_18.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_20.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_22.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_24.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_26.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_28.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_28_compressed.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_30.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_32.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_34.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_36.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_38.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_40.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_42.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_44.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_46.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_48.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_montserrat_8.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_simsun_16_cjk.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_unscii_16.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/font/lv_font_unscii_8.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/hal/lv_hal_tick.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 324 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/hal/lv_hal_tick.c:49:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_TICK_INC' since the value of 'CONFIG_LV_ATTRIBUTE_TICK_INC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_TICK_INC void lv_tick_inc(uint32_t tick_period)
^
src/layouts/flex/lv_flex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/layouts/flex/lv_flex.c:259:14: style: The scope of the variable 'track_cnt' can be reduced. [variableScope]
    uint32_t track_cnt = 0;
             ^
src/layouts/flex/lv_flex.c:115:44: style:inconclusive: Function 'lv_obj_set_flex_align' argument 4 names different: declaration 'track_cross_place' definition 'track_place'. [funcArgNamesDifferent]
                           lv_flex_align_t track_place)
                                           ^
src/layouts/flex/lv_flex.h:92:44: note: Function 'lv_obj_set_flex_align' argument 4 names different: declaration 'track_cross_place' definition 'track_place'.
                           lv_flex_align_t track_cross_place);
                                           ^
src/layouts/flex/lv_flex.c:115:44: note: Function 'lv_obj_set_flex_align' argument 4 names different: declaration 'track_cross_place' definition 'track_place'.
                           lv_flex_align_t track_place)
                                           ^
src/layouts/flex/lv_flex.c:222:36: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    f.row = flow & _LV_FLEX_COLUMN ? 0 : 1;
                                   ^
src/layouts/flex/lv_flex.c:223:35: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    f.wrap = flow & _LV_FLEX_WRAP ? 1 : 0;
                                  ^
src/layouts/flex/lv_flex.c:224:37: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    f.rev = flow & _LV_FLEX_REVERSE ? 1 : 0;
                                    ^
src/layouts/flex/lv_flex.c:356:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                    LV_ASSERT_MALLOC(new_dsc);
^
src/layouts/flex/lv_flex.c:439:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                LV_ASSERT(grow_value_sum != 0);
^
src/layouts/grid/lv_grid.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/layouts/grid/lv_grid.c:726:16: style: The scope of the variable 'grid_size' can be reduced. [variableScope]
    lv_coord_t grid_size = 0;
               ^
src/layouts/grid/lv_grid.c:176:59: style:inconclusive: Function 'lv_obj_set_grid_cell' argument 2 names different: declaration 'column_align' definition 'x_align'. [funcArgNamesDifferent]
void lv_obj_set_grid_cell(lv_obj_t * obj, lv_grid_align_t x_align, lv_coord_t col_pos, lv_coord_t col_span,
                                                          ^
src/layouts/grid/lv_grid.h:88:59: note: Function 'lv_obj_set_grid_cell' argument 2 names different: declaration 'column_align' definition 'x_align'.
void lv_obj_set_grid_cell(lv_obj_t * obj, lv_grid_align_t column_align, lv_coord_t col_pos, lv_coord_t col_span,
                                                          ^
src/layouts/grid/lv_grid.c:176:59: note: Function 'lv_obj_set_grid_cell' argument 2 names different: declaration 'column_align' definition 'x_align'.
void lv_obj_set_grid_cell(lv_obj_t * obj, lv_grid_align_t x_align, lv_coord_t col_pos, lv_coord_t col_span,
                                                          ^
src/layouts/grid/lv_grid.c:177:43: style:inconclusive: Function 'lv_obj_set_grid_cell' argument 5 names different: declaration 'row_align' definition 'y_align'. [funcArgNamesDifferent]
                          lv_grid_align_t y_align, lv_coord_t row_pos, lv_coord_t row_span)
                                          ^
src/layouts/grid/lv_grid.h:89:43: note: Function 'lv_obj_set_grid_cell' argument 5 names different: declaration 'row_align' definition 'y_align'.
                          lv_grid_align_t row_align, lv_coord_t row_pos, lv_coord_t row_span);
                                          ^
src/layouts/grid/lv_grid.c:177:43: note: Function 'lv_obj_set_grid_cell' argument 5 names different: declaration 'row_align' definition 'y_align'.
                          lv_grid_align_t y_align, lv_coord_t row_pos, lv_coord_t row_span)
                                          ^
src/layouts/grid/lv_grid.c:405:29: style:inconclusive: Function 'calc' argument 1 names different: declaration 'obj' definition 'cont'. [funcArgNamesDifferent]
static void calc(lv_obj_t * cont, _lv_grid_calc_t * calc_out)
                            ^
src/layouts/grid/lv_grid.c:51:29: note: Function 'calc' argument 1 names different: declaration 'obj' definition 'cont'.
static void calc(lv_obj_t * obj, _lv_grid_calc_t * calc);
                            ^
src/layouts/grid/lv_grid.c:405:29: note: Function 'calc' argument 1 names different: declaration 'obj' definition 'cont'.
static void calc(lv_obj_t * cont, _lv_grid_calc_t * calc_out)
                            ^
src/layouts/grid/lv_grid.c:405:53: style:inconclusive: Function 'calc' argument 2 names different: declaration 'calc' definition 'calc_out'. [funcArgNamesDifferent]
static void calc(lv_obj_t * cont, _lv_grid_calc_t * calc_out)
                                                    ^
src/layouts/grid/lv_grid.c:51:52: note: Function 'calc' argument 2 names different: declaration 'calc' definition 'calc_out'.
static void calc(lv_obj_t * obj, _lv_grid_calc_t * calc);
                                                   ^
src/layouts/grid/lv_grid.c:405:53: note: Function 'calc' argument 2 names different: declaration 'calc' definition 'calc_out'.
static void calc(lv_obj_t * cont, _lv_grid_calc_t * calc_out)
                                                    ^
src/libs/barcode/code128.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/barcode/lv_barcode.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/bmp/lv_bmp.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/ffmpeg/lv_ffmpeg.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 446 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/freetype/lv_freetype.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/freetype/lv_ftsystem.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/fsdrv/lv_fs_fatfs.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/fsdrv/lv_fs_posix.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 445 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/fsdrv/lv_fs_stdio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/fsdrv/lv_fs_stdio.c:281:21: style: The scope of the variable 'entry' can be reduced. [variableScope]
    struct dirent * entry;
                    ^
src/libs/fsdrv/lv_fs_win32.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/gif/gifdec.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 333 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/gif/lv_gif.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/png/lodepng.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 476 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/png/lv_png.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/qrcode/lv_qrcode.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/rlottie/lv_rlottie.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/sjpg/lv_sjpg.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 449 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/sjpg/tjpgd.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 326 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/libs/tiny_ttf/lv_tiny_ttf.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 446 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_anim.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 335 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_anim.c:290:15: style: Condition 't>=408' is always true [knownConditionTrueFalse]
    else if(t >= 408 && t < 614) {
              ^
src/misc/lv_anim.c:286:10: note: Assuming that condition 't<408' is not redundant
    if(t < 408) {
         ^
src/misc/lv_anim.c:290:15: note: Condition 't>=408' is always true
    else if(t >= 408 && t < 614) {
              ^
src/misc/lv_anim.c:84:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(new_anim);
^
src/misc/lv_anim_timeline.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 328 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_anim_timeline.c:55:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(at);
^
src/misc/lv_anim_timeline.c:64:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(at);
^
src/misc/lv_anim_timeline.c:74:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(at);
^
src/misc/lv_anim_timeline.c:79:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(at->anim_dsc);
^
src/misc/lv_anim_timeline.c:93:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(at);
^
src/misc/lv_anim_timeline.c:120:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(at);
^
src/misc/lv_anim_timeline.c:130:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(at);
^
src/misc/lv_anim_timeline.c:136:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(at);
^
src/misc/lv_anim_timeline.c:168:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(at);
^
src/misc/lv_anim_timeline.c:186:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(at);
^
src/misc/lv_area.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 322 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_async.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 329 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_bidi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 419 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_color.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 334 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_color.c:128:52: style:inconclusive: Function 'lv_color_format_get_size' argument 1 names different: declaration 'src_cf' definition 'cf'. [funcArgNamesDifferent]
uint8_t lv_color_format_get_size(lv_color_format_t cf)
                                                   ^
src/misc/lv_color.h:298:52: note: Function 'lv_color_format_get_size' argument 1 names different: declaration 'src_cf' definition 'cf'.
uint8_t lv_color_format_get_size(lv_color_format_t src_cf);
                                                   ^
src/misc/lv_color.c:128:52: note: Function 'lv_color_format_get_size' argument 1 names different: declaration 'src_cf' definition 'cf'.
uint8_t lv_color_format_get_size(lv_color_format_t cf)
                                                   ^
src/misc/lv_color.c:159:50: style:inconclusive: Function 'lv_color_format_has_alpha' argument 1 names different: declaration 'src_cf' definition 'cf'. [funcArgNamesDifferent]
bool lv_color_format_has_alpha(lv_color_format_t cf)
                                                 ^
src/misc/lv_color.h:305:50: note: Function 'lv_color_format_has_alpha' argument 1 names different: declaration 'src_cf' definition 'cf'.
bool lv_color_format_has_alpha(lv_color_format_t src_cf);
                                                 ^
src/misc/lv_color.c:159:50: note: Function 'lv_color_format_has_alpha' argument 1 names different: declaration 'src_cf' definition 'cf'.
bool lv_color_format_has_alpha(lv_color_format_t cf)
                                                 ^
src/misc/lv_color.c:37:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num)
^
src/misc/lv_event.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 329 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_event.c:92:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(list->dsc);
^
src/misc/lv_event.c:103:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(list);
^
src/misc/lv_event.c:110:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(list);
^
src/misc/lv_event.c:117:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(dsc);
^
src/misc/lv_event.c:123:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(dsc);
^
src/misc/lv_event.c:130:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(list);
^
src/misc/lv_event.c:140:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(list->dsc);
^
src/misc/lv_fs.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 334 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_fs.c:406:39: style:inconclusive: Function 'lv_fs_drv_register' argument 1 names different: declaration 'drv' definition 'drv_p'. [funcArgNamesDifferent]
void lv_fs_drv_register(lv_fs_drv_t * drv_p)
                                      ^
src/misc/lv_fs.h:130:39: note: Function 'lv_fs_drv_register' argument 1 names different: declaration 'drv' definition 'drv_p'.
void lv_fs_drv_register(lv_fs_drv_t * drv);
                                      ^
src/misc/lv_fs.c:406:39: note: Function 'lv_fs_drv_register' argument 1 names different: declaration 'drv' definition 'drv_p'.
void lv_fs_drv_register(lv_fs_drv_t * drv_p)
                                      ^
src/misc/lv_fs.c:96:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(file_p->cache);
^
src/misc/lv_fs.c:189:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                LV_ASSERT_MALLOC(file_p->cache->buffer);
^
src/misc/lv_fs.c:411:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(new_drv);
^
src/misc/lv_gc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 335 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_ll.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 329 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_log.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 332 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_lru.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 328 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_lru.c:109:14: style: The scope of the variable 'i' can be reduced. [variableScope]
    uint32_t i = 0;
             ^
src/misc/lv_lru.c:105:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(cache);
^
src/misc/lv_malloc_builtin.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 334 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_malloc_builtin.c:91:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(pool_p);
^
src/misc/lv_malloc_builtin.c:115:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(pool_p);
^
src/misc/lv_malloc_builtin.c:81:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_LARGE_RAM_ARRAY' since the value of 'CONFIG_LV_ATTRIBUTE_LARGE_RAM_ARRAY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    static LV_ATTRIBUTE_LARGE_RAM_ARRAY MEM_UNIT work_mem_int[LV_MEM_SIZE / sizeof(MEM_UNIT)];
^
src/misc/lv_math.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 322 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_math.c:60:30: warning: Either the condition 'angle<0' is redundant or the array 'sin0_90_table[91]' is accessed at index -179, which is out of bounds. [negativeIndex]
        ret   = sin0_90_table[angle];
                             ^
src/misc/lv_math.c:53:14: note: Assuming that condition 'angle<0' is not redundant
    if(angle < 0) angle = 360 + angle;
             ^
src/misc/lv_math.c:53:31: note: Assignment 'angle=360+angle', assigned value is 359
    if(angle < 0) angle = 360 + angle;
                              ^
src/misc/lv_math.c:59:21: note: Assignment 'angle=180-angle', assigned value is -179
        angle = 180 - angle;
                    ^
src/misc/lv_math.c:60:30: note: Negative array index
        ret   = sin0_90_table[angle];
                             ^
src/misc/lv_math.c:68:31: warning: Either the condition 'angle>=180' is redundant or the array 'sin0_90_table[91]' is accessed at index 181, which is out of bounds. [arrayIndexOutOfBoundsCond]
        ret   = -sin0_90_table[angle];
                              ^
src/misc/lv_math.c:62:19: note: Assuming that condition 'angle>=180' is not redundant
    else if(angle >= 180 && angle < 270) {
                  ^
src/misc/lv_math.c:67:21: note: Assignment 'angle=360-angle', assigned value is 181
        angle = 360 - angle;
                    ^
src/misc/lv_math.c:68:31: note: Array index out of bounds
        ret   = -sin0_90_table[angle];
                              ^
src/misc/lv_math.c:58:19: style: Condition 'angle>=90' is always true [knownConditionTrueFalse]
    else if(angle >= 90 && angle < 180) {
                  ^
src/misc/lv_math.c:55:14: note: Assuming condition 'angle<90' is false
    if(angle < 90) {
             ^
src/misc/lv_math.c:58:19: note: Condition 'angle>=90' is always true
    else if(angle >= 90 && angle < 180) {
                  ^
src/misc/lv_math.c:114:14: style: The scope of the variable 'trial' can be reduced. [variableScope]
    uint32_t trial;
             ^
src/misc/lv_math.c:48:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM int16_t lv_trigo_sin(int16_t angle)
^
src/misc/lv_math.c:109:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_sqrt(uint32_t x, lv_sqrt_res_t * q, uint32_t mask)
^
src/misc/lv_mem.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 331 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_memcpy_builtin.h:37:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void * lv_memcpy_builtin(void * dst, const void * src, size_t len);
^
src/misc/lv_memcpy_builtin.h:45:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_memset_builtin(void * dst, uint8_t v, size_t len);
^
src/misc/lv_memcpy_builtin.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 331 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_memcpy_builtin.c:55:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void * lv_memcpy_builtin(void * dst, const void * src, size_t len)
^
src/misc/lv_memcpy_builtin.c:123:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_FAST_MEM' since the value of 'CONFIG_LV_ATTRIBUTE_FAST_MEM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_FAST_MEM void lv_memset_builtin(void * dst, uint8_t v, size_t len)
^
src/misc/lv_printf.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 330 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_printf.c:217:16: style: Condition 'len' is always false [knownConditionTrueFalse]
            if(len && (base == 16U)) {
               ^
src/misc/lv_printf.c:215:42: note: Assuming condition 'len' is true
        if(!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
                                         ^
src/misc/lv_printf.c:216:13: note: len is decremented', new value is 0
            len--;
            ^
src/misc/lv_printf.c:217:16: note: Condition 'len' is always false
            if(len && (base == 16U)) {
               ^
src/misc/lv_printf.c:120:12: style: struct member 'out_fct_wrap_type::fct' is never used. [unusedStructMember]
    void (*fct)(char character, void * arg);
           ^
src/misc/lv_printf.c:121:12: style: struct member 'out_fct_wrap_type::arg' is never used. [unusedStructMember]
    void * arg;
           ^
src/misc/lv_style.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 425 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_style.c:383:26: style: Local variable '_lv_style_builtin_prop_flag_lookup_table' shadows outer variable [shadowVariable]
    extern const uint8_t _lv_style_builtin_prop_flag_lookup_table[];
                         ^
src/misc/lv_style.c:40:15: note: Shadowed declaration
const uint8_t _lv_style_builtin_prop_flag_lookup_table[_LV_STYLE_NUM_BUILT_IN_PROPS] = {
              ^
src/misc/lv_style.c:383:26: note: Shadow variable
    extern const uint8_t _lv_style_builtin_prop_flag_lookup_table[];
                         ^
src/misc/lv_style.c:384:21: style: Local variable '_lv_style_custom_prop_flag_lookup_table_size' shadows outer variable [shadowVariable]
    extern uint32_t _lv_style_custom_prop_flag_lookup_table_size;
                    ^
src/misc/lv_style.c:139:10: note: Shadowed declaration
uint32_t _lv_style_custom_prop_flag_lookup_table_size = 0;
         ^
src/misc/lv_style.c:384:21: note: Shadow variable
    extern uint32_t _lv_style_custom_prop_flag_lookup_table_size;
                    ^
src/misc/lv_style.c:205:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MSG(required_size > 0, "required size has become 0?");
^
src/misc/lv_style.c:217:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table));
^
src/misc/lv_style_gen.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 420 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_timer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 335 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_timer.c:315:9: style:inconclusive: Found duplicate branches for 'if' and 'else'. [duplicateBranch]
        if(!timer_deleted) TIMER_TRACE("timer callback %p finished", *((void **)&timer->timer_cb));
        ^
src/misc/lv_timer.c:316:9: note: Found duplicate branches for 'if' and 'else'.
        else TIMER_TRACE("timer callback finished");
        ^
src/misc/lv_timer.c:315:9: note: Found duplicate branches for 'if' and 'else'.
        if(!timer_deleted) TIMER_TRACE("timer callback %p finished", *((void **)&timer->timer_cb));
        ^
src/misc/lv_timer.c:173:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(new_timer);
^
src/misc/lv_timer.c:68:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_TIMER_HANDLER' since the value of 'CONFIG_LV_ATTRIBUTE_TIMER_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
LV_ATTRIBUTE_TIMER_HANDLER uint32_t lv_timer_handler(void)
^
src/misc/lv_tlsf.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 337 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_tlsf.c:1098:46: style:inconclusive: Function 'lv_tlsf_malloc' argument 2 names different: declaration 'bytes' definition 'size'. [funcArgNamesDifferent]
void * lv_tlsf_malloc(lv_tlsf_t tlsf, size_t size)
                                             ^
src/misc/lv_tlsf.h:66:46: note: Function 'lv_tlsf_malloc' argument 2 names different: declaration 'bytes' definition 'size'.
void * lv_tlsf_malloc(lv_tlsf_t tlsf, size_t bytes);
                                             ^
src/misc/lv_tlsf.c:1098:46: note: Function 'lv_tlsf_malloc' argument 2 names different: declaration 'bytes' definition 'size'.
void * lv_tlsf_malloc(lv_tlsf_t tlsf, size_t size)
                                             ^
src/misc/lv_tlsf.c:1106:62: style:inconclusive: Function 'lv_tlsf_memalign' argument 3 names different: declaration 'bytes' definition 'size'. [funcArgNamesDifferent]
void * lv_tlsf_memalign(lv_tlsf_t tlsf, size_t align, size_t size)
                                                             ^
src/misc/lv_tlsf.h:67:62: note: Function 'lv_tlsf_memalign' argument 3 names different: declaration 'bytes' definition 'size'.
void * lv_tlsf_memalign(lv_tlsf_t tlsf, size_t align, size_t bytes);
                                                             ^
src/misc/lv_tlsf.c:1106:62: note: Function 'lv_tlsf_memalign' argument 3 names different: declaration 'bytes' definition 'size'.
void * lv_tlsf_memalign(lv_tlsf_t tlsf, size_t align, size_t size)
                                                             ^
src/misc/lv_tlsf.c:449:16: warning: Conversion of string literal "previous block must be free" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(block_is_prev_free(block) && "previous block must be free");
               ^
src/misc/lv_tlsf.c:487:16: warning: Conversion of string literal "must align to a power of two" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
               ^
src/misc/lv_tlsf.c:493:16: warning: Conversion of string literal "must align to a power of two" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
               ^
src/misc/lv_tlsf.c:501:16: warning: Conversion of string literal "must align to a power of two" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
               ^
src/misc/lv_tlsf.c:577:16: warning: Conversion of string literal "internal error - second level bitmap is null" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(sl_map && "internal error - second level bitmap is null");
               ^
src/misc/lv_tlsf.c:590:16: warning: Conversion of string literal "prev_free field can not be null" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(prev && "prev_free field can not be null");
               ^
src/misc/lv_tlsf.c:591:16: warning: Conversion of string literal "next_free field can not be null" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(next && "next_free field can not be null");
               ^
src/misc/lv_tlsf.c:615:16: warning: Conversion of string literal "free list cannot have a null entry" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(current && "free list cannot have a null entry");
               ^
src/misc/lv_tlsf.c:616:16: warning: Conversion of string literal "cannot insert a null entry into the free list" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(block && "cannot insert a null entry into the free list");
               ^
src/misc/lv_tlsf.c:621:16: warning: Conversion of string literal "block not aligned properly" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(block_to_ptr(block) == align_ptr(block_to_ptr(block), ALIGN_SIZE)
               ^
src/misc/lv_tlsf.c:662:16: warning: Conversion of string literal "remaining block not aligned properly" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(block_to_ptr(remaining) == align_ptr(block_to_ptr(remaining), ALIGN_SIZE)
               ^
src/misc/lv_tlsf.c:667:16: warning: Conversion of string literal "block split with invalid size" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(block_size(remaining) >= block_size_min && "block split with invalid size");
               ^
src/misc/lv_tlsf.c:678:16: warning: Conversion of string literal "previous block can't be last" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(!block_is_last(prev) && "previous block can't be last");
               ^
src/misc/lv_tlsf.c:690:20: warning: Conversion of string literal "prev physical block can't be null" to bool always evaluates to true. [incorrectStringBooleanError]
        tlsf_assert(prev && "prev physical block can't be null");
                   ^
src/misc/lv_tlsf.c:691:20: warning: Conversion of string literal "prev block is not free though marked as such" to bool always evaluates to true. [incorrectStringBooleanError]
        tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
                   ^
src/misc/lv_tlsf.c:703:16: warning: Conversion of string literal "next physical block can't be null" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(next && "next physical block can't be null");
               ^
src/misc/lv_tlsf.c:706:20: warning: Conversion of string literal "previous block can't be last" to bool always evaluates to true. [incorrectStringBooleanError]
        tlsf_assert(!block_is_last(block) && "previous block can't be last");
                   ^
src/misc/lv_tlsf.c:717:16: warning: Conversion of string literal "block must be free" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(block_is_free(block) && "block must be free");
               ^
src/misc/lv_tlsf.c:729:16: warning: Conversion of string literal "block must be used" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(!block_is_free(block) && "block must be used");
               ^
src/misc/lv_tlsf.c:786:20: warning: Conversion of string literal "size must be non-zero" to bool always evaluates to true. [incorrectStringBooleanError]
        tlsf_assert(size && "size must be non-zero");
                   ^
src/misc/lv_tlsf.c:832:5: warning: Conversion of string literal "prev status incorrect" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_insist(integ->prev_status == this_prev_status && "prev status incorrect");
    ^
src/misc/lv_tlsf.c:833:5: warning: Conversion of string literal "block size incorrect" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_insist(size == this_block_size && "block size incorrect");
    ^
src/misc/lv_tlsf.c:856:17: warning: Conversion of string literal "second-level map must be null" to bool always evaluates to true. [incorrectStringBooleanError]
                tlsf_insist(!sl_map && "second-level map must be null");
                ^
src/misc/lv_tlsf.c:860:17: warning: Conversion of string literal "block list must be null" to bool always evaluates to true. [incorrectStringBooleanError]
                tlsf_insist(block == &control->block_null && "block list must be null");
                ^
src/misc/lv_tlsf.c:865:13: warning: Conversion of string literal "no free blocks in second-level map" to bool always evaluates to true. [incorrectStringBooleanError]
            tlsf_insist(sl_list && "no free blocks in second-level map");
            ^
src/misc/lv_tlsf.c:866:13: warning: Conversion of string literal "block should not be null" to bool always evaluates to true. [incorrectStringBooleanError]
            tlsf_insist(block != &control->block_null && "block should not be null");
            ^
src/misc/lv_tlsf.c:870:17: warning: Conversion of string literal "block should be free" to bool always evaluates to true. [incorrectStringBooleanError]
                tlsf_insist(block_is_free(block) && "block should be free");
                ^
src/misc/lv_tlsf.c:871:17: warning: Conversion of string literal "blocks should have coalesced" to bool always evaluates to true. [incorrectStringBooleanError]
                tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
                ^
src/misc/lv_tlsf.c:872:17: warning: Conversion of string literal "blocks should have coalesced" to bool always evaluates to true. [incorrectStringBooleanError]
                tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
                ^
src/misc/lv_tlsf.c:873:17: warning: Conversion of string literal "block should be free" to bool always evaluates to true. [incorrectStringBooleanError]
                tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
                ^
src/misc/lv_tlsf.c:874:17: warning: Conversion of string literal "block not minimum size" to bool always evaluates to true. [incorrectStringBooleanError]
                tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
                ^
src/misc/lv_tlsf.c:877:17: warning: Conversion of string literal "block size indexed in wrong list" to bool always evaluates to true. [incorrectStringBooleanError]
                tlsf_insist(fli == i && sli == j && "block size indexed in wrong list");
                ^
src/misc/lv_tlsf.c:1022:16: warning: Conversion of string literal "block should be free" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(block_is_free(block) && "block should be free");
               ^
src/misc/lv_tlsf.c:1023:16: warning: Conversion of string literal "next block should not be free" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(!block_is_free(block_next(block)) && "next block should not be free");
               ^
src/misc/lv_tlsf.c:1024:16: warning: Conversion of string literal "next block size should be zero" to bool always evaluates to true. [incorrectStringBooleanError]
    tlsf_assert(block_size(block_next(block)) == 0 && "next block size should be zero");
               ^
src/misc/lv_tlsf.c:1152:24: warning: Conversion of string literal "gap size too small" to bool always evaluates to true. [incorrectStringBooleanError]
            tlsf_assert(gap >= gap_minimum && "gap size too small");
                       ^
src/misc/lv_tlsf.c:1167:20: warning: Conversion of string literal "block already marked as free" to bool always evaluates to true. [incorrectStringBooleanError]
        tlsf_assert(!block_is_free(block) && "block already marked as free");
                   ^
src/misc/lv_tlsf.c:1216:20: warning: Conversion of string literal "block already marked as free" to bool always evaluates to true. [incorrectStringBooleanError]
        tlsf_assert(!block_is_free(block) && "block already marked as free");
                   ^
src/misc/lv_tlsf.c:449:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(block_is_prev_free(block) && "previous block must be free");
^
src/misc/lv_tlsf.c:458:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(!block_is_last(block));
^
src/misc/lv_tlsf.c:487:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
^
src/misc/lv_tlsf.c:493:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
^
src/misc/lv_tlsf.c:501:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(0 == (align & (align - 1)) && "must align to a power of two");
^
src/misc/lv_tlsf.c:577:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(sl_map && "internal error - second level bitmap is null");
^
src/misc/lv_tlsf.c:590:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(prev && "prev_free field can not be null");
^
src/misc/lv_tlsf.c:591:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(next && "next_free field can not be null");
^
src/misc/lv_tlsf.c:615:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(current && "free list cannot have a null entry");
^
src/misc/lv_tlsf.c:616:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(block && "cannot insert a null entry into the free list");
^
src/misc/lv_tlsf.c:621:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(block_to_ptr(block) == align_ptr(block_to_ptr(block), ALIGN_SIZE)
^
src/misc/lv_tlsf.c:662:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(block_to_ptr(remaining) == align_ptr(block_to_ptr(remaining), ALIGN_SIZE)
^
src/misc/lv_tlsf.c:665:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(block_size(block) == remain_size + size + block_header_overhead);
^
src/misc/lv_tlsf.c:667:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(block_size(remaining) >= block_size_min && "block split with invalid size");
^
src/misc/lv_tlsf.c:678:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(!block_is_last(prev) && "previous block can't be last");
^
src/misc/lv_tlsf.c:690:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        tlsf_assert(prev && "prev physical block can't be null");
^
src/misc/lv_tlsf.c:691:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        tlsf_assert(block_is_free(prev) && "prev block is not free though marked as such");
^
src/misc/lv_tlsf.c:703:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(next && "next physical block can't be null");
^
src/misc/lv_tlsf.c:706:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        tlsf_assert(!block_is_last(block) && "previous block can't be last");
^
src/misc/lv_tlsf.c:717:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(block_is_free(block) && "block must be free");
^
src/misc/lv_tlsf.c:729:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(!block_is_free(block) && "block must be used");
^
src/misc/lv_tlsf.c:775:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        tlsf_assert(block_size(block) >= size);
^
src/misc/lv_tlsf.c:786:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        tlsf_assert(size && "size must be non-zero");
^
src/misc/lv_tlsf.c:832:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_insist(integ->prev_status == this_prev_status && "prev status incorrect");
^
src/misc/lv_tlsf.c:833:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_insist(size == this_block_size && "block size incorrect");
^
src/misc/lv_tlsf.c:856:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                tlsf_insist(!sl_map && "second-level map must be null");
^
src/misc/lv_tlsf.c:860:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                tlsf_insist(block == &control->block_null && "block list must be null");
^
src/misc/lv_tlsf.c:865:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            tlsf_insist(sl_list && "no free blocks in second-level map");
^
src/misc/lv_tlsf.c:866:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            tlsf_insist(block != &control->block_null && "block should not be null");
^
src/misc/lv_tlsf.c:870:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                tlsf_insist(block_is_free(block) && "block should be free");
^
src/misc/lv_tlsf.c:871:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                tlsf_insist(!block_is_prev_free(block) && "blocks should have coalesced");
^
src/misc/lv_tlsf.c:872:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                tlsf_insist(!block_is_free(block_next(block)) && "blocks should have coalesced");
^
src/misc/lv_tlsf.c:873:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                tlsf_insist(block_is_prev_free(block_next(block)) && "block should be free");
^
src/misc/lv_tlsf.c:874:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                tlsf_insist(block_size(block) >= block_size_min && "block not minimum size");
^
src/misc/lv_tlsf.c:877:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                tlsf_insist(fli == i && sli == j && "block size indexed in wrong list");
^
src/misc/lv_tlsf.c:1022:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(block_is_free(block) && "block should be free");
^
src/misc/lv_tlsf.c:1023:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(!block_is_free(block_next(block)) && "next block should not be free");
^
src/misc/lv_tlsf.c:1024:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(block_size(block_next(block)) == 0 && "next block size should be zero");
^
src/misc/lv_tlsf.c:1131:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    tlsf_assert(sizeof(block_header_t) == block_size_min + block_header_overhead);
^
src/misc/lv_tlsf.c:1152:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            tlsf_assert(gap >= gap_minimum && "gap size too small");
^
src/misc/lv_tlsf.c:1167:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        tlsf_assert(!block_is_free(block) && "block already marked as free");
^
src/misc/lv_tlsf.c:1216:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        tlsf_assert(!block_is_free(block) && "block already marked as free");
^
src/misc/lv_txt.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_txt.c:672:63: style:inconclusive: Function 'lv_txt_utf8_prev' argument 2 names different: declaration 'i_start' definition 'i'. [funcArgNamesDifferent]
static uint32_t lv_txt_utf8_prev(const char * txt, uint32_t * i)
                                                              ^
src/misc/lv_txt.c:35:67: note: Function 'lv_txt_utf8_prev' argument 2 names different: declaration 'i_start' definition 'i'.
    static uint32_t lv_txt_utf8_prev(const char * txt, uint32_t * i_start);
                                                                  ^
src/misc/lv_txt.c:672:63: note: Function 'lv_txt_utf8_prev' argument 2 names different: declaration 'i_start' definition 'i'.
static uint32_t lv_txt_utf8_prev(const char * txt, uint32_t * i)
                                                              ^
src/misc/lv_txt.c:487:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(text);
^
src/misc/lv_txt_ap.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 426 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/misc/lv_txt_ap.c:24:13: style: struct member 'ap_chars_map_t::char_offset' is never used. [unusedStructMember]
    uint8_t char_offset;
            ^
src/misc/lv_txt_ap.c:25:14: style: struct member 'ap_chars_map_t::char_end_form' is never used. [unusedStructMember]
    uint16_t char_end_form;
             ^
src/misc/lv_txt_ap.c:26:12: style: struct member 'ap_chars_map_t::char_begining_form_offset' is never used. [unusedStructMember]
    int8_t char_begining_form_offset;
           ^
src/misc/lv_txt_ap.c:27:12: style: struct member 'ap_chars_map_t::char_middle_form_offset' is never used. [unusedStructMember]
    int8_t char_middle_form_offset;
           ^
src/misc/lv_txt_ap.c:28:12: style: struct member 'ap_chars_map_t::char_isolated_form_offset' is never used. [unusedStructMember]
    int8_t char_isolated_form_offset;
           ^
src/misc/lv_txt_ap.c:30:17: style: struct member 'Anonymous31::conj_to_previous' is never used. [unusedStructMember]
        uint8_t conj_to_previous;
                ^
src/misc/lv_txt_ap.c:31:17: style: struct member 'Anonymous31::conj_to_next' is never used. [unusedStructMember]
        uint8_t conj_to_next;
                ^
src/misc/lv_utils.c:58:13: style: The scope of the variable 'c' can be reduced. [variableScope]
    int32_t c;
            ^
src/others/file_explorer/lv_file_explorer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/others/fragment/lv_fragment.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/others/fragment/lv_fragment_manager.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/others/gridnav/lv_gridnav.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/others/ime/lv_ime_pinyin.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/others/imgfont/lv_imgfont.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/others/monkey/lv_monkey.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/others/msg/lv_msg.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/others/snapshot/lv_snapshot.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/themes/basic/lv_theme_basic.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 469 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/themes/default/lv_theme_default.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 479 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/themes/default/lv_theme_default.c:156:13: style: struct member 'my_theme_t::light' is never used. [unusedStructMember]
    uint8_t light : 1;
            ^
src/themes/mono/lv_theme_mono.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 467 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/animimg/lv_animimg.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/animimg/lv_animimg.c:67:36: style:inconclusive: Function 'lv_animimg_set_src' argument 1 names different: declaration 'img' definition 'obj'. [funcArgNamesDifferent]
void lv_animimg_set_src(lv_obj_t * obj, const void * dsc[], uint8_t num)
                                   ^
src/widgets/animimg/lv_animimg.h:72:36: note: Function 'lv_animimg_set_src' argument 1 names different: declaration 'img' definition 'obj'.
void lv_animimg_set_src(lv_obj_t * img, const void * dsc[], uint8_t num);
                                   ^
src/widgets/animimg/lv_animimg.c:67:36: note: Function 'lv_animimg_set_src' argument 1 names different: declaration 'img' definition 'obj'.
void lv_animimg_set_src(lv_obj_t * obj, const void * dsc[], uint8_t num)
                                   ^
src/widgets/animimg/lv_animimg.c:87:41: style:inconclusive: Function 'lv_animimg_set_duration' argument 1 names different: declaration 'img' definition 'obj'. [funcArgNamesDifferent]
void lv_animimg_set_duration(lv_obj_t * obj, uint32_t duration)
                                        ^
src/widgets/animimg/lv_animimg.h:84:41: note: Function 'lv_animimg_set_duration' argument 1 names different: declaration 'img' definition 'obj'.
void lv_animimg_set_duration(lv_obj_t * img, uint32_t duration);
                                        ^
src/widgets/animimg/lv_animimg.c:87:41: note: Function 'lv_animimg_set_duration' argument 1 names different: declaration 'img' definition 'obj'.
void lv_animimg_set_duration(lv_obj_t * obj, uint32_t duration)
                                        ^
src/widgets/animimg/lv_animimg.c:95:45: style:inconclusive: Function 'lv_animimg_set_repeat_count' argument 1 names different: declaration 'img' definition 'obj'. [funcArgNamesDifferent]
void lv_animimg_set_repeat_count(lv_obj_t * obj, uint16_t count)
                                            ^
src/widgets/animimg/lv_animimg.h:91:45: note: Function 'lv_animimg_set_repeat_count' argument 1 names different: declaration 'img' definition 'obj'.
void lv_animimg_set_repeat_count(lv_obj_t * img, uint16_t count);
                                            ^
src/widgets/animimg/lv_animimg.c:95:45: note: Function 'lv_animimg_set_repeat_count' argument 1 names different: declaration 'img' definition 'obj'.
void lv_animimg_set_repeat_count(lv_obj_t * obj, uint16_t count)
                                            ^
src/widgets/animimg/lv_animimg.c:106:45: style:inconclusive: Function 'lv_animimg_get_src' argument 1 names different: declaration 'img' definition 'obj'. [funcArgNamesDifferent]
const void ** lv_animimg_get_src(lv_obj_t * obj)
                                            ^
src/widgets/animimg/lv_animimg.h:102:45: note: Function 'lv_animimg_get_src' argument 1 names different: declaration 'img' definition 'obj'.
const void ** lv_animimg_get_src(lv_obj_t * img);
                                            ^
src/widgets/animimg/lv_animimg.c:106:45: note: Function 'lv_animimg_get_src' argument 1 names different: declaration 'img' definition 'obj'.
const void ** lv_animimg_get_src(lv_obj_t * obj)
                                            ^
src/widgets/animimg/lv_animimg.c:113:45: style:inconclusive: Function 'lv_animimg_get_src_count' argument 1 names different: declaration 'img' definition 'obj'. [funcArgNamesDifferent]
uint8_t lv_animimg_get_src_count(lv_obj_t * obj)
                                            ^
src/widgets/animimg/lv_animimg.h:109:45: note: Function 'lv_animimg_get_src_count' argument 1 names different: declaration 'img' definition 'obj'.
uint8_t lv_animimg_get_src_count(lv_obj_t * img);
                                            ^
src/widgets/animimg/lv_animimg.c:113:45: note: Function 'lv_animimg_get_src_count' argument 1 names different: declaration 'img' definition 'obj'.
uint8_t lv_animimg_get_src_count(lv_obj_t * obj)
                                            ^
src/widgets/animimg/lv_animimg.c:120:45: style:inconclusive: Function 'lv_animimg_get_duration' argument 1 names different: declaration 'img' definition 'obj'. [funcArgNamesDifferent]
uint32_t lv_animimg_get_duration(lv_obj_t * obj)
                                            ^
src/widgets/animimg/lv_animimg.h:116:45: note: Function 'lv_animimg_get_duration' argument 1 names different: declaration 'img' definition 'obj'.
uint32_t lv_animimg_get_duration(lv_obj_t * img);
                                            ^
src/widgets/animimg/lv_animimg.c:120:45: note: Function 'lv_animimg_get_duration' argument 1 names different: declaration 'img' definition 'obj'.
uint32_t lv_animimg_get_duration(lv_obj_t * obj)
                                            ^
src/widgets/animimg/lv_animimg.c:127:49: style:inconclusive: Function 'lv_animimg_get_repeat_count' argument 1 names different: declaration 'img' definition 'obj'. [funcArgNamesDifferent]
uint16_t lv_animimg_get_repeat_count(lv_obj_t * obj)
                                                ^
src/widgets/animimg/lv_animimg.h:123:49: note: Function 'lv_animimg_get_repeat_count' argument 1 names different: declaration 'img' definition 'obj'.
uint16_t lv_animimg_get_repeat_count(lv_obj_t * img);
                                                ^
src/widgets/animimg/lv_animimg.c:127:49: note: Function 'lv_animimg_get_repeat_count' argument 1 names different: declaration 'img' definition 'obj'.
uint16_t lv_animimg_get_repeat_count(lv_obj_t * obj)
                                                ^
src/widgets/arc/lv_arc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/arc/lv_arc.c:270:40: style:inconclusive: Function 'lv_arc_set_knob_offset' argument 1 names different: declaration 'arc' definition 'obj'. [funcArgNamesDifferent]
void lv_arc_set_knob_offset(lv_obj_t * obj, int16_t offset)
                                       ^
src/widgets/arc/lv_arc.h:172:40: note: Function 'lv_arc_set_knob_offset' argument 1 names different: declaration 'arc' definition 'obj'.
void lv_arc_set_knob_offset(lv_obj_t * arc, int16_t offset);
                                       ^
src/widgets/arc/lv_arc.c:270:40: note: Function 'lv_arc_set_knob_offset' argument 1 names different: declaration 'arc' definition 'obj'.
void lv_arc_set_knob_offset(lv_obj_t * obj, int16_t offset)
                                       ^
src/widgets/arc/lv_arc.c:714:37: style:inconclusive: Function 'inv_arc_area' argument 1 names different: declaration 'arc' definition 'obj'. [funcArgNamesDifferent]
static void inv_arc_area(lv_obj_t * obj, uint16_t start_angle, uint16_t end_angle, lv_part_t part)
                                    ^
src/widgets/arc/lv_arc.c:36:37: note: Function 'inv_arc_area' argument 1 names different: declaration 'arc' definition 'obj'.
static void inv_arc_area(lv_obj_t * arc, uint16_t start_angle, uint16_t end_angle, lv_part_t part);
                                    ^
src/widgets/arc/lv_arc.c:714:37: note: Function 'inv_arc_area' argument 1 names different: declaration 'arc' definition 'obj'.
static void inv_arc_area(lv_obj_t * obj, uint16_t start_angle, uint16_t end_angle, lv_part_t part)
                                    ^
src/widgets/arc/lv_arc.c:807:38: style:inconclusive: Function 'get_knob_area' argument 1 names different: declaration 'arc' definition 'obj'. [funcArgNamesDifferent]
static void get_knob_area(lv_obj_t * obj, const lv_point_t * center, lv_coord_t r, lv_area_t * knob_area)
                                     ^
src/widgets/arc/lv_arc.c:40:38: note: Function 'get_knob_area' argument 1 names different: declaration 'arc' definition 'obj'.
static void get_knob_area(lv_obj_t * arc, const lv_point_t * center, lv_coord_t r, lv_area_t * knob_area);
                                     ^
src/widgets/arc/lv_arc.c:807:38: note: Function 'get_knob_area' argument 1 names different: declaration 'arc' definition 'obj'.
static void get_knob_area(lv_obj_t * obj, const lv_point_t * center, lv_coord_t r, lv_area_t * knob_area)
                                     ^
src/widgets/arc/lv_arc.c:833:37: style:inconclusive: Function 'value_update' argument 1 names different: declaration 'arc' definition 'obj'. [funcArgNamesDifferent]
static void value_update(lv_obj_t * obj)
                                    ^
src/widgets/arc/lv_arc.c:41:37: note: Function 'value_update' argument 1 names different: declaration 'arc' definition 'obj'.
static void value_update(lv_obj_t * arc);
                                    ^
src/widgets/arc/lv_arc.c:833:37: note: Function 'value_update' argument 1 names different: declaration 'arc' definition 'obj'.
static void value_update(lv_obj_t * obj)
                                    ^
src/widgets/arc/lv_arc.c:350:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(obj_to_align);
^
src/widgets/arc/lv_arc.c:371:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(obj_to_rotate);
^
src/widgets/bar/lv_bar.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/bar/lv_bar.c:511:34: style: Variable 'draw_rect_dsc.shadow_opa' is reassigned a value before the old one has been used. [redundantAssignment]
        draw_rect_dsc.shadow_opa = LV_OPA_TRANSP;
                                 ^
src/widgets/bar/lv_bar.c:506:34: note: draw_rect_dsc.shadow_opa is assigned
        draw_rect_dsc.shadow_opa = shadow_opa;
                                 ^
src/widgets/bar/lv_bar.c:511:34: note: draw_rect_dsc.shadow_opa is overwritten
        draw_rect_dsc.shadow_opa = LV_OPA_TRANSP;
                                 ^
src/widgets/bar/lv_bar.c:104:53: style:inconclusive: Function 'lv_bar_set_start_value' argument 2 names different: declaration 'start_value' definition 'value'. [funcArgNamesDifferent]
void lv_bar_set_start_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
                                                    ^
src/widgets/bar/lv_bar.h:97:53: note: Function 'lv_bar_set_start_value' argument 2 names different: declaration 'start_value' definition 'value'.
void lv_bar_set_start_value(lv_obj_t * obj, int32_t start_value, lv_anim_enable_t anim);
                                                    ^
src/widgets/bar/lv_bar.c:104:53: note: Function 'lv_bar_set_start_value' argument 2 names different: declaration 'start_value' definition 'value'.
void lv_bar_set_start_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
                                                    ^
src/widgets/bar/lv_bar.c:569:32: style:inconclusive: Function 'lv_bar_anim' argument 1 names different: declaration 'bar' definition 'var'. [funcArgNamesDifferent]
static void lv_bar_anim(void * var, int32_t value)
                               ^
src/widgets/bar/lv_bar.c:54:32: note: Function 'lv_bar_anim' argument 1 names different: declaration 'bar' definition 'var'.
static void lv_bar_anim(void * bar, int32_t value);
                               ^
src/widgets/bar/lv_bar.c:569:32: note: Function 'lv_bar_anim' argument 1 names different: declaration 'bar' definition 'var'.
static void lv_bar_anim(void * var, int32_t value)
                               ^
src/widgets/bar/lv_bar.c:630:41: style:inconclusive: Function 'lv_bar_init_anim' argument 1 names different: declaration 'bar' definition 'obj'. [funcArgNamesDifferent]
static void lv_bar_init_anim(lv_obj_t * obj, _lv_bar_anim_t * bar_anim)
                                        ^
src/widgets/bar/lv_bar.c:53:41: note: Function 'lv_bar_init_anim' argument 1 names different: declaration 'bar' definition 'obj'.
static void lv_bar_init_anim(lv_obj_t * bar, _lv_bar_anim_t * bar_anim);
                                        ^
src/widgets/bar/lv_bar.c:630:41: note: Function 'lv_bar_init_anim' argument 1 names different: declaration 'bar' definition 'obj'.
static void lv_bar_init_anim(lv_obj_t * obj, _lv_bar_anim_t * bar_anim)
                                        ^
src/widgets/btn/lv_btn.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/btnmatrix/lv_btnmatrix.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/btnmatrix/lv_btnmatrix.c:1032:22: style: Checking if unsigned expression 'btnm->row_cnt' is less than zero. [unsignedLessThanZero]
    if(btnm->row_cnt <= 0) {
                     ^
src/widgets/btnmatrix/lv_btnmatrix.c:846:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(btnm->button_areas);
^
src/widgets/btnmatrix/lv_btnmatrix.c:848:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(btnm->ctrl_bits);
^
src/widgets/calendar/lv_calendar.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/calendar/lv_calendar.c:381:14: style: The scope of the variable 'i' can be reduced. [variableScope]
    uint16_t i;
             ^
src/widgets/calendar/lv_calendar.c:179:72: style:inconclusive: Function 'lv_calendar_get_today_date' argument 1 names different: declaration 'calendar' definition 'obj'. [funcArgNamesDifferent]
const lv_calendar_date_t * lv_calendar_get_today_date(const lv_obj_t * obj)
                                                                       ^
src/widgets/calendar/lv_calendar.h:119:72: note: Function 'lv_calendar_get_today_date' argument 1 names different: declaration 'calendar' definition 'obj'.
const lv_calendar_date_t * lv_calendar_get_today_date(const lv_obj_t * calendar);
                                                                       ^
src/widgets/calendar/lv_calendar.c:179:72: note: Function 'lv_calendar_get_today_date' argument 1 names different: declaration 'calendar' definition 'obj'.
const lv_calendar_date_t * lv_calendar_get_today_date(const lv_obj_t * obj)
                                                                       ^
src/widgets/calendar/lv_calendar.c:187:73: style:inconclusive: Function 'lv_calendar_get_showed_date' argument 1 names different: declaration 'calendar' definition 'obj'. [funcArgNamesDifferent]
const lv_calendar_date_t * lv_calendar_get_showed_date(const lv_obj_t * obj)
                                                                        ^
src/widgets/calendar/lv_calendar.h:126:73: note: Function 'lv_calendar_get_showed_date' argument 1 names different: declaration 'calendar' definition 'obj'.
const lv_calendar_date_t * lv_calendar_get_showed_date(const lv_obj_t * calendar);
                                                                        ^
src/widgets/calendar/lv_calendar.c:187:73: note: Function 'lv_calendar_get_showed_date' argument 1 names different: declaration 'calendar' definition 'obj'.
const lv_calendar_date_t * lv_calendar_get_showed_date(const lv_obj_t * obj)
                                                                        ^
src/widgets/calendar/lv_calendar.c:195:73: style:inconclusive: Function 'lv_calendar_get_highlighted_dates' argument 1 names different: declaration 'calendar' definition 'obj'. [funcArgNamesDifferent]
lv_calendar_date_t * lv_calendar_get_highlighted_dates(const lv_obj_t * obj)
                                                                        ^
src/widgets/calendar/lv_calendar.h:133:73: note: Function 'lv_calendar_get_highlighted_dates' argument 1 names different: declaration 'calendar' definition 'obj'.
lv_calendar_date_t * lv_calendar_get_highlighted_dates(const lv_obj_t * calendar);
                                                                        ^
src/widgets/calendar/lv_calendar.c:195:73: note: Function 'lv_calendar_get_highlighted_dates' argument 1 names different: declaration 'calendar' definition 'obj'.
lv_calendar_date_t * lv_calendar_get_highlighted_dates(const lv_obj_t * obj)
                                                                        ^
src/widgets/calendar/lv_calendar.c:203:65: style:inconclusive: Function 'lv_calendar_get_highlighted_dates_num' argument 1 names different: declaration 'calendar' definition 'obj'. [funcArgNamesDifferent]
uint16_t lv_calendar_get_highlighted_dates_num(const lv_obj_t * obj)
                                                                ^
src/widgets/calendar/lv_calendar.h:140:65: note: Function 'lv_calendar_get_highlighted_dates_num' argument 1 names different: declaration 'calendar' definition 'obj'.
uint16_t lv_calendar_get_highlighted_dates_num(const lv_obj_t * calendar);
                                                                ^
src/widgets/calendar/lv_calendar.c:203:65: note: Function 'lv_calendar_get_highlighted_dates_num' argument 1 names different: declaration 'calendar' definition 'obj'.
uint16_t lv_calendar_get_highlighted_dates_num(const lv_obj_t * obj)
                                                                ^
src/widgets/calendar/lv_calendar.c:211:56: style:inconclusive: Function 'lv_calendar_get_pressed_date' argument 1 names different: declaration 'calendar' definition 'obj'. [funcArgNamesDifferent]
lv_res_t lv_calendar_get_pressed_date(const lv_obj_t * obj, lv_calendar_date_t * date)
                                                       ^
src/widgets/calendar/lv_calendar.h:148:56: note: Function 'lv_calendar_get_pressed_date' argument 1 names different: declaration 'calendar' definition 'obj'.
lv_res_t lv_calendar_get_pressed_date(const lv_obj_t * calendar, lv_calendar_date_t * date);
                                                       ^
src/widgets/calendar/lv_calendar.c:211:56: note: Function 'lv_calendar_get_pressed_date' argument 1 names different: declaration 'calendar' definition 'obj'.
lv_res_t lv_calendar_get_pressed_date(const lv_obj_t * obj, lv_calendar_date_t * date)
                                                       ^
src/widgets/calendar/lv_calendar.c:378:41: style:inconclusive: Function 'highlight_update' argument 1 names different: declaration 'calendar' definition 'obj'. [funcArgNamesDifferent]
static void highlight_update(lv_obj_t * obj)
                                        ^
src/widgets/calendar/lv_calendar.c:36:41: note: Function 'highlight_update' argument 1 names different: declaration 'calendar' definition 'obj'.
static void highlight_update(lv_obj_t * calendar);
                                        ^
src/widgets/calendar/lv_calendar.c:378:41: note: Function 'highlight_update' argument 1 names different: declaration 'calendar' definition 'obj'.
static void highlight_update(lv_obj_t * obj)
                                        ^
src/widgets/calendar/lv_calendar.c:98:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(highlighted);
^
src/widgets/calendar/lv_calendar_header_arrow.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/calendar/lv_calendar_header_dropdown.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/canvas/lv_canvas.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/canvas/lv_canvas.c:65:38: style:inconclusive: Function 'lv_canvas_set_buffer' argument 1 names different: declaration 'canvas' definition 'obj'. [funcArgNamesDifferent]
void lv_canvas_set_buffer(lv_obj_t * obj, void * buf, lv_coord_t w, lv_coord_t h, lv_color_format_t cf)
                                     ^
src/widgets/canvas/lv_canvas.h:65:38: note: Function 'lv_canvas_set_buffer' argument 1 names different: declaration 'canvas' definition 'obj'.
void lv_canvas_set_buffer(lv_obj_t * canvas, void * buf, lv_coord_t w, lv_coord_t h, lv_color_format_t cf);
                                     ^
src/widgets/canvas/lv_canvas.c:65:38: note: Function 'lv_canvas_set_buffer' argument 1 names different: declaration 'canvas' definition 'obj'.
void lv_canvas_set_buffer(lv_obj_t * obj, void * buf, lv_coord_t w, lv_coord_t h, lv_color_format_t cf)
                                     ^
src/widgets/canvas/lv_canvas.c:108:39: style:inconclusive: Function 'lv_canvas_set_palette' argument 1 names different: declaration 'canvas' definition 'obj'. [funcArgNamesDifferent]
void lv_canvas_set_palette(lv_obj_t * obj, uint8_t id, lv_color32_t c)
                                      ^
src/widgets/canvas/lv_canvas.h:79:39: note: Function 'lv_canvas_set_palette' argument 1 names different: declaration 'canvas' definition 'obj'.
void lv_canvas_set_palette(lv_obj_t * canvas, uint8_t id, lv_color32_t c);
                                      ^
src/widgets/canvas/lv_canvas.c:108:39: note: Function 'lv_canvas_set_palette' argument 1 names different: declaration 'canvas' definition 'obj'.
void lv_canvas_set_palette(lv_obj_t * obj, uint8_t id, lv_color32_t c)
                                      ^
src/widgets/canvas/lv_canvas.c:133:45: style:inconclusive: Function 'lv_canvas_get_img' argument 1 names different: declaration 'canvas' definition 'obj'. [funcArgNamesDifferent]
lv_img_dsc_t * lv_canvas_get_img(lv_obj_t * obj)
                                            ^
src/widgets/canvas/lv_canvas.h:92:45: note: Function 'lv_canvas_get_img' argument 1 names different: declaration 'canvas' definition 'obj'.
lv_img_dsc_t * lv_canvas_get_img(lv_obj_t * canvas);
                                            ^
src/widgets/canvas/lv_canvas.c:133:45: note: Function 'lv_canvas_get_img' argument 1 names different: declaration 'canvas' definition 'obj'.
lv_img_dsc_t * lv_canvas_get_img(lv_obj_t * obj)
                                            ^
src/widgets/canvas/lv_canvas.c:145:36: style:inconclusive: Function 'lv_canvas_copy_buf' argument 1 names different: declaration 'canvas' definition 'obj'. [funcArgNamesDifferent]
void lv_canvas_copy_buf(lv_obj_t * obj, const void * to_copy, lv_coord_t x, lv_coord_t y, lv_coord_t w, lv_coord_t h)
                                   ^
src/widgets/canvas/lv_canvas.h:108:36: note: Function 'lv_canvas_copy_buf' argument 1 names different: declaration 'canvas' definition 'obj'.
void lv_canvas_copy_buf(lv_obj_t * canvas, const void * to_copy, lv_coord_t x, lv_coord_t y, lv_coord_t w,
                                   ^
src/widgets/canvas/lv_canvas.c:145:36: note: Function 'lv_canvas_copy_buf' argument 1 names different: declaration 'canvas' definition 'obj'.
void lv_canvas_copy_buf(lv_obj_t * obj, const void * to_copy, lv_coord_t x, lv_coord_t y, lv_coord_t w, lv_coord_t h)
                                   ^
src/widgets/canvas/lv_canvas.c:168:37: style:inconclusive: Function 'lv_canvas_transform' argument 1 names different: declaration 'canvas' definition 'obj'. [funcArgNamesDifferent]
void lv_canvas_transform(lv_obj_t * obj, lv_img_dsc_t * src_img, int16_t angle, uint16_t zoom, lv_coord_t offset_x,
                                    ^
src/widgets/canvas/lv_canvas.h:126:37: note: Function 'lv_canvas_transform' argument 1 names different: declaration 'canvas' definition 'obj'.
void lv_canvas_transform(lv_obj_t * canvas, lv_img_dsc_t * img, int16_t angle, uint16_t zoom, lv_coord_t offset_x,
                                    ^
src/widgets/canvas/lv_canvas.c:168:37: note: Function 'lv_canvas_transform' argument 1 names different: declaration 'canvas' definition 'obj'.
void lv_canvas_transform(lv_obj_t * obj, lv_img_dsc_t * src_img, int16_t angle, uint16_t zoom, lv_coord_t offset_x,
                                    ^
src/widgets/canvas/lv_canvas.c:168:57: style:inconclusive: Function 'lv_canvas_transform' argument 2 names different: declaration 'img' definition 'src_img'. [funcArgNamesDifferent]
void lv_canvas_transform(lv_obj_t * obj, lv_img_dsc_t * src_img, int16_t angle, uint16_t zoom, lv_coord_t offset_x,
                                                        ^
src/widgets/canvas/lv_canvas.h:126:60: note: Function 'lv_canvas_transform' argument 2 names different: declaration 'img' definition 'src_img'.
void lv_canvas_transform(lv_obj_t * canvas, lv_img_dsc_t * img, int16_t angle, uint16_t zoom, lv_coord_t offset_x,
                                                           ^
src/widgets/canvas/lv_canvas.c:168:57: note: Function 'lv_canvas_transform' argument 2 names different: declaration 'img' definition 'src_img'.
void lv_canvas_transform(lv_obj_t * obj, lv_img_dsc_t * src_img, int16_t angle, uint16_t zoom, lv_coord_t offset_x,
                                                        ^
src/widgets/canvas/lv_canvas.c:240:36: style:inconclusive: Function 'lv_canvas_blur_hor' argument 1 names different: declaration 'canvas' definition 'obj'. [funcArgNamesDifferent]
void lv_canvas_blur_hor(lv_obj_t * obj, const lv_area_t * area, uint16_t r)
                                   ^
src/widgets/canvas/lv_canvas.h:136:36: note: Function 'lv_canvas_blur_hor' argument 1 names different: declaration 'canvas' definition 'obj'.
void lv_canvas_blur_hor(lv_obj_t * canvas, const lv_area_t * area, uint16_t r);
                                   ^
src/widgets/canvas/lv_canvas.c:240:36: note: Function 'lv_canvas_blur_hor' argument 1 names different: declaration 'canvas' definition 'obj'.
void lv_canvas_blur_hor(lv_obj_t * obj, const lv_area_t * area, uint16_t r)
                                   ^
src/widgets/canvas/lv_canvas.c:350:36: style:inconclusive: Function 'lv_canvas_blur_ver' argument 1 names different: declaration 'canvas' definition 'obj'. [funcArgNamesDifferent]
void lv_canvas_blur_ver(lv_obj_t * obj, const lv_area_t * area, uint16_t r)
                                   ^
src/widgets/canvas/lv_canvas.h:144:36: note: Function 'lv_canvas_blur_ver' argument 1 names different: declaration 'canvas' definition 'obj'.
void lv_canvas_blur_ver(lv_obj_t * canvas, const lv_area_t * area, uint16_t r);
                                   ^
src/widgets/canvas/lv_canvas.c:350:36: note: Function 'lv_canvas_blur_ver' argument 1 names different: declaration 'canvas' definition 'obj'.
void lv_canvas_blur_ver(lv_obj_t * obj, const lv_area_t * area, uint16_t r)
                                   ^
src/widgets/canvas/lv_canvas.c:459:35: style:inconclusive: Function 'lv_canvas_fill_bg' argument 1 names different: declaration 'canvas' definition 'obj'. [funcArgNamesDifferent]
void lv_canvas_fill_bg(lv_obj_t * obj, lv_color_t color, lv_opa_t opa)
                                  ^
src/widgets/canvas/lv_canvas.h:152:35: note: Function 'lv_canvas_fill_bg' argument 1 names different: declaration 'canvas' definition 'obj'.
void lv_canvas_fill_bg(lv_obj_t * canvas, lv_color_t color, lv_opa_t opa);
                                  ^
src/widgets/canvas/lv_canvas.c:459:35: note: Function 'lv_canvas_fill_bg' argument 1 names different: declaration 'canvas' definition 'obj'.
void lv_canvas_fill_bg(lv_obj_t * obj, lv_color_t color, lv_opa_t opa)
                                  ^
src/widgets/canvas/lv_canvas.c:68:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(buf);
^
src/widgets/canvas/lv_canvas.c:148:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(to_copy);
^
src/widgets/canvas/lv_canvas.c:174:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(src_img);
^
src/widgets/canvas/lv_canvas.c:701:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(draw_ctx);
^
src/widgets/chart/lv_chart.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/chart/lv_chart.c:891:5: error: Address of local auto-variable assigned to a function parameter. [autoVariables]
    draw_ctx->clip_area = &clip_area;
    ^
src/widgets/chart/lv_chart.c:1061:5: error: Address of local auto-variable assigned to a function parameter. [autoVariables]
    draw_ctx->clip_area = &clip_area;
    ^
src/widgets/chart/lv_chart.c:1203:5: error: Address of local auto-variable assigned to a function parameter. [autoVariables]
    draw_ctx->clip_area = &clip_area;
    ^
src/widgets/chart/lv_chart.c:1293:5: error: Address of local auto-variable assigned to a function parameter. [autoVariables]
    draw_ctx->clip_area = &clip_area;
    ^
src/widgets/chart/lv_chart.c:1106:18: style: Variable 'p2.x' is reassigned a value before the old one has been used. [redundantAssignment]
            p2.x = lv_map(ser->x_points[p_act], chart->xmin[ser->x_axis_sec], chart->xmax[ser->x_axis_sec], 0, w);
                 ^
src/widgets/chart/lv_chart.c:1101:14: note: p2.x is assigned
        p2.x = x_ofs;
             ^
src/widgets/chart/lv_chart.c:1106:18: note: p2.x is overwritten
            p2.x = lv_map(ser->x_points[p_act], chart->xmin[ser->x_axis_sec], chart->xmax[ser->x_axis_sec], 0, w);
                 ^
src/widgets/chart/lv_chart.c:956:20: style:inconclusive: Same expression used in consecutive assignments of 'y_min' and 'y_max'. [duplicateAssignExpression]
        lv_coord_t y_min = p2.y;
                   ^
src/widgets/chart/lv_chart.c:957:20: note: Same expression used in consecutive assignments of 'y_min' and 'y_max'.
        lv_coord_t y_max = p2.y;
                   ^
src/widgets/chart/lv_chart.c:956:20: note: Same expression used in consecutive assignments of 'y_min' and 'y_max'.
        lv_coord_t y_min = p2.y;
                   ^
src/widgets/chart/lv_chart.c:696:25: style: The scope of the variable 'ser' can be reduced. [variableScope]
    lv_chart_series_t * ser;
                        ^
src/widgets/chart/lv_chart.c:707:25: style: The scope of the variable 'cur' can be reduced. [variableScope]
    lv_chart_cursor_t * cur;
                        ^
src/widgets/chart/lv_chart.c:442:63: style:inconclusive: Function 'lv_chart_get_series_next' argument 1 names different: declaration 'chart' definition 'obj'. [funcArgNamesDifferent]
lv_chart_series_t * lv_chart_get_series_next(const lv_obj_t * obj, const lv_chart_series_t * ser)
                                                              ^
src/widgets/chart/lv_chart.h:316:63: note: Function 'lv_chart_get_series_next' argument 1 names different: declaration 'chart' definition 'obj'.
lv_chart_series_t * lv_chart_get_series_next(const lv_obj_t * chart, const lv_chart_series_t * ser);
                                                              ^
src/widgets/chart/lv_chart.c:442:63: note: Function 'lv_chart_get_series_next' argument 1 names different: declaration 'chart' definition 'obj'.
lv_chart_series_t * lv_chart_get_series_next(const lv_obj_t * obj, const lv_chart_series_t * ser)
                                                              ^
src/widgets/chart/lv_chart.c:94:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            LV_ASSERT_MALLOC(ser->x_points);
^
src/widgets/chart/lv_chart.c:267:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(ser);
^
src/widgets/chart/lv_chart.c:274:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(obj);
^
src/widgets/chart/lv_chart.c:275:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(ser);
^
src/widgets/chart/lv_chart.c:353:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(ser);
^
src/widgets/chart/lv_chart.c:358:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(ser->y_points);
^
src/widgets/chart/lv_chart.c:362:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(ser->x_points);
^
src/widgets/chart/lv_chart.c:402:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(series);
^
src/widgets/chart/lv_chart.c:416:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(series);
^
src/widgets/chart/lv_chart.c:426:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(series);
^
src/widgets/chart/lv_chart.c:435:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(ser);
^
src/widgets/chart/lv_chart.c:468:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(cursor);
^
src/widgets/chart/lv_chart.c:490:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(cursor);
^
src/widgets/chart/lv_chart.c:509:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(cursor);
^
src/widgets/chart/lv_chart.c:527:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(cursor);
^
src/widgets/chart/lv_chart.c:541:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(ser);
^
src/widgets/chart/lv_chart.c:555:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(ser);
^
src/widgets/chart/lv_chart.c:567:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(ser);
^
src/widgets/chart/lv_chart.c:585:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(ser);
^
src/widgets/chart/lv_chart.c:597:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(ser);
^
src/widgets/chart/lv_chart.c:614:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(ser);
^
src/widgets/chart/lv_chart.c:625:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(ser);
^
src/widgets/chart/lv_chart.c:637:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(ser);
^
src/widgets/chart/lv_chart.c:645:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(ser);
^
src/widgets/chart/lv_chart.c:1774:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(new_points);
^
src/widgets/chart/lv_chart.c:1799:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC((*a));
^
src/widgets/checkbox/lv_checkbox.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/checkbox/lv_checkbox.c:84:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(cb->txt);
^
src/widgets/colorwheel/lv_colorwheel.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/dropdown/lv_dropdown.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/dropdown/lv_dropdown.c:1080:43: style:inconclusive: Function 'list_press_handler' argument 1 names different: declaration 'page' definition 'list_obj'. [funcArgNamesDifferent]
static void list_press_handler(lv_obj_t * list_obj)
                                          ^
src/widgets/dropdown/lv_dropdown.c:54:43: note: Function 'list_press_handler' argument 1 names different: declaration 'page' definition 'list_obj'.
static void list_press_handler(lv_obj_t * page);
                                          ^
src/widgets/dropdown/lv_dropdown.c:1080:43: note: Function 'list_press_handler' argument 1 names different: declaration 'page' definition 'list_obj'.
static void list_press_handler(lv_obj_t * list_obj)
                                          ^
src/widgets/dropdown/lv_dropdown.c:1119:45: style:inconclusive: Function 'position_to_selected' argument 1 names different: declaration 'obj' definition 'dropdown_obj'. [funcArgNamesDifferent]
static void position_to_selected(lv_obj_t * dropdown_obj)
                                            ^
src/widgets/dropdown/lv_dropdown.c:56:45: note: Function 'position_to_selected' argument 1 names different: declaration 'obj' definition 'dropdown_obj'.
static void position_to_selected(lv_obj_t * obj);
                                            ^
src/widgets/dropdown/lv_dropdown.c:1119:45: note: Function 'position_to_selected' argument 1 names different: declaration 'obj' definition 'dropdown_obj'.
static void position_to_selected(lv_obj_t * dropdown_obj)
                                            ^
src/widgets/dropdown/lv_dropdown.c:404:21: style: Variable 'char_i' is assigned a value that is never used. [unreadVariable]
    uint32_t char_i = 0;
                    ^
src/widgets/dropdown/lv_dropdown.c:117:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(options);
^
src/widgets/dropdown/lv_dropdown.c:145:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(dropdown->options);
^
src/widgets/dropdown/lv_dropdown.c:164:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(options);
^
src/widgets/dropdown/lv_dropdown.c:193:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(option);
^
src/widgets/dropdown/lv_dropdown.c:203:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(dropdown->options);
^
src/widgets/dropdown/lv_dropdown.c:220:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(dropdown->options);
^
src/widgets/dropdown/lv_dropdown.c:243:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(ins_buf);
^
src/widgets/img/lv_img.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/img/lv_img.c:120:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            LV_ASSERT_MALLOC(new_str);
^
src/widgets/imgbtn/lv_imgbtn.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/imgbtn/lv_imgbtn.c:80:35: style:inconclusive: Function 'lv_imgbtn_set_src' argument 1 names different: declaration 'imgbtn' definition 'obj'. [funcArgNamesDifferent]
void lv_imgbtn_set_src(lv_obj_t * obj, lv_imgbtn_state_t state, const void * src_left, const void * src_mid,
                                  ^
src/widgets/imgbtn/lv_imgbtn.h:81:35: note: Function 'lv_imgbtn_set_src' argument 1 names different: declaration 'imgbtn' definition 'obj'.
void lv_imgbtn_set_src(lv_obj_t * imgbtn, lv_imgbtn_state_t state, const void * src_left, const void * src_mid,
                                  ^
src/widgets/imgbtn/lv_imgbtn.c:80:35: note: Function 'lv_imgbtn_set_src' argument 1 names different: declaration 'imgbtn' definition 'obj'.
void lv_imgbtn_set_src(lv_obj_t * obj, lv_imgbtn_state_t state, const void * src_left, const void * src_mid,
                                  ^
src/widgets/imgbtn/lv_imgbtn.c:94:37: style:inconclusive: Function 'lv_imgbtn_set_state' argument 1 names different: declaration 'imgbtn' definition 'obj'. [funcArgNamesDifferent]
void lv_imgbtn_set_state(lv_obj_t * obj, lv_imgbtn_state_t state)
                                    ^
src/widgets/imgbtn/lv_imgbtn.h:90:37: note: Function 'lv_imgbtn_set_state' argument 1 names different: declaration 'imgbtn' definition 'obj'.
void lv_imgbtn_set_state(lv_obj_t * imgbtn, lv_imgbtn_state_t state);
                                    ^
src/widgets/imgbtn/lv_imgbtn.c:94:37: note: Function 'lv_imgbtn_set_state' argument 1 names different: declaration 'imgbtn' definition 'obj'.
void lv_imgbtn_set_state(lv_obj_t * obj, lv_imgbtn_state_t state)
                                    ^
src/widgets/imgbtn/lv_imgbtn.c:123:48: style:inconclusive: Function 'lv_imgbtn_get_src_left' argument 1 names different: declaration 'imgbtn' definition 'obj'. [funcArgNamesDifferent]
const void * lv_imgbtn_get_src_left(lv_obj_t * obj, lv_imgbtn_state_t state)
                                               ^
src/widgets/imgbtn/lv_imgbtn.h:102:48: note: Function 'lv_imgbtn_get_src_left' argument 1 names different: declaration 'imgbtn' definition 'obj'.
const void * lv_imgbtn_get_src_left(lv_obj_t * imgbtn, lv_imgbtn_state_t state);
                                               ^
src/widgets/imgbtn/lv_imgbtn.c:123:48: note: Function 'lv_imgbtn_get_src_left' argument 1 names different: declaration 'imgbtn' definition 'obj'.
const void * lv_imgbtn_get_src_left(lv_obj_t * obj, lv_imgbtn_state_t state)
                                               ^
src/widgets/imgbtn/lv_imgbtn.c:138:50: style:inconclusive: Function 'lv_imgbtn_get_src_middle' argument 1 names different: declaration 'imgbtn' definition 'obj'. [funcArgNamesDifferent]
const void * lv_imgbtn_get_src_middle(lv_obj_t * obj, lv_imgbtn_state_t state)
                                                 ^
src/widgets/imgbtn/lv_imgbtn.h:110:50: note: Function 'lv_imgbtn_get_src_middle' argument 1 names different: declaration 'imgbtn' definition 'obj'.
const void * lv_imgbtn_get_src_middle(lv_obj_t * imgbtn, lv_imgbtn_state_t state);
                                                 ^
src/widgets/imgbtn/lv_imgbtn.c:138:50: note: Function 'lv_imgbtn_get_src_middle' argument 1 names different: declaration 'imgbtn' definition 'obj'.
const void * lv_imgbtn_get_src_middle(lv_obj_t * obj, lv_imgbtn_state_t state)
                                                 ^
src/widgets/imgbtn/lv_imgbtn.c:152:49: style:inconclusive: Function 'lv_imgbtn_get_src_right' argument 1 names different: declaration 'imgbtn' definition 'obj'. [funcArgNamesDifferent]
const void * lv_imgbtn_get_src_right(lv_obj_t * obj, lv_imgbtn_state_t state)
                                                ^
src/widgets/imgbtn/lv_imgbtn.h:118:49: note: Function 'lv_imgbtn_get_src_right' argument 1 names different: declaration 'imgbtn' definition 'obj'.
const void * lv_imgbtn_get_src_right(lv_obj_t * imgbtn, lv_imgbtn_state_t state);
                                                ^
src/widgets/imgbtn/lv_imgbtn.c:152:49: note: Function 'lv_imgbtn_get_src_right' argument 1 names different: declaration 'imgbtn' definition 'obj'.
const void * lv_imgbtn_get_src_right(lv_obj_t * obj, lv_imgbtn_state_t state)
                                                ^
src/widgets/imgbtn/lv_imgbtn.c:288:33: style:inconclusive: Function 'refr_img' argument 1 names different: declaration 'imgbtn' definition 'obj'. [funcArgNamesDifferent]
static void refr_img(lv_obj_t * obj)
                                ^
src/widgets/imgbtn/lv_imgbtn.c:29:33: note: Function 'refr_img' argument 1 names different: declaration 'imgbtn' definition 'obj'.
static void refr_img(lv_obj_t * imgbtn);
                                ^
src/widgets/imgbtn/lv_imgbtn.c:288:33: note: Function 'refr_img' argument 1 names different: declaration 'imgbtn' definition 'obj'.
static void refr_img(lv_obj_t * obj)
                                ^
src/widgets/imgbtn/lv_imgbtn.c:309:51: style:inconclusive: Function 'suggest_state' argument 1 names different: declaration 'imgbtn' definition 'obj'. [funcArgNamesDifferent]
static lv_imgbtn_state_t suggest_state(lv_obj_t * obj, lv_imgbtn_state_t state)
                                                  ^
src/widgets/imgbtn/lv_imgbtn.c:30:51: note: Function 'suggest_state' argument 1 names different: declaration 'imgbtn' definition 'obj'.
static lv_imgbtn_state_t suggest_state(lv_obj_t * imgbtn, lv_imgbtn_state_t state);
                                                  ^
src/widgets/imgbtn/lv_imgbtn.c:309:51: note: Function 'suggest_state' argument 1 names different: declaration 'imgbtn' definition 'obj'.
static lv_imgbtn_state_t suggest_state(lv_obj_t * obj, lv_imgbtn_state_t state)
                                                  ^
src/widgets/keyboard/lv_keyboard.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/keyboard/lv_keyboard.c:199:42: style:inconclusive: Function 'lv_keyboard_set_textarea' argument 1 names different: declaration 'kb' definition 'obj'. [funcArgNamesDifferent]
void lv_keyboard_set_textarea(lv_obj_t * obj, lv_obj_t * ta)
                                         ^
src/widgets/keyboard/lv_keyboard.h:84:42: note: Function 'lv_keyboard_set_textarea' argument 1 names different: declaration 'kb' definition 'obj'.
void lv_keyboard_set_textarea(lv_obj_t * kb, lv_obj_t * ta);
                                         ^
src/widgets/keyboard/lv_keyboard.c:199:42: note: Function 'lv_keyboard_set_textarea' argument 1 names different: declaration 'kb' definition 'obj'.
void lv_keyboard_set_textarea(lv_obj_t * obj, lv_obj_t * ta)
                                         ^
src/widgets/keyboard/lv_keyboard.c:226:38: style:inconclusive: Function 'lv_keyboard_set_mode' argument 1 names different: declaration 'kb' definition 'obj'. [funcArgNamesDifferent]
void lv_keyboard_set_mode(lv_obj_t * obj, lv_keyboard_mode_t mode)
                                     ^
src/widgets/keyboard/lv_keyboard.h:91:38: note: Function 'lv_keyboard_set_mode' argument 1 names different: declaration 'kb' definition 'obj'.
void lv_keyboard_set_mode(lv_obj_t * kb, lv_keyboard_mode_t mode);
                                     ^
src/widgets/keyboard/lv_keyboard.c:226:38: note: Function 'lv_keyboard_set_mode' argument 1 names different: declaration 'kb' definition 'obj'.
void lv_keyboard_set_mode(lv_obj_t * obj, lv_keyboard_mode_t mode)
                                     ^
src/widgets/keyboard/lv_keyboard.c:241:42: style:inconclusive: Function 'lv_keyboard_set_popovers' argument 1 names different: declaration 'kb' definition 'obj'. [funcArgNamesDifferent]
void lv_keyboard_set_popovers(lv_obj_t * obj, bool en)
                                         ^
src/widgets/keyboard/lv_keyboard.h:98:42: note: Function 'lv_keyboard_set_popovers' argument 1 names different: declaration 'kb' definition 'obj'.
void lv_keyboard_set_popovers(lv_obj_t * kb, bool en);
                                         ^
src/widgets/keyboard/lv_keyboard.c:241:42: note: Function 'lv_keyboard_set_popovers' argument 1 names different: declaration 'kb' definition 'obj'.
void lv_keyboard_set_popovers(lv_obj_t * obj, bool en)
                                         ^
src/widgets/keyboard/lv_keyboard.c:260:37: style:inconclusive: Function 'lv_keyboard_set_map' argument 1 names different: declaration 'kb' definition 'obj'. [funcArgNamesDifferent]
void lv_keyboard_set_map(lv_obj_t * obj, lv_keyboard_mode_t mode, const char * map[],
                                    ^
src/widgets/keyboard/lv_keyboard.h:107:37: note: Function 'lv_keyboard_set_map' argument 1 names different: declaration 'kb' definition 'obj'.
void lv_keyboard_set_map(lv_obj_t * kb, lv_keyboard_mode_t mode, const char * map[],
                                    ^
src/widgets/keyboard/lv_keyboard.c:260:37: note: Function 'lv_keyboard_set_map' argument 1 names different: declaration 'kb' definition 'obj'.
void lv_keyboard_set_map(lv_obj_t * obj, lv_keyboard_mode_t mode, const char * map[],
                                    ^
src/widgets/keyboard/lv_keyboard.c:277:54: style:inconclusive: Function 'lv_keyboard_get_textarea' argument 1 names different: declaration 'kb' definition 'obj'. [funcArgNamesDifferent]
lv_obj_t * lv_keyboard_get_textarea(const lv_obj_t * obj)
                                                     ^
src/widgets/keyboard/lv_keyboard.h:119:54: note: Function 'lv_keyboard_get_textarea' argument 1 names different: declaration 'kb' definition 'obj'.
lv_obj_t * lv_keyboard_get_textarea(const lv_obj_t * kb);
                                                     ^
src/widgets/keyboard/lv_keyboard.c:277:54: note: Function 'lv_keyboard_get_textarea' argument 1 names different: declaration 'kb' definition 'obj'.
lv_obj_t * lv_keyboard_get_textarea(const lv_obj_t * obj)
                                                     ^
src/widgets/keyboard/lv_keyboard.c:289:58: style:inconclusive: Function 'lv_keyboard_get_mode' argument 1 names different: declaration 'kb' definition 'obj'. [funcArgNamesDifferent]
lv_keyboard_mode_t lv_keyboard_get_mode(const lv_obj_t * obj)
                                                         ^
src/widgets/keyboard/lv_keyboard.h:126:58: note: Function 'lv_keyboard_get_mode' argument 1 names different: declaration 'kb' definition 'obj'.
lv_keyboard_mode_t lv_keyboard_get_mode(const lv_obj_t * kb);
                                                         ^
src/widgets/keyboard/lv_keyboard.c:289:58: note: Function 'lv_keyboard_get_mode' argument 1 names different: declaration 'kb' definition 'obj'.
lv_keyboard_mode_t lv_keyboard_get_mode(const lv_obj_t * obj)
                                                         ^
src/widgets/label/lv_label.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 431 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/label/lv_label.c:733:98: style: Redundant initialization for 'w'. The initialized value is overwritten before it is read. [redundantInitialization]
            if(lv_obj_get_style_width(obj, LV_PART_MAIN) == LV_SIZE_CONTENT && !obj->w_layout) w = LV_COORD_MAX;
                                                                                                 ^
src/widgets/label/lv_label.c:732:26: note: w is initialized
            lv_coord_t w = lv_obj_get_content_width(obj);
                         ^
src/widgets/label/lv_label.c:733:98: note: w is overwritten
            if(lv_obj_get_style_width(obj, LV_PART_MAIN) == LV_SIZE_CONTENT && !obj->w_layout) w = LV_COORD_MAX;
                                                                                                 ^
src/widgets/label/lv_label.c:1165:45: style:inconclusive: Function 'lv_label_revert_dots' argument 1 names different: declaration 'label' definition 'obj'. [funcArgNamesDifferent]
static void lv_label_revert_dots(lv_obj_t * obj)
                                            ^
src/widgets/label/lv_label.c:45:45: note: Function 'lv_label_revert_dots' argument 1 names different: declaration 'label' definition 'obj'.
static void lv_label_revert_dots(lv_obj_t * label);
                                            ^
src/widgets/label/lv_label.c:1165:45: note: Function 'lv_label_revert_dots' argument 1 names different: declaration 'label' definition 'obj'.
static void lv_label_revert_dots(lv_obj_t * obj)
                                            ^
src/widgets/label/lv_label.c:1196:45: style:inconclusive: Function 'lv_label_set_dot_tmp' argument 1 names different: declaration 'label' definition 'obj'. [funcArgNamesDifferent]
static bool lv_label_set_dot_tmp(lv_obj_t * obj, char * data, uint32_t len)
                                            ^
src/widgets/label/lv_label.c:47:45: note: Function 'lv_label_set_dot_tmp' argument 1 names different: declaration 'label' definition 'obj'.
static bool lv_label_set_dot_tmp(lv_obj_t * label, char * data, uint32_t len);
                                            ^
src/widgets/label/lv_label.c:1196:45: note: Function 'lv_label_set_dot_tmp' argument 1 names different: declaration 'label' definition 'obj'.
static bool lv_label_set_dot_tmp(lv_obj_t * obj, char * data, uint32_t len)
                                            ^
src/widgets/label/lv_label.c:1226:47: style:inconclusive: Function 'lv_label_get_dot_tmp' argument 1 names different: declaration 'label' definition 'obj'. [funcArgNamesDifferent]
static char * lv_label_get_dot_tmp(lv_obj_t * obj)
                                              ^
src/widgets/label/lv_label.c:48:47: note: Function 'lv_label_get_dot_tmp' argument 1 names different: declaration 'label' definition 'obj'.
static char * lv_label_get_dot_tmp(lv_obj_t * label);
                                              ^
src/widgets/label/lv_label.c:1226:47: note: Function 'lv_label_get_dot_tmp' argument 1 names different: declaration 'label' definition 'obj'.
static char * lv_label_get_dot_tmp(lv_obj_t * obj)
                                              ^
src/widgets/label/lv_label.c:1242:46: style:inconclusive: Function 'lv_label_dot_tmp_free' argument 1 names different: declaration 'label' definition 'obj'. [funcArgNamesDifferent]
static void lv_label_dot_tmp_free(lv_obj_t * obj)
                                             ^
src/widgets/label/lv_label.c:49:46: note: Function 'lv_label_dot_tmp_free' argument 1 names different: declaration 'label' definition 'obj'.
static void lv_label_dot_tmp_free(lv_obj_t * label);
                                             ^
src/widgets/label/lv_label.c:1242:46: note: Function 'lv_label_dot_tmp_free' argument 1 names different: declaration 'label' definition 'obj'.
static void lv_label_dot_tmp_free(lv_obj_t * obj)
                                             ^
src/widgets/label/lv_label.c:107:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(label->text);
^
src/widgets/label/lv_label.c:123:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(label->text);
^
src/widgets/label/lv_label.c:138:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(fmt);
^
src/widgets/label/lv_label.c:277:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(pos);
^
src/widgets/label/lv_label.c:381:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(pos_in);
^
src/widgets/label/lv_label.c:495:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(pos);
^
src/widgets/label/lv_label.c:604:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(txt);
^
src/widgets/label/lv_label.c:618:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(label->text);
^
src/widgets/led/lv_led.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/led/lv_led.c:164:14: style: The scope of the variable 'res' can be reduced. [variableScope]
    lv_res_t res;
             ^
src/widgets/led/lv_led.c:73:34: style:inconclusive: Function 'lv_led_set_color' argument 1 names different: declaration 'led' definition 'obj'. [funcArgNamesDifferent]
void lv_led_set_color(lv_obj_t * obj, lv_color_t color)
                                 ^
src/widgets/led/lv_led.h:70:34: note: Function 'lv_led_set_color' argument 1 names different: declaration 'led' definition 'obj'.
void lv_led_set_color(lv_obj_t * led, lv_color_t color);
                                 ^
src/widgets/led/lv_led.c:73:34: note: Function 'lv_led_set_color' argument 1 names different: declaration 'led' definition 'obj'.
void lv_led_set_color(lv_obj_t * obj, lv_color_t color)
                                 ^
src/widgets/led/lv_led.c:87:39: style:inconclusive: Function 'lv_led_set_brightness' argument 1 names different: declaration 'led' definition 'obj'. [funcArgNamesDifferent]
void lv_led_set_brightness(lv_obj_t * obj, uint8_t bright)
                                      ^
src/widgets/led/lv_led.h:77:39: note: Function 'lv_led_set_brightness' argument 1 names different: declaration 'led' definition 'obj'.
void lv_led_set_brightness(lv_obj_t * led, uint8_t bright);
                                      ^
src/widgets/led/lv_led.c:87:39: note: Function 'lv_led_set_brightness' argument 1 names different: declaration 'led' definition 'obj'.
void lv_led_set_brightness(lv_obj_t * obj, uint8_t bright)
                                      ^
src/widgets/led/lv_led.c:122:31: style:inconclusive: Function 'lv_led_toggle' argument 1 names different: declaration 'led' definition 'obj'. [funcArgNamesDifferent]
void lv_led_toggle(lv_obj_t * obj)
                              ^
src/widgets/led/lv_led.h:95:31: note: Function 'lv_led_toggle' argument 1 names different: declaration 'led' definition 'obj'.
void lv_led_toggle(lv_obj_t * led);
                              ^
src/widgets/led/lv_led.c:122:31: note: Function 'lv_led_toggle' argument 1 names different: declaration 'led' definition 'obj'.
void lv_led_toggle(lv_obj_t * obj)
                              ^
src/widgets/line/lv_line.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/list/lv_list.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 430 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/menu/lv_menu.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/menu/lv_menu.c:383:40: style:inconclusive: Function 'lv_menu_set_page_title' argument 1 names different: declaration 'page' definition 'page_obj'. [funcArgNamesDifferent]
void lv_menu_set_page_title(lv_obj_t * page_obj, char const * const title)
                                       ^
src/widgets/menu/lv_menu.h:143:40: note: Function 'lv_menu_set_page_title' argument 1 names different: declaration 'page' definition 'page_obj'.
void lv_menu_set_page_title(lv_obj_t * page, char const * const title);
                                       ^
src/widgets/menu/lv_menu.c:383:40: note: Function 'lv_menu_set_page_title' argument 1 names different: declaration 'page' definition 'page_obj'.
void lv_menu_set_page_title(lv_obj_t * page_obj, char const * const title)
                                       ^
src/widgets/menu/lv_menu.c:411:47: style:inconclusive: Function 'lv_menu_set_page_title_static' argument 1 names different: declaration 'page' definition 'page_obj'. [funcArgNamesDifferent]
void lv_menu_set_page_title_static(lv_obj_t * page_obj, char const * const title)
                                              ^
src/widgets/menu/lv_menu.h:151:47: note: Function 'lv_menu_set_page_title_static' argument 1 names different: declaration 'page' definition 'page_obj'.
void lv_menu_set_page_title_static(lv_obj_t * page, char const * const title);
                                              ^
src/widgets/menu/lv_menu.c:411:47: note: Function 'lv_menu_set_page_title_static' argument 1 names different: declaration 'page' definition 'page_obj'.
void lv_menu_set_page_title_static(lv_obj_t * page_obj, char const * const title)
                                              ^
src/widgets/menu/lv_menu.c:202:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(new_node);
^
src/widgets/menu/lv_menu.c:399:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(page->title);
^
src/widgets/meter/lv_meter.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 442 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/meter/lv_meter.c:503:37: style: Variable 'part_draw_dsc.label_dsc' is reassigned a value before the old one has been used. [redundantAssignment]
            part_draw_dsc.label_dsc = &label_dsc_tmp;
                                    ^
src/widgets/meter/lv_meter.c:489:33: note: part_draw_dsc.label_dsc is assigned
        part_draw_dsc.label_dsc = &label_dsc;
                                ^
src/widgets/meter/lv_meter.c:503:37: note: part_draw_dsc.label_dsc is overwritten
            part_draw_dsc.label_dsc = &label_dsc_tmp;
                                    ^
src/widgets/meter/lv_meter.c:111:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(indic);
^
src/widgets/meter/lv_meter.c:134:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(indic);
^
src/widgets/meter/lv_meter.c:157:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(indic);
^
src/widgets/meter/lv_meter.c:180:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(indic);
^
src/widgets/msgbox/lv_msgbox.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/msgbox/lv_msgbox.c:197:39: style:inconclusive: Function 'lv_msgbox_close_async' argument 1 names different: declaration 'mbox' definition 'dialog'. [funcArgNamesDifferent]
void lv_msgbox_close_async(lv_obj_t * dialog)
                                      ^
src/widgets/msgbox/lv_msgbox.h:87:39: note: Function 'lv_msgbox_close_async' argument 1 names different: declaration 'mbox' definition 'dialog'.
void lv_msgbox_close_async(lv_obj_t * mbox);
                                      ^
src/widgets/msgbox/lv_msgbox.c:197:39: note: Function 'lv_msgbox_close_async' argument 1 names different: declaration 'mbox' definition 'dialog'.
void lv_msgbox_close_async(lv_obj_t * dialog)
                                      ^
src/widgets/msgbox/lv_msgbox.c:74:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(parent);
^
src/widgets/msgbox/lv_msgbox.c:81:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(obj);
^
src/widgets/objx_templ/lv_objx_templ.c:111:24: style: Variable 'templ' is assigned a value that is never used. [unreadVariable]
    lv_templ_t * templ = (lv_templ_t *)obj;
                       ^
src/widgets/objx_templ/lv_objx_templ.c:119:24: style: Variable 'templ' is assigned a value that is never used. [unreadVariable]
    lv_templ_t * templ = (lv_templ_t *)obj;
                       ^
src/widgets/roller/lv_roller.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/roller/lv_roller.c:578:25: style: Variable 'draw_ctx->clip_area' is reassigned a value before the old one has been used. [redundantAssignment]
    draw_ctx->clip_area = clip_area_ori;
                        ^
src/widgets/roller/lv_roller.c:575:29: note: draw_ctx->clip_area is assigned
        draw_ctx->clip_area = clip_area_ori2;
                            ^
src/widgets/roller/lv_roller.c:578:25: note: draw_ctx->clip_area is overwritten
    draw_ctx->clip_area = clip_area_ori;
                        ^
src/widgets/roller/lv_roller.c:429:14: style: The scope of the variable 'res' can be reduced. [variableScope]
    lv_res_t res;
             ^
src/widgets/roller/lv_roller.c:605:60: style:inconclusive: Function 'refr_position' argument 2 names different: declaration 'animen' definition 'anim_en'. [funcArgNamesDifferent]
static void refr_position(lv_obj_t * obj, lv_anim_enable_t anim_en)
                                                           ^
src/widgets/roller/lv_roller.c:38:60: note: Function 'refr_position' argument 2 names different: declaration 'animen' definition 'anim_en'.
static void refr_position(lv_obj_t * obj, lv_anim_enable_t animen);
                                                           ^
src/widgets/roller/lv_roller.c:605:60: note: Function 'refr_position' argument 2 names different: declaration 'animen' definition 'anim_en'.
static void refr_position(lv_obj_t * obj, lv_anim_enable_t anim_en)
                                                           ^
src/widgets/roller/lv_roller.c:742:38: style:inconclusive: Function 'inf_normalize' argument 1 names different: declaration 'obj_scrl' definition 'obj'. [funcArgNamesDifferent]
static void inf_normalize(lv_obj_t * obj)
                                     ^
src/widgets/roller/lv_roller.c:40:38: note: Function 'inf_normalize' argument 1 names different: declaration 'obj_scrl' definition 'obj'.
static void inf_normalize(lv_obj_t * obj_scrl);
                                     ^
src/widgets/roller/lv_roller.c:742:38: note: Function 'inf_normalize' argument 1 names different: declaration 'obj_scrl' definition 'obj'.
static void inf_normalize(lv_obj_t * obj)
                                     ^
src/widgets/roller/lv_roller.c:100:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(options);
^
src/widgets/slider/lv_slider.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/span/lv_span.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/span/lv_span.c:792:5: error: Address of local auto-variable assigned to a function parameter. [autoVariables]
    draw_ctx->clip_area = &clip_area;
    ^
src/widgets/span/lv_span.c:752:49: style:inconclusive: Function 'convert_indent_pct' argument 1 names different: declaration 'spans' definition 'obj'. [funcArgNamesDifferent]
static lv_coord_t convert_indent_pct(lv_obj_t * obj, lv_coord_t width)
                                                ^
src/widgets/span/lv_span.c:64:49: note: Function 'convert_indent_pct' argument 1 names different: declaration 'spans' definition 'obj'.
static lv_coord_t convert_indent_pct(lv_obj_t * spans, lv_coord_t width);
                                                ^
src/widgets/span/lv_span.c:752:49: note: Function 'convert_indent_pct' argument 1 names different: declaration 'spans' definition 'obj'.
static lv_coord_t convert_indent_pct(lv_obj_t * obj, lv_coord_t width)
                                                ^
src/widgets/span/lv_span.c:105:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(span);
^
src/widgets/span/lv_span.c:157:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(span->txt);
^
src/widgets/span/lv_span.c:161:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(span->txt);
^
src/widgets/spinbox/lv_spinbox.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/spinbox/lv_spinbox.c:171:12: style: Checking if unsigned expression 'pos' is less than zero. [unsignedLessThanZero]
    if(pos <= 0) spinbox->step = 1;
           ^
src/widgets/spinner/lv_spinner.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/switch/lv_switch.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 427 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/switch/lv_switch.c:217:43: style:inconclusive: Function 'lv_switch_anim_exec_cb' argument 1 names different: declaration 'sw' definition 'var'. [funcArgNamesDifferent]
static void lv_switch_anim_exec_cb(void * var, int32_t value)
                                          ^
src/widgets/switch/lv_switch.c:48:43: note: Function 'lv_switch_anim_exec_cb' argument 1 names different: declaration 'sw' definition 'var'.
static void lv_switch_anim_exec_cb(void * sw, int32_t value);
                                          ^
src/widgets/switch/lv_switch.c:217:43: note: Function 'lv_switch_anim_exec_cb' argument 1 names different: declaration 'sw' definition 'var'.
static void lv_switch_anim_exec_cb(void * var, int32_t value)
                                          ^
src/widgets/table/lv_table.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/table/lv_table.c:771:5: error: Using pointer to local variable 'label_clip_area' that is out of scope. [invalidLifetime]
    draw_ctx->clip_area = clip_area_ori;
    ^
src/widgets/table/lv_table.c:758:43: note: Address of variable taken here.
                    draw_ctx->clip_area = &label_clip_area;
                                          ^
src/widgets/table/lv_table.c:754:27: note: Variable created here.
                lv_area_t label_clip_area;
                          ^
src/widgets/table/lv_table.c:771:5: note: Using pointer to local variable 'label_clip_area' that is out of scope.
    draw_ctx->clip_area = clip_area_ori;
    ^
src/widgets/table/lv_table.c:244:14: style: The scope of the variable 'old_col_start' can be reduced. [variableScope]
    uint32_t old_col_start;
             ^
src/widgets/table/lv_table.c:245:14: style: The scope of the variable 'new_col_start' can be reduced. [variableScope]
    uint32_t new_col_start;
             ^
src/widgets/table/lv_table.c:89:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(txt);
^
src/widgets/table/lv_table.c:106:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(table->cell_data[cell]);
^
src/widgets/table/lv_table.c:118:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(fmt);
^
src/widgets/table/lv_table.c:168:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(table->cell_data[cell]);
^
src/widgets/table/lv_table.c:198:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(table->row_h);
^
src/widgets/table/lv_table.c:212:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(table->cell_data);
^
src/widgets/table/lv_table.c:237:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(new_cell_data);
^
src/widgets/table/lv_table.c:269:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_MALLOC(table->col_w);
^
src/widgets/table/lv_table.c:308:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(table->cell_data[cell]);
^
src/widgets/table/lv_table.c:332:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(table->cell_data[cell]);
^
src/widgets/tabview/lv_tabview.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/tabview/lv_tabview.c:68:42: style:inconclusive: Function 'lv_tabview_add_tab' argument 1 names different: declaration 'tv' definition 'obj'. [funcArgNamesDifferent]
lv_obj_t * lv_tabview_add_tab(lv_obj_t * obj, const char * name)
                                         ^
src/widgets/tabview/lv_tabview.h:43:42: note: Function 'lv_tabview_add_tab' argument 1 names different: declaration 'tv' definition 'obj'.
lv_obj_t * lv_tabview_add_tab(lv_obj_t * tv, const char * name);
                                         ^
src/widgets/tabview/lv_tabview.c:68:42: note: Function 'lv_tabview_add_tab' argument 1 names different: declaration 'tv' definition 'obj'.
lv_obj_t * lv_tabview_add_tab(lv_obj_t * obj, const char * name)
                                         ^
src/widgets/tabview/lv_tabview.c:127:53: style:inconclusive: Function 'lv_tabview_rename_tab' argument 2 names different: declaration 'tab_id' definition 'id'. [funcArgNamesDifferent]
void lv_tabview_rename_tab(lv_obj_t * obj, uint32_t id, const char * new_name)
                                                    ^
src/widgets/tabview/lv_tabview.h:45:53: note: Function 'lv_tabview_rename_tab' argument 2 names different: declaration 'tab_id' definition 'id'.
void lv_tabview_rename_tab(lv_obj_t * obj, uint32_t tab_id, const char * new_name);
                                                    ^
src/widgets/tabview/lv_tabview.c:127:53: note: Function 'lv_tabview_rename_tab' argument 2 names different: declaration 'tab_id' definition 'id'.
void lv_tabview_rename_tab(lv_obj_t * obj, uint32_t id, const char * new_name)
                                                    ^
src/widgets/tabview/lv_tabview.c:179:44: style:inconclusive: Function 'lv_tabview_get_tab_act' argument 1 names different: declaration 'tv' definition 'obj'. [funcArgNamesDifferent]
uint16_t lv_tabview_get_tab_act(lv_obj_t * obj)
                                           ^
src/widgets/tabview/lv_tabview.h:53:44: note: Function 'lv_tabview_get_tab_act' argument 1 names different: declaration 'tv' definition 'obj'.
uint16_t lv_tabview_get_tab_act(lv_obj_t * tv);
                                           ^
src/widgets/tabview/lv_tabview.c:179:44: note: Function 'lv_tabview_get_tab_act' argument 1 names different: declaration 'tv' definition 'obj'.
uint16_t lv_tabview_get_tab_act(lv_obj_t * obj)
                                           ^
src/widgets/textarea/lv_textarea.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 429 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/textarea/lv_textarea.c:146:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(ta->pwd_tmp);
^
src/widgets/textarea/lv_textarea.c:164:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(txt);
^
src/widgets/textarea/lv_textarea.c:196:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(ta->pwd_tmp);
^
src/widgets/textarea/lv_textarea.c:244:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(ta->pwd_tmp);
^
src/widgets/textarea/lv_textarea.c:271:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(txt);
^
src/widgets/textarea/lv_textarea.c:305:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(ta->pwd_tmp);
^
src/widgets/textarea/lv_textarea.c:319:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(txt);
^
src/widgets/textarea/lv_textarea.c:332:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(ta->placeholder_txt);
^
src/widgets/textarea/lv_textarea.c:419:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(ta->pwd_tmp);
^
src/widgets/textarea/lv_textarea.c:442:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LV_ASSERT_NULL(bullet);
^
src/widgets/textarea/lv_textarea.c:456:0: information: Skipping configuration 'CONFIG_LV_ASSERT_HANDLER' since the value of 'CONFIG_LV_ASSERT_HANDLER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        LV_ASSERT_MALLOC(ta->pwd_bullet);
^
src/widgets/tileview/lv_tileview.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 428 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/widgets/tileview/lv_tileview.c:79:33: style:inconclusive: Function 'lv_obj_set_tile' argument 1 names different: declaration 'tv' definition 'obj'. [funcArgNamesDifferent]
void lv_obj_set_tile(lv_obj_t * obj, lv_obj_t * tile_obj, lv_anim_enable_t anim_en)
                                ^
src/widgets/tileview/lv_tileview.h:53:33: note: Function 'lv_obj_set_tile' argument 1 names different: declaration 'tv' definition 'obj'.
void lv_obj_set_tile(lv_obj_t * tv, lv_obj_t * tile_obj, lv_anim_enable_t anim_en);
                                ^
src/widgets/tileview/lv_tileview.c:79:33: note: Function 'lv_obj_set_tile' argument 1 names different: declaration 'tv' definition 'obj'.
void lv_obj_set_tile(lv_obj_t * obj, lv_obj_t * tile_obj, lv_anim_enable_t anim_en)
                                ^
src/widgets/win/lv_win.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
tests/src/lv_test_init.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 474 configurations. Use --force to check all configurations. [toomanyconfigs]

^
tests/src/lv_test_malloc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 329 configurations. Use --force to check all configurations. [toomanyconfigs]

^
tests/src/test_assets/font_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
tests/src/test_assets/font_2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
tests/src/test_assets/font_3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 443 configurations. Use --force to check all configurations. [toomanyconfigs]

^
tests/src/test_assets/test_animimg001.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
tests/src/test_assets/test_animimg001.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' since the value of 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG001 uint8_t test_animimg001_map[] = {
^
tests/src/test_assets/test_animimg001.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG001 uint8_t test_animimg001_map[] = {
^
tests/src/test_assets/test_animimg002.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
tests/src/test_assets/test_animimg002.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' since the value of 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG002 uint8_t test_animimg002_map[] = {
^
tests/src/test_assets/test_animimg002.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG002 uint8_t test_animimg002_map[] = {
^
tests/src/test_assets/test_animimg003.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 444 configurations. Use --force to check all configurations. [toomanyconfigs]

^
tests/src/test_assets/test_animimg003.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' since the value of 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG003 uint8_t test_animimg003_map[] = {
^
tests/src/test_assets/test_animimg003.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_ANIMIMG003 uint8_t test_animimg003_map[] = {
^
tests/src/test_assets/test_img_caret_down.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 445 configurations. Use --force to check all configurations. [toomanyconfigs]

^
tests/src/test_assets/test_img_caret_down.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' since the value of 'CONFIG_LV_ATTRIBUTE_LARGE_CONST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMG_CARET_DOWN uint8_t test_img_caret_down_map[]
^
tests/src/test_assets/test_img_caret_down.c:13:0: information: Skipping configuration 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' since the value of 'CONFIG_LV_ATTRIBUTE_MEM_ALIGN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_IMG_CARET_DOWN uint8_t test_img_caret_down_map[]
^
tests/src/test_cases/test_animimg.c:7:1: error: There is an unknown macro here somewhere. Configuration is required. If LV_IMG_DECLARE is a macro then please configure it. [unknownMacro]
LV_IMG_DECLARE(test_animimg001)
^
tests/src/test_cases/test_bar.c:74:30: style: Variable 'sides_padding' is assigned a value that is never used. [unreadVariable]
    lv_coord_t sides_padding = lv_obj_get_style_pad_left(bar, LV_PART_MAIN);
                             ^
tests/src/test_cases/test_bar.c:75:19: style: Variable 'sides_padding' is assigned a value that is never used. [unreadVariable]
    sides_padding += lv_obj_get_style_pad_right(bar, LV_PART_MAIN);
                  ^
tests/src/test_cases/test_margin_flex.c:54:16: style: The scope of the variable 'o' can be reduced. [variableScope]
    lv_obj_t * o;
               ^
tests/unity/unity.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 483 configurations. Use --force to check all configurations. [toomanyconfigs]

^
tests/unity/unity.c:1732:16: warning: Either the condition 'pch!=NULL' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
            pch++;
               ^
tests/unity/unity.c:1643:25: note: Assuming that condition 'pch!=NULL' is not redundant
                if (pch != NULL)
                        ^
tests/unity/unity.c:1732:16: note: Null pointer addition
            pch++;
               ^
tests/unity/unity.c:278:9: style: The scope of the variable 'nibble' can be reduced. [variableScope]
    int nibble;
        ^
tests/unity/unity.c:1351:18: style: The scope of the variable 'i' can be reduced. [variableScope]
    UNITY_UINT32 i;
                 ^
tests/unity/unity.c:1391:18: style: The scope of the variable 'i' can be reduced. [variableScope]
    UNITY_UINT32 i;
                 ^
tests/unity/unity.c:1515:18: style: The scope of the variable 'bytes' can be reduced. [variableScope]
    UNITY_UINT32 bytes;
                 ^
tests/unity/unity.c:1759:28: style:inconclusive: Function 'UnityFail' argument 1 names different: declaration 'message' definition 'msg'. [funcArgNamesDifferent]
void UnityFail(const char* msg, const UNITY_LINE_TYPE line)
                           ^
tests/unity/unity_internals.h:622:28: note: Function 'UnityFail' argument 1 names different: declaration 'message' definition 'msg'.
void UnityFail(const char* message, const UNITY_LINE_TYPE line) UNITY_FUNCTION_ATTR(noreturn);
                           ^
tests/unity/unity.c:1759:28: note: Function 'UnityFail' argument 1 names different: declaration 'message' definition 'msg'.
void UnityFail(const char* msg, const UNITY_LINE_TYPE line)
                           ^
tests/unity/unity.c:1796:30: style:inconclusive: Function 'UnityIgnore' argument 1 names different: declaration 'message' definition 'msg'. [funcArgNamesDifferent]
void UnityIgnore(const char* msg, const UNITY_LINE_TYPE line)
                             ^
tests/unity/unity_internals.h:623:30: note: Function 'UnityIgnore' argument 1 names different: declaration 'message' definition 'msg'.
void UnityIgnore(const char* message, const UNITY_LINE_TYPE line) UNITY_FUNCTION_ATTR(noreturn);
                             ^
tests/unity/unity.c:1796:30: note: Function 'UnityIgnore' argument 1 names different: declaration 'message' definition 'msg'.
void UnityIgnore(const char* msg, const UNITY_LINE_TYPE line)
                             ^
tests/unity/unity.c:1812:31: style:inconclusive: Function 'UnityMessage' argument 1 names different: declaration 'message' definition 'msg'. [funcArgNamesDifferent]
void UnityMessage(const char* msg, const UNITY_LINE_TYPE line)
                              ^
tests/unity/unity_internals.h:629:31: note: Function 'UnityMessage' argument 1 names different: declaration 'message' definition 'msg'.
void UnityMessage(const char* message, const UNITY_LINE_TYPE line);
                              ^
tests/unity/unity.c:1812:31: note: Function 'UnityMessage' argument 1 names different: declaration 'message' definition 'msg'.
void UnityMessage(const char* msg, const UNITY_LINE_TYPE line)
                              ^
tests/unity/unity.c:1432:20: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
    UNITY_UINT32 i = 0;
                   ^
tests/unity/unity_support.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 473 configurations. Use --force to check all configurations. [toomanyconfigs]

^
tests/unity/unity_support.c:188:9: error: Resource leak: fp [resourceLeak]
        return ERR_PNG;
        ^
tests/unity/unity_support.c:196:9: error: Resource leak: fp [resourceLeak]
        return ERR_PNG;
        ^
tests/unity/unity_support.c:202:9: error: Resource leak: fp [resourceLeak]
        return ERR_PNG;
        ^
tests/unity/unity_support.c:206:9: error: Resource leak: fp [resourceLeak]
        return ERR_PNG;
        ^
tests/unity/unity_support.c:256:9: error: Resource leak: fp [resourceLeak]
        return -1;
        ^
tests/unity/unity_support.c:262:9: error: Resource leak: fp [resourceLeak]
        return -1;
        ^
tests/unity/unity_support.c:267:9: error: Resource leak: fp [resourceLeak]
        return -1;
        ^
tests/unity/unity.c:687:0: style: The function 'UnityAssertBits' is never used. [unusedFunction]

^
tests/unity/unity.c:906:0: style: The function 'UnityAssertEqualFloatArray' is never used. [unusedFunction]

^
tests/unity/unity.c:776:0: style: The function 'UnityAssertEqualIntArray' is never used. [unusedFunction]

^
tests/unity/unity.c:1504:0: style: The function 'UnityAssertEqualMemory' is never used. [unusedFunction]

^
tests/unity/unity.c:708:0: style: The function 'UnityAssertEqualNumber' is never used. [unusedFunction]

^
tests/unity/unity.c:1346:0: style: The function 'UnityAssertEqualString' is never used. [unusedFunction]

^
tests/unity/unity.c:1425:0: style: The function 'UnityAssertEqualStringArray' is never used. [unusedFunction]

^
tests/unity/unity.c:1385:0: style: The function 'UnityAssertEqualStringLen' is never used. [unusedFunction]

^
tests/unity/unity.c:973:0: style: The function 'UnityAssertFloatSpecial' is never used. [unusedFunction]

^
tests/unity/unity.c:954:0: style: The function 'UnityAssertFloatsWithin' is never used. [unusedFunction]

^
tests/unity/unity.c:729:0: style: The function 'UnityAssertGreaterOrLessOrEqualNumber' is never used. [unusedFunction]

^
tests/unity/unity.c:1226:0: style: The function 'UnityAssertNumbersArrayWithin' is never used. [unusedFunction]

^
tests/unity/unity.c:1179:0: style: The function 'UnityAssertNumbersWithin' is never used. [unusedFunction]

^
tests/unity/unity.c:1856:0: style: The function 'UnityBegin' is never used. [unusedFunction]

^
tests/unity/unity.c:1828:0: style: The function 'UnityDefaultTestRun' is never used. [unusedFunction]

^
tests/unity/unity.c:1872:0: style: The function 'UnityEnd' is never used. [unusedFunction]

^
tests/unity/unity.c:1759:0: style: The function 'UnityFail' is never used. [unusedFunction]

^
tests/unity/unity.c:1611:0: style: The function 'UnityFloatToPtr' is never used. [unusedFunction]

^
tests/unity/unity.c:1796:0: style: The function 'UnityIgnore' is never used. [unusedFunction]

^
tests/unity/unity.c:1812:0: style: The function 'UnityMessage' is never used. [unusedFunction]

^
tests/unity/unity.c:1585:0: style: The function 'UnityNumToPtr' is never used. [unusedFunction]

^
tests/unity/unity.c:1850:0: style: The function 'UnitySetTestFile' is never used. [unusedFunction]

^
src/misc/lv_area.c:322:0: style: The function '_lv_area_is_equal' is never used. [unusedFunction]

^
src/misc/lv_area.c:82:0: style: The function '_lv_area_set_pos' is never used. [unusedFunction]

^
src/core/lv_disp.c:838:0: style: The function '_lv_disp_get_refr_timer' is never used. [unusedFunction]

^
src/misc/lv_ll.c:217:0: style: The function '_lv_ll_chg_list' is never used. [unusedFunction]

^
src/misc/lv_ll.c:96:0: style: The function '_lv_ll_ins_prev' is never used. [unusedFunction]

^
src/misc/lv_ll.c:326:0: style: The function '_lv_ll_move_before' is never used. [unusedFunction]

^
tests/src/lv_test_init.c:73:0: style: The function 'custom_tick_get' is never used. [unusedFunction]

^
src/misc/lv_anim.c:181:0: style: The function 'lv_anim_count_running' is never used. [unusedFunction]

^
src/misc/lv_anim.c:158:0: style: The function 'lv_anim_del_all' is never used. [unusedFunction]

^
src/misc/lv_anim.c:176:0: style: The function 'lv_anim_get_timer' is never used. [unusedFunction]

^
src/misc/lv_anim.c:278:0: style: The function 'lv_anim_path_bounce' is never used. [unusedFunction]

^
src/misc/lv_anim_timeline.c:184:0: style: The function 'lv_anim_timeline_get_reverse' is never used. [unusedFunction]

^
src/widgets/animimg/lv_animimg.c:120:0: style: The function 'lv_animimg_get_duration' is never used. [unusedFunction]

^
src/widgets/animimg/lv_animimg.c:127:0: style: The function 'lv_animimg_get_repeat_count' is never used. [unusedFunction]

^
src/widgets/animimg/lv_animimg.c:106:0: style: The function 'lv_animimg_get_src' is never used. [unusedFunction]

^
src/widgets/animimg/lv_animimg.c:113:0: style: The function 'lv_animimg_get_src_count' is never used. [unusedFunction]

^
src/widgets/arc/lv_arc.c:347:0: style: The function 'lv_arc_align_obj_to_angle' is never used. [unusedFunction]

^
src/widgets/arc/lv_arc.c:300:0: style: The function 'lv_arc_get_bg_angle_end' is never used. [unusedFunction]

^
src/widgets/arc/lv_arc.c:294:0: style: The function 'lv_arc_get_bg_angle_start' is never used. [unusedFunction]

^
src/widgets/arc/lv_arc.c:318:0: style: The function 'lv_arc_get_max_value' is never used. [unusedFunction]

^
src/widgets/arc/lv_arc.c:312:0: style: The function 'lv_arc_get_min_value' is never used. [unusedFunction]

^
src/widgets/arc/lv_arc.c:324:0: style: The function 'lv_arc_get_mode' is never used. [unusedFunction]

^
src/widgets/arc/lv_arc.c:330:0: style: The function 'lv_arc_get_rotation' is never used. [unusedFunction]

^
src/widgets/arc/lv_arc.c:262:0: style: The function 'lv_arc_set_change_rate' is never used. [unusedFunction]

^
src/widgets/arc/lv_arc.c:270:0: style: The function 'lv_arc_set_knob_offset' is never used. [unusedFunction]

^
src/widgets/keyboard/lv_keyboard.c:301:0: style: The function 'lv_btnmatrix_get_popovers' is never used. [unusedFunction]

^
src/widgets/canvas/lv_canvas.c:240:0: style: The function 'lv_canvas_blur_hor' is never used. [unusedFunction]

^
src/widgets/canvas/lv_canvas.c:350:0: style: The function 'lv_canvas_blur_ver' is never used. [unusedFunction]

^
src/widgets/canvas/lv_canvas.c:145:0: style: The function 'lv_canvas_copy_buf' is never used. [unusedFunction]

^
src/widgets/canvas/lv_canvas.c:598:0: style: The function 'lv_canvas_draw_polygon' is never used. [unusedFunction]

^
src/widgets/canvas/lv_canvas.c:122:0: style: The function 'lv_canvas_get_px' is never used. [unusedFunction]

^
src/widgets/chart/lv_chart.c:525:0: style: The function 'lv_chart_get_cursor_point' is never used. [unusedFunction]

^
src/widgets/chart/lv_chart.c:248:0: style: The function 'lv_chart_get_type' is never used. [unusedFunction]

^
src/widgets/chart/lv_chart.c:413:0: style: The function 'lv_chart_hide_series' is never used. [unusedFunction]

^
src/widgets/chart/lv_chart.c:538:0: style: The function 'lv_chart_set_all_value' is never used. [unusedFunction]

^
src/widgets/chart/lv_chart.c:488:0: style: The function 'lv_chart_set_cursor_pos' is never used. [unusedFunction]

^
src/widgets/chart/lv_chart.c:622:0: style: The function 'lv_chart_set_ext_x_array' is never used. [unusedFunction]

^
src/widgets/chart/lv_chart.c:423:0: style: The function 'lv_chart_set_series_color' is never used. [unusedFunction]

^
src/widgets/chart/lv_chart.c:582:0: style: The function 'lv_chart_set_value_by_id' is never used. [unusedFunction]

^
src/widgets/chart/lv_chart.c:432:0: style: The function 'lv_chart_set_x_start_point' is never used. [unusedFunction]

^
src/misc/lv_color.c:541:0: style: The function 'lv_color_change_lightness' is never used. [unusedFunction]

^
src/misc/lv_color.c:672:0: style: The function 'lv_color_to_hsv' is never used. [unusedFunction]

^
src/core/lv_obj.c:267:0: style: The function 'lv_deinit' is never used. [unusedFunction]

^
src/core/lv_disp.c:701:0: style: The function 'lv_disp_add_event' is never used. [unusedFunction]

^
src/core/lv_disp.c:451:0: style: The function 'lv_disp_flush_is_last' is never used. [unusedFunction]

^
src/core/lv_disp.c:436:0: style: The function 'lv_disp_get_antialiasing' is never used. [unusedFunction]

^
src/core/lv_disp.c:847:0: style: The function 'lv_disp_get_chroma_key_color' is never used. [unusedFunction]

^
src/core/lv_disp.c:420:0: style: The function 'lv_disp_get_color_format' is never used. [unusedFunction]

^
src/core/lv_disp.c:882:0: style: The function 'lv_disp_get_driver_data' is never used. [unusedFunction]

^
src/core/lv_disp.c:708:0: style: The function 'lv_disp_get_event_count' is never used. [unusedFunction]

^
src/core/lv_disp.c:715:0: style: The function 'lv_disp_get_event_dsc' is never used. [unusedFunction]

^
src/core/lv_disp.c:789:0: style: The function 'lv_disp_get_inactive_time' is never used. [unusedFunction]

^
src/core/lv_disp.c:336:0: style: The function 'lv_disp_get_offset_x' is never used. [unusedFunction]

^
src/core/lv_disp.c:357:0: style: The function 'lv_disp_get_offset_y' is never used. [unusedFunction]

^
src/core/lv_disp.c:758:0: style: The function 'lv_disp_get_rotation' is never used. [unusedFunction]

^
src/core/lv_disp.c:875:0: style: The function 'lv_disp_get_user_data' is never used. [unusedFunction]

^
src/core/lv_disp.c:156:0: style: The function 'lv_disp_remove' is never used. [unusedFunction]

^
src/core/lv_disp.c:722:0: style: The function 'lv_disp_remove_event' is never used. [unusedFunction]

^
src/core/lv_disp.c:428:0: style: The function 'lv_disp_set_antialaising' is never used. [unusedFunction]

^
src/core/lv_disp.c:411:0: style: The function 'lv_disp_set_color_format' is never used. [unusedFunction]

^
src/core/lv_disp.c:256:0: style: The function 'lv_disp_set_dpi' is never used. [unusedFunction]

^
src/core/lv_disp.c:867:0: style: The function 'lv_disp_set_driver_data' is never used. [unusedFunction]

^
src/core/lv_disp.c:244:0: style: The function 'lv_disp_set_offset' is never used. [unusedFunction]

^
src/core/lv_disp.c:232:0: style: The function 'lv_disp_set_physical_res' is never used. [unusedFunction]

^
src/core/lv_disp.c:219:0: style: The function 'lv_disp_set_res' is never used. [unusedFunction]

^
src/core/lv_disp.c:748:0: style: The function 'lv_disp_set_rotation' is never used. [unusedFunction]

^
src/core/lv_disp.c:860:0: style: The function 'lv_disp_set_user_data' is never used. [unusedFunction]

^
src/core/lv_disp.c:805:0: style: The function 'lv_disp_trig_activity' is never used. [unusedFunction]

^
src/draw/lv_draw_mask.c:145:0: style: The function 'lv_draw_mask_apply_ids' is never used. [unusedFunction]

^
src/draw/lv_draw_mask.c:246:0: style: The function 'lv_draw_mask_get_cnt' is never used. [unusedFunction]

^
src/draw/lv_draw_mask.c:567:0: style: The function 'lv_draw_mask_polygon_init' is never used. [unusedFunction]

^
src/draw/lv_draw_triangle.c:44:0: style: The function 'lv_draw_triangle' is never used. [unusedFunction]

^
src/widgets/dropdown/lv_dropdown.c:401:0: style: The function 'lv_dropdown_get_option_index' is never used. [unusedFunction]

^
src/misc/lv_event.c:121:0: style: The function 'lv_event_dsc_get_user_data' is never used. [unusedFunction]

^
src/core/lv_obj_event.c:261:0: style: The function 'lv_event_get_cover_area' is never used. [unusedFunction]

^
src/core/lv_obj_event.c:127:0: style: The function 'lv_event_get_current_target_obj' is never used. [unusedFunction]

^
src/core/lv_obj_event.c:250:0: style: The function 'lv_event_get_hit_test_info' is never used. [unusedFunction]

^
src/core/lv_obj_event.c:204:0: style: The function 'lv_event_get_key' is never used. [unusedFunction]

^
src/core/lv_obj_event.c:193:0: style: The function 'lv_event_get_old_size' is never used. [unusedFunction]

^
src/core/lv_obj_event.c:217:0: style: The function 'lv_event_get_scroll_anim' is never used. [unusedFunction]

^
src/core/lv_obj_event.c:132:0: style: The function 'lv_event_get_target_obj' is never used. [unusedFunction]

^
src/misc/lv_event.c:179:0: style: The function 'lv_event_register_id' is never used. [unusedFunction]

^
src/misc/lv_event.c:169:0: style: The function 'lv_event_stop_bubbling' is never used. [unusedFunction]

^
src/misc/lv_event.c:174:0: style: The function 'lv_event_stop_processing' is never used. [unusedFunction]

^
examples/anim/lv_example_anim_1.c:40:0: style: The function 'lv_example_anim_1' is never used. [unusedFunction]

^
examples/anim/lv_example_anim_2.c:18:0: style: The function 'lv_example_anim_2' is never used. [unusedFunction]

^
examples/anim/lv_example_anim_3.c:37:0: style: The function 'lv_example_anim_3' is never used. [unusedFunction]

^
examples/anim/lv_example_anim_timeline_1.c:137:0: style: The function 'lv_example_anim_timeline_1' is never used. [unusedFunction]

^
examples/widgets/animimg/lv_example_animimg_1.c:13:0: style: The function 'lv_example_animimg_1' is never used. [unusedFunction]

^
examples/widgets/arc/lv_example_arc_1.c:7:0: style: The function 'lv_example_arc_1' is never used. [unusedFunction]

^
examples/widgets/arc/lv_example_arc_2.c:13:0: style: The function 'lv_example_arc_2' is never used. [unusedFunction]

^
examples/widgets/bar/lv_example_bar_1.c:4:0: style: The function 'lv_example_bar_1' is never used. [unusedFunction]

^
examples/widgets/bar/lv_example_bar_2.c:7:0: style: The function 'lv_example_bar_2' is never used. [unusedFunction]

^
examples/widgets/bar/lv_example_bar_3.c:12:0: style: The function 'lv_example_bar_3' is never used. [unusedFunction]

^
examples/widgets/bar/lv_example_bar_4.c:7:0: style: The function 'lv_example_bar_4' is never used. [unusedFunction]

^
examples/widgets/bar/lv_example_bar_5.c:7:0: style: The function 'lv_example_bar_5' is never used. [unusedFunction]

^
examples/widgets/bar/lv_example_bar_6.c:50:0: style: The function 'lv_example_bar_6' is never used. [unusedFunction]

^
examples/widgets/btn/lv_example_btn_1.c:16:0: style: The function 'lv_example_btn_1' is never used. [unusedFunction]

^
examples/widgets/btn/lv_example_btn_2.c:7:0: style: The function 'lv_example_btn_2' is never used. [unusedFunction]

^
examples/widgets/btn/lv_example_btn_3.c:7:0: style: The function 'lv_example_btn_3' is never used. [unusedFunction]

^
examples/widgets/btnmatrix/lv_example_btnmatrix_1.c:22:0: style: The function 'lv_example_btnmatrix_1' is never used. [unusedFunction]

^
examples/widgets/btnmatrix/lv_example_btnmatrix_2.c:71:0: style: The function 'lv_example_btnmatrix_2' is never used. [unusedFunction]

^
examples/widgets/btnmatrix/lv_example_btnmatrix_3.c:27:0: style: The function 'lv_example_btnmatrix_3' is never used. [unusedFunction]

^
examples/widgets/calendar/lv_example_calendar_1.c:17:0: style: The function 'lv_example_calendar_1' is never used. [unusedFunction]

^
examples/widgets/canvas/lv_example_canvas_1.c:8:0: style: The function 'lv_example_canvas_1' is never used. [unusedFunction]

^
examples/widgets/canvas/lv_example_canvas_2.c:10:0: style: The function 'lv_example_canvas_2' is never used. [unusedFunction]

^
examples/widgets/canvas/lv_example_canvas_3.c:10:0: style: The function 'lv_example_canvas_3' is never used. [unusedFunction]

^
examples/widgets/canvas/lv_example_canvas_5.c:10:0: style: The function 'lv_example_canvas_5' is never used. [unusedFunction]

^
examples/widgets/canvas/lv_example_canvas_6.c:10:0: style: The function 'lv_example_canvas_6' is never used. [unusedFunction]

^
examples/widgets/canvas/lv_example_canvas_7.c:10:0: style: The function 'lv_example_canvas_7' is never used. [unusedFunction]

^
examples/widgets/chart/lv_example_chart_1.c:4:0: style: The function 'lv_example_chart_1' is never used. [unusedFunction]

^
examples/widgets/chart/lv_example_chart_2.c:104:0: style: The function 'lv_example_chart_2' is never used. [unusedFunction]

^
examples/widgets/chart/lv_example_chart_3.c:18:0: style: The function 'lv_example_chart_3' is never used. [unusedFunction]

^
examples/widgets/chart/lv_example_chart_4.c:62:0: style: The function 'lv_example_chart_4' is never used. [unusedFunction]

^
examples/widgets/chart/lv_example_chart_5.c:68:0: style: The function 'lv_example_chart_5' is never used. [unusedFunction]

^
examples/widgets/chart/lv_example_chart_6.c:60:0: style: The function 'lv_example_chart_6' is never used. [unusedFunction]

^
examples/widgets/chart/lv_example_chart_7.c:39:0: style: The function 'lv_example_chart_7' is never used. [unusedFunction]

^
examples/widgets/chart/lv_example_chart_8.c:74:0: style: The function 'lv_example_chart_8' is never used. [unusedFunction]

^
examples/widgets/chart/lv_example_chart_9.c:26:0: style: The function 'lv_example_chart_9' is never used. [unusedFunction]

^
examples/widgets/checkbox/lv_example_checkbox_1.c:18:0: style: The function 'lv_example_checkbox_1' is never used. [unusedFunction]

^
examples/widgets/checkbox/lv_example_checkbox_2.c:40:0: style: The function 'lv_example_checkbox_2' is never used. [unusedFunction]

^
examples/widgets/colorwheel/lv_example_colorwheel_1.c:4:0: style: The function 'lv_example_colorwheel_1' is never used. [unusedFunction]

^
examples/widgets/dropdown/lv_example_dropdown_1.c:15:0: style: The function 'lv_example_dropdown_1' is never used. [unusedFunction]

^
examples/widgets/dropdown/lv_example_dropdown_2.c:8:0: style: The function 'lv_example_dropdown_2' is never used. [unusedFunction]

^
examples/widgets/dropdown/lv_example_dropdown_3.c:15:0: style: The function 'lv_example_dropdown_3' is never used. [unusedFunction]

^
examples/event/lv_example_event_1.c:18:0: style: The function 'lv_example_event_1' is never used. [unusedFunction]

^
examples/event/lv_example_event_2.c:30:0: style: The function 'lv_example_event_2' is never used. [unusedFunction]

^
examples/event/lv_example_event_3.c:22:0: style: The function 'lv_example_event_3' is never used. [unusedFunction]

^
examples/event/lv_example_event_4.c:47:0: style: The function 'lv_example_event_4' is never used. [unusedFunction]

^
examples/libs/ffmpeg/lv_example_ffmpeg_1.c:18:0: style: The function 'lv_example_ffmpeg_1' is never used. [unusedFunction]

^
examples/libs/ffmpeg/lv_example_ffmpeg_2.c:21:0: style: The function 'lv_example_ffmpeg_2' is never used. [unusedFunction]

^
examples/layouts/flex/lv_example_flex_1.c:7:0: style: The function 'lv_example_flex_1' is never used. [unusedFunction]

^
examples/layouts/flex/lv_example_flex_2.c:7:0: style: The function 'lv_example_flex_2' is never used. [unusedFunction]

^
examples/layouts/flex/lv_example_flex_3.c:7:0: style: The function 'lv_example_flex_3' is never used. [unusedFunction]

^
examples/layouts/flex/lv_example_flex_4.c:7:0: style: The function 'lv_example_flex_4' is never used. [unusedFunction]

^
examples/layouts/flex/lv_example_flex_5.c:17:0: style: The function 'lv_example_flex_5' is never used. [unusedFunction]

^
examples/layouts/flex/lv_example_flex_6.c:8:0: style: The function 'lv_example_flex_6' is never used. [unusedFunction]

^
examples/libs/freetype/lv_example_freetype_1.c:40:0: style: The function 'lv_example_freetype_1' is never used. [unusedFunction]

^
examples/get_started/lv_example_get_started_1.c:7:0: style: The function 'lv_example_get_started_1' is never used. [unusedFunction]

^
examples/get_started/lv_example_get_started_2.c:21:0: style: The function 'lv_example_get_started_2' is never used. [unusedFunction]

^
examples/get_started/lv_example_get_started_3.c:47:0: style: The function 'lv_example_get_started_3' is never used. [unusedFunction]

^
examples/get_started/lv_example_get_started_4.c:18:0: style: The function 'lv_example_get_started_4' is never used. [unusedFunction]

^
examples/layouts/grid/lv_example_grid_1.c:7:0: style: The function 'lv_example_grid_1' is never used. [unusedFunction]

^
examples/layouts/grid/lv_example_grid_2.c:8:0: style: The function 'lv_example_grid_2' is never used. [unusedFunction]

^
examples/layouts/grid/lv_example_grid_3.c:7:0: style: The function 'lv_example_grid_3' is never used. [unusedFunction]

^
examples/layouts/grid/lv_example_grid_4.c:7:0: style: The function 'lv_example_grid_4' is never used. [unusedFunction]

^
examples/layouts/grid/lv_example_grid_5.c:17:0: style: The function 'lv_example_grid_5' is never used. [unusedFunction]

^
examples/layouts/grid/lv_example_grid_6.c:7:0: style: The function 'lv_example_grid_6' is never used. [unusedFunction]

^
examples/widgets/img/lv_example_img_1.c:5:0: style: The function 'lv_example_img_1' is never used. [unusedFunction]

^
examples/widgets/img/lv_example_img_2.c:14:0: style: The function 'lv_example_img_2' is never used. [unusedFunction]

^
examples/widgets/img/lv_example_img_3.c:18:0: style: The function 'lv_example_img_3' is never used. [unusedFunction]

^
examples/widgets/img/lv_example_img_4.c:12:0: style: The function 'lv_example_img_4' is never used. [unusedFunction]

^
examples/widgets/imgbtn/lv_example_imgbtn_1.c:4:0: style: The function 'lv_example_imgbtn_1' is never used. [unusedFunction]

^
examples/others/imgfont/lv_example_imgfont_1.c:55:0: style: The function 'lv_example_imgfont_1' is never used. [unusedFunction]

^
examples/widgets/keyboard/lv_example_keyboard_1.c:20:0: style: The function 'lv_example_keyboard_1' is never used. [unusedFunction]

^
examples/widgets/keyboard/lv_example_keyboard_2.c:4:0: style: The function 'lv_example_keyboard_2' is never used. [unusedFunction]

^
examples/widgets/label/lv_example_label_1.c:7:0: style: The function 'lv_example_label_1' is never used. [unusedFunction]

^
examples/widgets/label/lv_example_label_2.c:7:0: style: The function 'lv_example_label_2' is never used. [unusedFunction]

^
examples/widgets/label/lv_example_label_4.c:32:0: style: The function 'lv_example_label_4' is never used. [unusedFunction]

^
examples/widgets/label/lv_example_label_5.c:8:0: style: The function 'lv_example_label_5' is never used. [unusedFunction]

^
examples/widgets/led/lv_example_led_1.c:7:0: style: The function 'lv_example_led_1' is never used. [unusedFunction]

^
examples/widgets/line/lv_example_line_1.c:4:0: style: The function 'lv_example_line_1' is never used. [unusedFunction]

^
examples/widgets/list/lv_example_list_1.c:14:0: style: The function 'lv_example_list_1' is never used. [unusedFunction]

^
examples/widgets/list/lv_example_list_2.c:115:0: style: The function 'lv_example_list_2' is never used. [unusedFunction]

^
examples/widgets/menu/lv_example_menu_1.c:4:0: style: The function 'lv_example_menu_1' is never used. [unusedFunction]

^
examples/widgets/menu/lv_example_menu_2.c:15:0: style: The function 'lv_example_menu_2' is never used. [unusedFunction]

^
examples/widgets/menu/lv_example_menu_3.c:4:0: style: The function 'lv_example_menu_3' is never used. [unusedFunction]

^
examples/widgets/menu/lv_example_menu_4.c:31:0: style: The function 'lv_example_menu_4' is never used. [unusedFunction]

^
examples/widgets/menu/lv_example_menu_5.c:20:0: style: The function 'lv_example_menu_5' is never used. [unusedFunction]

^
examples/widgets/meter/lv_example_meter_1.c:14:0: style: The function 'lv_example_meter_1' is never used. [unusedFunction]

^
examples/widgets/meter/lv_example_meter_2.c:15:0: style: The function 'lv_example_meter_2' is never used. [unusedFunction]

^
examples/widgets/meter/lv_example_meter_3.c:36:0: style: The function 'lv_example_meter_3' is never used. [unusedFunction]

^
examples/widgets/meter/lv_example_meter_4.c:7:0: style: The function 'lv_example_meter_4' is never used. [unusedFunction]

^
examples/widgets/msgbox/lv_example_msgbox_1.c:11:0: style: The function 'lv_example_msgbox_1' is never used. [unusedFunction]

^
examples/widgets/obj/lv_example_obj_1.c:4:0: style: The function 'lv_example_obj_1' is never used. [unusedFunction]

^
examples/widgets/obj/lv_example_obj_2.c:23:0: style: The function 'lv_example_obj_2' is never used. [unusedFunction]

^
examples/libs/rlottie/lv_example_rlottie_1.c:16:0: style: The function 'lv_example_rlottie_1' is never used. [unusedFunction]

^
examples/libs/rlottie/lv_example_rlottie_2.c:17:0: style: The function 'lv_example_rlottie_2' is never used. [unusedFunction]

^
examples/widgets/roller/lv_example_roller_1.c:18:0: style: The function 'lv_example_roller_1' is never used. [unusedFunction]

^
examples/widgets/roller/lv_example_roller_3.c:58:0: style: The function 'lv_example_roller_3' is never used. [unusedFunction]

^
examples/scroll/lv_example_scroll_1.c:7:0: style: The function 'lv_example_scroll_1' is never used. [unusedFunction]

^
examples/scroll/lv_example_scroll_2.c:20:0: style: The function 'lv_example_scroll_2' is never used. [unusedFunction]

^
examples/scroll/lv_example_scroll_3.c:27:0: style: The function 'lv_example_scroll_3' is never used. [unusedFunction]

^
examples/scroll/lv_example_scroll_4.c:8:0: style: The function 'lv_example_scroll_4' is never used. [unusedFunction]

^
examples/scroll/lv_example_scroll_6.c:51:0: style: The function 'lv_example_scroll_6' is never used. [unusedFunction]

^
examples/widgets/slider/lv_example_slider_1.c:10:0: style: The function 'lv_example_slider_1' is never used. [unusedFunction]

^
examples/widgets/slider/lv_example_slider_2.c:9:0: style: The function 'lv_example_slider_2' is never used. [unusedFunction]

^
examples/widgets/slider/lv_example_slider_3.c:10:0: style: The function 'lv_example_slider_3' is never used. [unusedFunction]

^
examples/widgets/span/lv_example_span_1.c:7:0: style: The function 'lv_example_span_1' is never used. [unusedFunction]

^
examples/widgets/spinbox/lv_example_spinbox_1.c:24:0: style: The function 'lv_example_spinbox_1' is never used. [unusedFunction]

^
examples/widgets/spinner/lv_example_spinner_1.c:4:0: style: The function 'lv_example_spinner_1' is never used. [unusedFunction]

^
examples/styles/lv_example_style_1.c:7:0: style: The function 'lv_example_style_1' is never used. [unusedFunction]

^
examples/styles/lv_example_style_10.c:7:0: style: The function 'lv_example_style_10' is never used. [unusedFunction]

^
examples/styles/lv_example_style_11.c:7:0: style: The function 'lv_example_style_11' is never used. [unusedFunction]

^
examples/styles/lv_example_style_12.c:7:0: style: The function 'lv_example_style_12' is never used. [unusedFunction]

^
examples/styles/lv_example_style_13.c:7:0: style: The function 'lv_example_style_13' is never used. [unusedFunction]

^
examples/styles/lv_example_style_14.c:44:0: style: The function 'lv_example_style_14' is never used. [unusedFunction]

^
examples/styles/lv_example_style_15.c:9:0: style: The function 'lv_example_style_15' is never used. [unusedFunction]

^
examples/styles/lv_example_style_2.c:7:0: style: The function 'lv_example_style_2' is never used. [unusedFunction]

^
examples/styles/lv_example_style_3.c:7:0: style: The function 'lv_example_style_3' is never used. [unusedFunction]

^
examples/styles/lv_example_style_4.c:7:0: style: The function 'lv_example_style_4' is never used. [unusedFunction]

^
examples/styles/lv_example_style_5.c:7:0: style: The function 'lv_example_style_5' is never used. [unusedFunction]

^
examples/styles/lv_example_style_6.c:7:0: style: The function 'lv_example_style_6' is never used. [unusedFunction]

^
examples/styles/lv_example_style_7.c:7:0: style: The function 'lv_example_style_7' is never used. [unusedFunction]

^
examples/styles/lv_example_style_8.c:7:0: style: The function 'lv_example_style_8' is never used. [unusedFunction]

^
examples/styles/lv_example_style_9.c:7:0: style: The function 'lv_example_style_9' is never used. [unusedFunction]

^
examples/widgets/switch/lv_example_switch_1.c:14:0: style: The function 'lv_example_switch_1' is never used. [unusedFunction]

^
examples/widgets/table/lv_example_table_1.c:33:0: style: The function 'lv_example_table_1' is never used. [unusedFunction]

^
examples/widgets/table/lv_example_table_2.c:56:0: style: The function 'lv_example_table_2' is never used. [unusedFunction]

^
examples/widgets/tabview/lv_example_tabview_1.c:4:0: style: The function 'lv_example_tabview_1' is never used. [unusedFunction]

^
examples/widgets/tabview/lv_example_tabview_2.c:13:0: style: The function 'lv_example_tabview_2' is never used. [unusedFunction]

^
examples/widgets/textarea/lv_example_textarea_1.c:23:0: style: The function 'lv_example_textarea_1' is never used. [unusedFunction]

^
examples/widgets/textarea/lv_example_textarea_2.c:8:0: style: The function 'lv_example_textarea_2' is never used. [unusedFunction]

^
examples/widgets/textarea/lv_example_textarea_3.c:12:0: style: The function 'lv_example_textarea_3' is never used. [unusedFunction]

^
examples/widgets/tileview/lv_example_tileview_1.c:9:0: style: The function 'lv_example_tileview_1' is never used. [unusedFunction]

^
examples/widgets/win/lv_example_win_1.c:12:0: style: The function 'lv_example_win_1' is never used. [unusedFunction]

^
src/misc/lv_fs.c:383:0: style: The function 'lv_fs_dir_close' is never used. [unusedFunction]

^
src/misc/lv_fs.c:332:0: style: The function 'lv_fs_dir_open' is never used. [unusedFunction]

^
src/misc/lv_fs.c:366:0: style: The function 'lv_fs_dir_read' is never used. [unusedFunction]

^
src/misc/lv_fs.c:486:0: style: The function 'lv_fs_get_last' is never used. [unusedFunction]

^
src/misc/lv_fs.c:430:0: style: The function 'lv_fs_get_letters' is never used. [unusedFunction]

^
src/misc/lv_fs.c:46:0: style: The function 'lv_fs_is_ready' is never used. [unusedFunction]

^
src/misc/lv_fs.c:308:0: style: The function 'lv_fs_tell' is never used. [unusedFunction]

^
src/misc/lv_fs.c:460:0: style: The function 'lv_fs_up' is never used. [unusedFunction]

^
src/draw/nxp/vglite/lv_draw_vglite_arc.c:106:0: style: The function 'lv_gpu_nxp_vglite_draw_arc' is never used. [unusedFunction]

^
src/draw/sw/lv_draw_sw_gradient.c:237:0: style: The function 'lv_gradient_free_cache' is never used. [unusedFunction]

^
src/core/lv_group.c:284:0: style: The function 'lv_group_focus_freeze' is never used. [unusedFunction]

^
src/core/lv_group.c:352:0: style: The function 'lv_group_get_edge_cb' is never used. [unusedFunction]

^
src/core/lv_group.c:346:0: style: The function 'lv_group_get_focus_cb' is never used. [unusedFunction]

^
src/core/lv_group.c:364:0: style: The function 'lv_group_get_wrap' is never used. [unusedFunction]

^
src/core/lv_group.c:215:0: style: The function 'lv_group_remove_all_objs' is never used. [unusedFunction]

^
src/core/lv_group.c:305:0: style: The function 'lv_group_set_edge_cb' is never used. [unusedFunction]

^
src/core/lv_group.c:300:0: style: The function 'lv_group_set_focus_cb' is never used. [unusedFunction]

^
src/core/lv_group.c:328:0: style: The function 'lv_group_set_refocus_policy' is never used. [unusedFunction]

^
src/core/lv_group.c:333:0: style: The function 'lv_group_set_wrap' is never used. [unusedFunction]

^
src/draw/lv_img_buf.c:51:0: style: The function 'lv_img_buf_free' is never used. [unusedFunction]

^
src/draw/lv_img_cache.c:55:0: style: The function 'lv_img_cache_set_size' is never used. [unusedFunction]

^
src/draw/lv_img_decoder.c:211:0: style: The function 'lv_img_decoder_delete' is never used. [unusedFunction]

^
src/draw/lv_img_decoder.c:242:0: style: The function 'lv_img_decoder_set_read_line_cb' is never used. [unusedFunction]

^
src/widgets/img/lv_img.c:330:0: style: The function 'lv_img_get_angle' is never used. [unusedFunction]

^
src/widgets/img/lv_img.c:357:0: style: The function 'lv_img_get_antialias' is never used. [unusedFunction]

^
src/widgets/img/lv_img.c:312:0: style: The function 'lv_img_get_offset_x' is never used. [unusedFunction]

^
src/widgets/img/lv_img.c:321:0: style: The function 'lv_img_get_offset_y' is never used. [unusedFunction]

^
src/widgets/img/lv_img.c:339:0: style: The function 'lv_img_get_pivot' is never used. [unusedFunction]

^
src/widgets/img/lv_img.c:366:0: style: The function 'lv_img_get_size_mode' is never used. [unusedFunction]

^
src/widgets/img/lv_img.c:303:0: style: The function 'lv_img_get_src' is never used. [unusedFunction]

^
src/widgets/img/lv_img.c:348:0: style: The function 'lv_img_get_zoom' is never used. [unusedFunction]

^
src/widgets/img/lv_img.c:280:0: style: The function 'lv_img_set_antialias' is never used. [unusedFunction]

^
src/widgets/img/lv_img.c:155:0: style: The function 'lv_img_set_offset_x' is never used. [unusedFunction]

^
src/widgets/img/lv_img.c:289:0: style: The function 'lv_img_set_size_mode' is never used. [unusedFunction]

^
src/widgets/imgbtn/lv_imgbtn.c:123:0: style: The function 'lv_imgbtn_get_src_left' is never used. [unusedFunction]

^
src/widgets/imgbtn/lv_imgbtn.c:138:0: style: The function 'lv_imgbtn_get_src_middle' is never used. [unusedFunction]

^
src/widgets/imgbtn/lv_imgbtn.c:152:0: style: The function 'lv_imgbtn_get_src_right' is never used. [unusedFunction]

^
src/widgets/imgbtn/lv_imgbtn.c:94:0: style: The function 'lv_imgbtn_set_state' is never used. [unusedFunction]

^
src/core/lv_indev.c:117:0: style: The function 'lv_indev_delete' is never used. [unusedFunction]

^
src/core/lv_indev.c:223:0: style: The function 'lv_indev_enable' is never used. [unusedFunction]

^
src/core/lv_indev.c:313:0: style: The function 'lv_indev_get_driver_data' is never used. [unusedFunction]

^
src/core/lv_indev.c:407:0: style: The function 'lv_indev_get_gesture_dir' is never used. [unusedFunction]

^
src/core/lv_indev.c:412:0: style: The function 'lv_indev_get_key' is never used. [unusedFunction]

^
src/core/lv_indev.c:458:0: style: The function 'lv_indev_get_read_timer' is never used. [unusedFunction]

^
src/core/lv_indev.c:279:0: style: The function 'lv_indev_get_state' is never used. [unusedFunction]

^
src/core/lv_indev.c:307:0: style: The function 'lv_indev_get_user_data' is never used. [unusedFunction]

^
src/core/lv_indev.c:383:0: style: The function 'lv_indev_set_button_points' is never used. [unusedFunction]

^
src/core/lv_indev.c:365:0: style: The function 'lv_indev_set_cursor' is never used. [unusedFunction]

^
src/core/lv_indev.c:265:0: style: The function 'lv_indev_set_driver_data' is never used. [unusedFunction]

^
src/core/lv_indev.c:259:0: style: The function 'lv_indev_set_user_data' is never used. [unusedFunction]

^
src/core/lv_obj.c:108:0: style: The function 'lv_is_initialized' is never used. [unusedFunction]

^
src/widgets/keyboard/lv_keyboard.c:289:0: style: The function 'lv_keyboard_get_mode' is never used. [unusedFunction]

^
src/widgets/keyboard/lv_keyboard.c:277:0: style: The function 'lv_keyboard_get_textarea' is never used. [unusedFunction]

^
src/widgets/keyboard/lv_keyboard.c:241:0: style: The function 'lv_keyboard_set_popovers' is never used. [unusedFunction]

^
src/widgets/list/lv_list.c:117:0: style: The function 'lv_list_set_btn_text' is never used. [unusedFunction]

^
src/misc/lv_lru.c:73:0: style: The function 'lv_lru_create' is never used. [unusedFunction]

^
src/misc/lv_lru.c:103:0: style: The function 'lv_lru_del' is never used. [unusedFunction]

^
src/misc/lv_lru.c:192:0: style: The function 'lv_lru_get' is never used. [unusedFunction]

^
src/misc/lv_lru.c:215:0: style: The function 'lv_lru_remove' is never used. [unusedFunction]

^
src/misc/lv_lru.c:139:0: style: The function 'lv_lru_set' is never used. [unusedFunction]

^
src/misc/lv_malloc_builtin.c:106:0: style: The function 'lv_mem_builtin_add_pool' is never used. [unusedFunction]

^
src/misc/lv_malloc_builtin.c:121:0: style: The function 'lv_mem_builtin_remove_pool' is never used. [unusedFunction]

^
src/misc/lv_mem.c:162:0: style: The function 'lv_mem_test' is never used. [unusedFunction]

^
src/widgets/menu/lv_menu.c:469:0: style: The function 'lv_menu_get_sidebar_header' is never used. [unusedFunction]

^
src/widgets/menu/lv_menu.c:477:0: style: The function 'lv_menu_get_sidebar_header_back_btn' is never used. [unusedFunction]

^
src/widgets/menu/lv_menu.c:330:0: style: The function 'lv_menu_set_mode_header' is never used. [unusedFunction]

^
src/widgets/menu/lv_menu.c:411:0: style: The function 'lv_menu_set_page_title_static' is never used. [unusedFunction]

^
src/core/lv_obj_tree.c:112:0: style: The function 'lv_obj_del_delayed' is never used. [unusedFunction]

^
src/core/lv_obj_style.c:512:0: style: The function 'lv_obj_fade_in' is never used. [unusedFunction]

^
src/core/lv_obj_style.c:525:0: style: The function 'lv_obj_fade_out' is never used. [unusedFunction]

^
src/core/lv_obj.c:461:0: style: The function 'lv_obj_get_class' is never used. [unusedFunction]

^
src/core/lv_obj_pos.c:506:0: style: The function 'lv_obj_get_x2' is never used. [unusedFunction]

^
src/core/lv_obj_pos.c:537:0: style: The function 'lv_obj_get_x_aligned' is never used. [unusedFunction]

^
src/core/lv_obj_pos.c:542:0: style: The function 'lv_obj_get_y_aligned' is never used. [unusedFunction]

^
src/core/lv_obj.c:450:0: style: The function 'lv_obj_has_class' is never used. [unusedFunction]

^
src/core/lv_obj_scroll.c:431:0: style: The function 'lv_obj_is_scrolling' is never used. [unusedFunction]

^
src/core/lv_obj.c:466:0: style: The function 'lv_obj_is_valid' is never used. [unusedFunction]

^
src/core/lv_obj_pos.c:248:0: style: The function 'lv_obj_set_content_width' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:651:0: style: The function 'lv_obj_set_style_anim' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:667:0: style: The function 'lv_obj_set_style_anim_speed' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:659:0: style: The function 'lv_obj_set_style_anim_time' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:531:0: style: The function 'lv_obj_set_style_arc_color' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:547:0: style: The function 'lv_obj_set_style_arc_img_src' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:539:0: style: The function 'lv_obj_set_style_arc_opa' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:523:0: style: The function 'lv_obj_set_style_arc_rounded' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:275:0: style: The function 'lv_obj_set_style_bg_dither_mode' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:267:0: style: The function 'lv_obj_set_style_bg_grad' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:259:0: style: The function 'lv_obj_set_style_bg_grad_stop' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:291:0: style: The function 'lv_obj_set_style_bg_img_opa' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:299:0: style: The function 'lv_obj_set_style_bg_img_recolor' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:307:0: style: The function 'lv_obj_set_style_bg_img_recolor_opa' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:315:0: style: The function 'lv_obj_set_style_bg_img_tiled' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:251:0: style: The function 'lv_obj_set_style_bg_main_stop' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:683:0: style: The function 'lv_obj_set_style_blend_mode' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:323:0: style: The function 'lv_obj_set_style_border_color' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:331:0: style: The function 'lv_obj_set_style_border_opa' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:355:0: style: The function 'lv_obj_set_style_border_post' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:635:0: style: The function 'lv_obj_set_style_color_filter_dsc' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:643:0: style: The function 'lv_obj_set_style_color_filter_opa' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:443:0: style: The function 'lv_obj_set_style_img_opa' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:499:0: style: The function 'lv_obj_set_style_line_color' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:507:0: style: The function 'lv_obj_set_style_line_opa' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:491:0: style: The function 'lv_obj_set_style_line_rounded' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:43:0: style: The function 'lv_obj_set_style_max_height' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:35:0: style: The function 'lv_obj_set_style_min_height' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:371:0: style: The function 'lv_obj_set_style_outline_color' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:379:0: style: The function 'lv_obj_set_style_outline_opa' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:387:0: style: The function 'lv_obj_set_style_outline_pad' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:363:0: style: The function 'lv_obj_set_style_outline_width' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:427:0: style: The function 'lv_obj_set_style_shadow_color' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:403:0: style: The function 'lv_obj_set_style_shadow_ofs_x' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:411:0: style: The function 'lv_obj_set_style_shadow_ofs_y' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:435:0: style: The function 'lv_obj_set_style_shadow_opa' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:419:0: style: The function 'lv_obj_set_style_shadow_spread' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:395:0: style: The function 'lv_obj_set_style_shadow_width' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:595:0: style: The function 'lv_obj_set_style_text_decor' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:579:0: style: The function 'lv_obj_set_style_text_letter_space' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:563:0: style: The function 'lv_obj_set_style_text_opa' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:83:0: style: The function 'lv_obj_set_style_transform_height' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:75:0: style: The function 'lv_obj_set_style_transform_width' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:675:0: style: The function 'lv_obj_set_style_transition' is never used. [unusedFunction]

^
src/core/lv_obj_style_gen.c:99:0: style: The function 'lv_obj_set_style_translate_y' is never used. [unusedFunction]

^
src/widgets/tileview/lv_tileview.c:92:0: style: The function 'lv_obj_set_tile_id' is never used. [unusedFunction]

^
src/widgets/slider/lv_slider.c:71:0: style: The function 'lv_slider_is_dragged' is never used. [unusedFunction]

^
src/widgets/span/lv_span.c:117:0: style: The function 'lv_spangroup_del_span' is never used. [unusedFunction]

^
src/widgets/span/lv_span.c:284:0: style: The function 'lv_spangroup_get_align' is never used. [unusedFunction]

^
src/widgets/span/lv_span.c:234:0: style: The function 'lv_spangroup_get_child' is never used. [unusedFunction]

^
src/widgets/span/lv_span.c:271:0: style: The function 'lv_spangroup_get_child_cnt' is never used. [unusedFunction]

^
src/widgets/span/lv_span.c:296:0: style: The function 'lv_spangroup_get_indent' is never used. [unusedFunction]

^
src/widgets/span/lv_span.c:310:0: style: The function 'lv_spangroup_get_lines' is never used. [unusedFunction]

^
src/widgets/span/lv_span.c:303:0: style: The function 'lv_spangroup_get_mode' is never used. [unusedFunction]

^
src/widgets/span/lv_span.c:289:0: style: The function 'lv_spangroup_get_overflow' is never used. [unusedFunction]

^
src/widgets/span/lv_span.c:222:0: style: The function 'lv_spangroup_set_lines' is never used. [unusedFunction]

^
src/widgets/spinbox/lv_spinbox.c:129:0: style: The function 'lv_spinbox_set_step' is never used. [unusedFunction]

^
src/misc/lv_mem.c:157:0: style: The function 'lv_strcpy' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:83:0: style: The function 'lv_style_set_align' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:833:0: style: The function 'lv_style_set_anim_speed' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:683:0: style: The function 'lv_style_set_arc_img_src' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:673:0: style: The function 'lv_style_set_arc_opa' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:873:0: style: The function 'lv_style_set_base_dir' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:343:0: style: The function 'lv_style_set_bg_dither_mode' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:323:0: style: The function 'lv_style_set_bg_grad_stop' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:373:0: style: The function 'lv_style_set_bg_img_recolor' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:383:0: style: The function 'lv_style_set_bg_img_recolor_opa' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:313:0: style: The function 'lv_style_set_bg_main_stop' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:853:0: style: The function 'lv_style_set_blend_mode' is never used. [unusedFunction]

^
src/layouts/flex/lv_flex.c:146:0: style: The function 'lv_style_set_flex_cross_place' is never used. [unusedFunction]

^
src/layouts/flex/lv_flex.c:162:0: style: The function 'lv_style_set_flex_grow' is never used. [unusedFunction]

^
src/layouts/flex/lv_flex.c:154:0: style: The function 'lv_style_set_flex_track_place' is never used. [unusedFunction]

^
src/layouts/grid/lv_grid.c:224:0: style: The function 'lv_style_set_grid_cell_column_pos' is never used. [unusedFunction]

^
src/layouts/grid/lv_grid.c:232:0: style: The function 'lv_style_set_grid_cell_column_span' is never used. [unusedFunction]

^
src/layouts/grid/lv_grid.c:240:0: style: The function 'lv_style_set_grid_cell_row_pos' is never used. [unusedFunction]

^
src/layouts/grid/lv_grid.c:248:0: style: The function 'lv_style_set_grid_cell_row_span' is never used. [unusedFunction]

^
src/layouts/grid/lv_grid.c:256:0: style: The function 'lv_style_set_grid_cell_x_align' is never used. [unusedFunction]

^
src/layouts/grid/lv_grid.c:264:0: style: The function 'lv_style_set_grid_cell_y_align' is never used. [unusedFunction]

^
src/layouts/grid/lv_grid.c:215:0: style: The function 'lv_style_set_grid_column_align' is never used. [unusedFunction]

^
src/layouts/grid/lv_grid.c:199:0: style: The function 'lv_style_set_grid_column_dsc_array' is never used. [unusedFunction]

^
src/layouts/grid/lv_grid.c:207:0: style: The function 'lv_style_set_grid_row_align' is never used. [unusedFunction]

^
src/layouts/grid/lv_grid.c:191:0: style: The function 'lv_style_set_grid_row_dsc_array' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:553:0: style: The function 'lv_style_set_img_opa' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:603:0: style: The function 'lv_style_set_line_dash_gap' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:593:0: style: The function 'lv_style_set_line_dash_width' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:633:0: style: The function 'lv_style_set_line_opa' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:243:0: style: The function 'lv_style_set_margin_bottom' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:253:0: style: The function 'lv_style_set_margin_left' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:263:0: style: The function 'lv_style_set_margin_right' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:233:0: style: The function 'lv_style_set_margin_top' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:43:0: style: The function 'lv_style_set_min_height' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:13:0: style: The function 'lv_style_set_min_width' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:783:0: style: The function 'lv_style_set_opa' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:503:0: style: The function 'lv_style_set_shadow_ofs_x' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:153:0: style: The function 'lv_style_set_transform_pivot_x' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:163:0: style: The function 'lv_style_set_transform_pivot_y' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:133:0: style: The function 'lv_style_set_transform_zoom' is never used. [unusedFunction]

^
src/misc/lv_style_gen.c:113:0: style: The function 'lv_style_set_translate_x' is never used. [unusedFunction]

^
src/widgets/table/lv_table.c:378:0: style: The function 'lv_table_get_col_width' is never used. [unusedFunction]

^
src/widgets/table/lv_table.c:362:0: style: The function 'lv_table_get_row_cnt' is never used. [unusedFunction]

^
src/widgets/objx_templ/lv_objx_templ.c:61:0: style: The function 'lv_templ_create' is never used. [unusedFunction]

^
tests/src/lv_test_init.c:91:0: style: The function 'lv_test_assert_fail' is never used. [unusedFunction]

^
tests/unity/unity_support.c:67:0: style: The function 'lv_test_assert_img_eq' is never used. [unusedFunction]

^
tests/src/lv_test_init.c:31:0: style: The function 'lv_test_deinit' is never used. [unusedFunction]

^
tests/src/lv_test_indev.c:96:0: style: The function 'lv_test_encoder_add_diff' is never used. [unusedFunction]

^
tests/src/lv_test_malloc.c:72:0: style: The function 'lv_test_free' is never used. [unusedFunction]

^
tests/src/lv_test_malloc.c:58:0: style: The function 'lv_test_free_set_cb' is never used. [unusedFunction]

^
tests/src/lv_test_init.c:24:0: style: The function 'lv_test_init' is never used. [unusedFunction]

^
tests/src/lv_test_malloc.c:41:0: style: The function 'lv_test_malloc' is never used. [unusedFunction]

^
tests/src/lv_test_indev.c:32:0: style: The function 'lv_test_mouse_move_by' is never used. [unusedFunction]

^
tests/src/lv_test_malloc.c:52:0: style: The function 'lv_test_realloc' is never used. [unusedFunction]

^
tests/src/lv_test_malloc.c:47:0: style: The function 'lv_test_realloc_set_cb' is never used. [unusedFunction]

^
src/widgets/textarea/lv_textarea.c:708:0: style: The function 'lv_textarea_get_current_char' is never used. [unusedFunction]

^
src/widgets/textarea/lv_textarea.c:699:0: style: The function 'lv_textarea_get_password_show_time' is never used. [unusedFunction]

^
src/widgets/textarea/lv_textarea.c:686:0: style: The function 'lv_textarea_get_text_selection' is never used. [unusedFunction]

^
src/widgets/textarea/lv_textarea.c:543:0: style: The function 'lv_textarea_set_align' is never used. [unusedFunction]

^
src/widgets/textarea/lv_textarea.c:511:0: style: The function 'lv_textarea_set_insert_replace' is never used. [unusedFunction]

^
src/widgets/textarea/lv_textarea.c:439:0: style: The function 'lv_textarea_set_password_bullet' is never used. [unusedFunction]

^
src/widgets/textarea/lv_textarea.c:535:0: style: The function 'lv_textarea_set_password_show_time' is never used. [unusedFunction]

^
src/widgets/textarea/lv_textarea.c:519:0: style: The function 'lv_textarea_set_text_selection' is never used. [unusedFunction]

^
src/widgets/textarea/lv_textarea.c:666:0: style: The function 'lv_textarea_text_is_selected' is never used. [unusedFunction]

^
src/themes/basic/lv_theme_basic.c:143:0: style: The function 'lv_theme_basic_init' is never used. [unusedFunction]

^
src/core/lv_theme.c:105:0: style: The function 'lv_theme_get_color_secondary' is never used. [unusedFunction]

^
src/core/lv_theme.c:87:0: style: The function 'lv_theme_get_font_normal' is never used. [unusedFunction]

^
src/core/lv_theme.c:81:0: style: The function 'lv_theme_get_font_small' is never used. [unusedFunction]

^
src/themes/mono/lv_theme_mono.c:183:0: style: The function 'lv_theme_mono_init' is never used. [unusedFunction]

^
src/themes/mono/lv_theme_mono.c:178:0: style: The function 'lv_theme_mono_is_inited' is never used. [unusedFunction]

^
src/widgets/tileview/lv_tileview.c:116:0: style: The function 'lv_tileview_get_tile_act' is never used. [unusedFunction]

^
src/misc/lv_timer.c:154:0: style: The function 'lv_timer_create_basic' is never used. [unusedFunction]

^
src/misc/lv_timer.c:276:0: style: The function 'lv_timer_get_idle' is never used. [unusedFunction]

^
src/misc/lv_timer.c:258:0: style: The function 'lv_timer_reset' is never used. [unusedFunction]

^
src/misc/lv_timer.c:193:0: style: The function 'lv_timer_set_cb' is never used. [unusedFunction]

^
src/misc/lv_timer.c:229:0: style: The function 'lv_timer_set_period' is never used. [unusedFunction]

^
src/misc/lv_tlsf.c:938:0: style: The function 'lv_tlsf_align_size' is never used. [unusedFunction]

^
src/misc/lv_tlsf.c:963:0: style: The function 'lv_tlsf_alloc_overhead' is never used. [unusedFunction]

^
src/misc/lv_tlsf.c:910:0: style: The function 'lv_tlsf_block_size' is never used. [unusedFunction]

^
src/misc/lv_tlsf.c:948:0: style: The function 'lv_tlsf_block_size_max' is never used. [unusedFunction]

^
src/misc/lv_tlsf.c:943:0: style: The function 'lv_tlsf_block_size_min' is never used. [unusedFunction]

^
src/misc/lv_tlsf.c:1106:0: style: The function 'lv_tlsf_memalign' is never used. [unusedFunction]

^
src/libs/fsdrv/lv_fs_cbfs.c:7:0: style: The function 'nothing' is never used. [unusedFunction]

^
src/libs/qrcode/qrcodegen.c:169:0: style: The function 'qrcodegen_encodeBinary' is never used. [unusedFunction]

^
src/libs/qrcode/qrcodegen.c:200:0: style: The function 'qrcodegen_encodeSegments' is never used. [unusedFunction]

^
src/libs/qrcode/qrcodegen.c:128:0: style: The function 'qrcodegen_encodeText' is never used. [unusedFunction]

^
src/libs/qrcode/qrcodegen.c:1090:0: style: The function 'qrcodegen_getMinFitVersion' is never used. [unusedFunction]

^
src/libs/qrcode/qrcodegen.c:793:0: style: The function 'qrcodegen_getModule' is never used. [unusedFunction]

^
src/libs/qrcode/qrcodegen.c:916:0: style: The function 'qrcodegen_makeBytes' is never used. [unusedFunction]

^
src/libs/qrcode/qrcodegen.c:1002:0: style: The function 'qrcodegen_makeEci' is never used. [unusedFunction]

^
src/libs/qrcode/qrcodegen.c:1106:0: style: The function 'qrcodegen_version2size' is never used. [unusedFunction]

^
tests/src/test_cases/test_msg.c:31:0: style: The function 'test_add_entry_and_send_msg' is never used. [unusedFunction]

^
tests/src/test_cases/test_margin_align.c:37:0: style: The function 'test_align' is never used. [unusedFunction]

^
tests/src/test_cases/test_arc.c:111:0: style: The function 'test_arc_angles_when_reversed' is never used. [unusedFunction]

^
tests/src/test_cases/test_arc.c:166:0: style: The function 'test_arc_basic_render' is never used. [unusedFunction]

^
tests/src/test_cases/test_arc.c:131:0: style: The function 'test_arc_click_area_with_adv_hittest' is never used. [unusedFunction]

^
tests/src/test_cases/test_arc.c:34:0: style: The function 'test_arc_creation_successfull' is never used. [unusedFunction]

^
tests/src/test_cases/test_arc.c:41:0: style: The function 'test_arc_should_truncate_to_max_range_when_new_value_exceeds_it' is never used. [unusedFunction]

^
tests/src/test_cases/test_arc.c:53:0: style: The function 'test_arc_should_truncate_to_min_range_when_new_value_is_inferior' is never used. [unusedFunction]

^
tests/src/test_cases/test_arc.c:83:0: style: The function 'test_arc_should_update_angles_when_changing_to_symmetrical_mode' is never used. [unusedFunction]

^
tests/src/test_cases/test_arc.c:96:0: style: The function 'test_arc_should_update_angles_when_changing_to_symmetrical_mode_value_more_than_middle_range' is never used. [unusedFunction]

^
tests/src/test_cases/test_arc.c:65:0: style: The function 'test_arc_should_update_value_after_updating_range' is never used. [unusedFunction]

^
tests/src/test_cases/test_bar.c:204:0: style: The function 'test_bar_current_value_should_be_truncated_to_max_value_when_exceeds_it' is never used. [unusedFunction]

^
tests/src/test_cases/test_bar.c:213:0: style: The function 'test_bar_current_value_should_be_truncated_to_min_value_when_it_is_below_it' is never used. [unusedFunction]

^
tests/src/test_cases/test_bar.c:139:0: style: The function 'test_bar_indicator_area_should_get_smaller_when_padding_is_increased' is never used. [unusedFunction]

^
tests/src/test_cases/test_bar.c:229:0: style: The function 'test_bar_indicator_should_be_drawn_towards_the_min_range_side_after_setting_a_more_negative_value' is never used. [unusedFunction]

^
tests/src/test_cases/test_bar.c:99:0: style: The function 'test_bar_rtl_should_update_indicator_left_coordinate_based_on_bar_value' is never used. [unusedFunction]

^
tests/src/test_cases/test_bar.c:21:0: style: The function 'test_bar_should_have_valid_default_attributes' is never used. [unusedFunction]

^
tests/src/test_cases/test_bar.c:44:0: style: The function 'test_bar_should_update_indicator_right_coordinate_based_on_bar_value' is never used. [unusedFunction]

^
tests/src/test_cases/test_bar.c:194:0: style: The function 'test_bar_start_value_should_be_smaller_than_current_value_in_range_mode' is never used. [unusedFunction]

^
tests/src/test_cases/test_bar.c:177:0: style: The function 'test_bar_start_value_should_only_change_when_in_range_mode' is never used. [unusedFunction]

^
tests/src/test_cases/test_barcode.c:55:0: style: The function 'test_barcode_normal' is never used. [unusedFunction]

^
tests/src/test_cases/test_btn.c:18:0: style: The function 'test_btn_creation' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:232:0: style: The function 'test_btn_matrix_clear_btn_ctrl_all_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:180:0: style: The function 'test_btn_matrix_clear_btn_ctrl_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:25:0: style: The function 'test_btn_matrix_creation' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:431:0: style: The function 'test_btn_matrix_defocused_event_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:448:0: style: The function 'test_btn_matrix_focused_event_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:279:0: style: The function 'test_btn_matrix_get_btn_text_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:334:0: style: The function 'test_btn_matrix_key_event_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:401:0: style: The function 'test_btn_matrix_long_press_repeat_event_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:418:0: style: The function 'test_btn_matrix_press_lost_event_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:301:0: style: The function 'test_btn_matrix_pressed_event_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:384:0: style: The function 'test_btn_matrix_pressing_event_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:313:0: style: The function 'test_btn_matrix_release_event_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:57:0: style: The function 'test_btn_matrix_render_2' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:219:0: style: The function 'test_btn_matrix_set_btn_ctrl_all_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:155:0: style: The function 'test_btn_matrix_set_btn_ctrl_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:246:0: style: The function 'test_btn_matrix_set_btn_width_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:129:0: style: The function 'test_btn_matrix_set_ctrl_map_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:39:0: style: The function 'test_btn_matrix_set_map_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:258:0: style: The function 'test_btn_matrix_set_one_checked_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_btnmatrix.c:201:0: style: The function 'test_btn_matrix_set_selected_btn_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_calendar.c:39:0: style: The function 'test_calendar_creation_successfull' is never used. [unusedFunction]

^
tests/src/test_cases/test_calendar.c:182:0: style: The function 'test_calendar_event_key_down_gui' is never used. [unusedFunction]

^
tests/src/test_cases/test_calendar.c:204:0: style: The function 'test_calendar_get_btnmatrix' is never used. [unusedFunction]

^
tests/src/test_cases/test_calendar.c:143:0: style: The function 'test_calendar_get_highlighted_dates_num' is never used. [unusedFunction]

^
tests/src/test_cases/test_calendar.c:193:0: style: The function 'test_calendar_get_pressed_date_null' is never used. [unusedFunction]

^
tests/src/test_cases/test_calendar.c:173:0: style: The function 'test_calendar_header_arrow_create_gui' is never used. [unusedFunction]

^
tests/src/test_cases/test_calendar.c:164:0: style: The function 'test_calendar_header_dropdown_create_gui' is never used. [unusedFunction]

^
tests/src/test_cases/test_calendar.c:132:0: style: The function 'test_calendar_set_day_names_gui' is never used. [unusedFunction]

^
tests/src/test_cases/test_calendar.c:82:0: style: The function 'test_calendar_set_highlighted_dates' is never used. [unusedFunction]

^
tests/src/test_cases/test_calendar.c:109:0: style: The function 'test_calendar_set_highlighted_dates_gui' is never used. [unusedFunction]

^
tests/src/test_cases/test_calendar.c:75:0: style: The function 'test_calendar_set_showed_date_gui' is never used. [unusedFunction]

^
tests/src/test_cases/test_calendar.c:44:0: style: The function 'test_calendar_set_today_date' is never used. [unusedFunction]

^
tests/src/test_cases/test_calendar.c:61:0: style: The function 'test_calendar_set_today_date_gui' is never used. [unusedFunction]

^
tests/src/test_cases/test_chart.c:25:0: style: The function 'test_chart_add_series' is never used. [unusedFunction]

^
tests/src/test_cases/test_chart.c:101:0: style: The function 'test_chart_one_point_when_setting_point_count_to_zero' is never used. [unusedFunction]

^
tests/src/test_cases/test_chart.c:90:0: style: The function 'test_chart_point_is_added_at_the_end_of_a_serie' is never used. [unusedFunction]

^
tests/src/test_cases/test_chart.c:79:0: style: The function 'test_chart_set_new_point_count_as_zero' is never used. [unusedFunction]

^
tests/src/test_cases/test_chart.c:65:0: style: The function 'test_chart_set_point_count_as_same' is never used. [unusedFunction]

^
tests/src/test_cases/test_chart.c:51:0: style: The function 'test_chart_set_point_count_decrements' is never used. [unusedFunction]

^
tests/src/test_cases/test_chart.c:37:0: style: The function 'test_chart_set_point_count_increments' is never used. [unusedFunction]

^
tests/src/test_cases/test_chart.c:113:0: style: The function 'test_chart_set_zoom_x_to_none_when_factor_is_less_than_256' is never used. [unusedFunction]

^
tests/src/test_cases/test_chart.c:107:0: style: The function 'test_chart_set_zoom_y_to_none_when_factor_is_less_than_256' is never used. [unusedFunction]

^
tests/src/test_cases/test_checkbox.c:29:0: style: The function 'test_checkbox_creation_successfull' is never used. [unusedFunction]

^
tests/src/test_cases/test_checkbox.c:120:0: style: The function 'test_checkbox_no_memory_allocation_when_refreshing_text' is never used. [unusedFunction]

^
tests/src/test_cases/test_checkbox.c:76:0: style: The function 'test_checkbox_should_allocate_memory_for_static_text' is never used. [unusedFunction]

^
tests/src/test_cases/test_checkbox.c:37:0: style: The function 'test_checkbox_should_call_event_handler_on_click_when_enabled' is never used. [unusedFunction]

^
tests/src/test_cases/test_checkbox.c:52:0: style: The function 'test_checkbox_should_have_default_text_when_created' is never used. [unusedFunction]

^
tests/src/test_cases/test_checkbox.c:63:0: style: The function 'test_checkbox_should_return_dinamically_allocated_text' is never used. [unusedFunction]

^
tests/src/test_cases/test_checkbox.c:106:0: style: The function 'test_checkbox_text_should_become_null_when_mem_allocation_fails' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:209:0: style: The function 'test_colorwheel_angle_to_mode_color_fast_in_mode_saturation' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:200:0: style: The function 'test_colorwheel_angle_to_mode_color_fast_in_mode_value' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:44:0: style: The function 'test_colorwheel_create_successful_recolor_true' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:148:0: style: The function 'test_colorwheel_event_keys_left_and_down_decrement_value_by_one' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:110:0: style: The function 'test_colorwheel_event_keys_right_and_up_increment_value_by_one' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:232:0: style: The function 'test_colorwheel_event_pressed_mode_hue' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:242:0: style: The function 'test_colorwheel_event_pressed_mode_saturation' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:254:0: style: The function 'test_colorwheel_event_pressed_mode_value' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:218:0: style: The function 'test_colorwheel_event_pressing' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:51:0: style: The function 'test_colorwheel_set_hsv_changed' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:61:0: style: The function 'test_colorwheel_set_hsv_not_changed' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:193:0: style: The function 'test_colorwheel_set_mode_fixed_false' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:186:0: style: The function 'test_colorwheel_set_mode_fixed_true' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:89:0: style: The function 'test_colorwheel_set_mode_hue' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:96:0: style: The function 'test_colorwheel_set_mode_saturation' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:103:0: style: The function 'test_colorwheel_set_mode_value' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:70:0: style: The function 'test_colorwheel_set_rgb_changed' is never used. [unusedFunction]

^
tests/src/test_cases/test_colorwheel.c:80:0: style: The function 'test_colorwheel_set_rgb_not_changed' is never used. [unusedFunction]

^
tests/src/test_cases/test_config.c:8:0: style: The function 'test_config' is never used. [unusedFunction]

^
tests/src/test_cases/test_style.c:118:0: style: The function 'test_const_style' is never used. [unusedFunction]

^
tests/src/test_cases/test_style.c:44:0: style: The function 'test_custom_prop_ids' is never used. [unusedFunction]

^
tests/src/test_cases/test_demo_stress.c:16:0: style: The function 'test_demo_stress' is never used. [unusedFunction]

^
tests/src/test_cases/test_demo_widgets.c:10:0: style: The function 'test_demo_widgets' is never used. [unusedFunction]

^
tests/src/test_cases/test_dropdown.c:137:0: style: The function 'test_dropdown_click' is never used. [unusedFunction]

^
tests/src/test_cases/test_dropdown.c:17:0: style: The function 'test_dropdown_create_delete' is never used. [unusedFunction]

^
tests/src/test_cases/test_dropdown.c:264:0: style: The function 'test_dropdown_encoder' is never used. [unusedFunction]

^
tests/src/test_cases/test_dropdown.c:161:0: style: The function 'test_dropdown_keypad' is never used. [unusedFunction]

^
tests/src/test_cases/test_dropdown.c:321:0: style: The function 'test_dropdown_render_1' is never used. [unusedFunction]

^
tests/src/test_cases/test_dropdown.c:367:0: style: The function 'test_dropdown_render_2' is never used. [unusedFunction]

^
tests/src/test_cases/test_dropdown.c:116:0: style: The function 'test_dropdown_select' is never used. [unusedFunction]

^
tests/src/test_cases/test_dropdown.c:50:0: style: The function 'test_dropdown_set_options' is never used. [unusedFunction]

^
tests/src/test_cases/test_dropdown.c:427:0: style: The function 'test_dropdown_should_list_on_top' is never used. [unusedFunction]

^
tests/src/test_cases/test_event.c:21:0: style: The function 'test_event_object_deletion' is never used. [unusedFunction]

^
tests/src/test_cases/test_margin_flex.c:36:0: style: The function 'test_flex' is never used. [unusedFunction]

^
tests/src/test_cases/test_font_loader.c:46:0: style: The function 'test_font_loader' is never used. [unusedFunction]

^
tests/src/test_cases/_test_template.c:16:0: style: The function 'test_func_1' is never used. [unusedFunction]

^
tests/src/test_cases/test_style.c:12:0: style: The function 'test_gradient_vertical_misalignment' is never used. [unusedFunction]

^
tests/src/test_cases/test_margin_grid.c:36:0: style: The function 'test_grid' is never used. [unusedFunction]

^
tests/src/test_cases/test_style.c:84:0: style: The function 'test_id_meta_overrun' is never used. [unusedFunction]

^
tests/src/test_cases/test_style.c:74:0: style: The function 'test_inherit_meta' is never used. [unusedFunction]

^
tests/src/test_cases/test_style.c:96:0: style: The function 'test_inherit_meta_with_lower_precedence_style' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:39:0: style: The function 'test_label_creation' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:517:0: style: The function 'test_label_cut_text' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:539:0: style: The function 'test_label_get_letter_on_center' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:526:0: style: The function 'test_label_get_letter_on_left' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:552:0: style: The function 'test_label_get_letter_on_right' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:321:0: style: The function 'test_label_get_letter_pos_align_center' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:349:0: style: The function 'test_label_get_letter_pos_align_center_on_empty_text' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:67:0: style: The function 'test_label_get_letter_pos_align_left' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:95:0: style: The function 'test_label_get_letter_pos_align_left_on_empty_text' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:194:0: style: The function 'test_label_get_letter_pos_align_right' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:222:0: style: The function 'test_label_get_letter_pos_align_right_on_empty_text' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:494:0: style: The function 'test_label_is_char_under_pos_align_center' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:448:0: style: The function 'test_label_is_char_under_pos_align_left' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:471:0: style: The function 'test_label_is_char_under_pos_align_right' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:416:0: style: The function 'test_label_long_text_get_letter_pos_align_center' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:162:0: style: The function 'test_label_long_text_get_letter_pos_align_left' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:289:0: style: The function 'test_label_long_text_get_letter_pos_align_right' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:377:0: style: The function 'test_label_long_text_multiline_get_letter_pos_align_center' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:123:0: style: The function 'test_label_long_text_multiline_get_letter_pos_align_left' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:250:0: style: The function 'test_label_long_text_multiline_get_letter_pos_align_right' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:45:0: style: The function 'test_label_recolor' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:54:0: style: The function 'test_label_set_text' is never used. [unusedFunction]

^
tests/src/test_cases/test_label.c:565:0: style: The function 'test_label_text_selection' is never used. [unusedFunction]

^
tests/src/test_cases/test_led.c:94:0: style: The function 'test_led_get_brightness_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_led.c:67:0: style: The function 'test_led_on_off_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_led.c:18:0: style: The function 'test_led_render_1' is never used. [unusedFunction]

^
tests/src/test_cases/test_led.c:52:0: style: The function 'test_led_set_brightness_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_led.c:36:0: style: The function 'test_led_set_color_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_led.c:81:0: style: The function 'test_led_toggle_works' is never used. [unusedFunction]

^
tests/src/test_cases/test_line.c:96:0: style: The function 'test_line_basic_render' is never used. [unusedFunction]

^
tests/src/test_cases/test_line.c:24:0: style: The function 'test_line_should_have_valid_documented_default_values' is never used. [unusedFunction]

^
tests/src/test_cases/test_line.c:36:0: style: The function 'test_line_should_return_valid_y_invert' is never used. [unusedFunction]

^
tests/src/test_cases/test_line.c:76:0: style: The function 'test_line_should_update_extra_draw_size_based_on_style' is never used. [unusedFunction]

^
tests/src/test_cases/test_line.c:42:0: style: The function 'test_line_size_should_be_updated_after_adding_points' is never used. [unusedFunction]

^
tests/src/test_cases/test_list.c:18:0: style: The function 'test_list_get_text_from_added_button' is never used. [unusedFunction]

^
tests/src/test_cases/test_list.c:26:0: style: The function 'test_list_get_text_from_button_without_symbol' is never used. [unusedFunction]

^
tests/src/test_cases/test_list.c:42:0: style: The function 'test_list_get_text_from_label' is never used. [unusedFunction]

^
tests/src/test_cases/test_list.c:34:0: style: The function 'test_list_gets_empty_text_from_button_without_text' is never used. [unusedFunction]

^
tests/src/test_cases/test_list.c:50:0: style: The function 'test_list_snapshot' is never used. [unusedFunction]

^
tests/src/test_cases/test_mem.c:17:0: style: The function 'test_mem_buf_realloc' is never used. [unusedFunction]

^
tests/src/test_cases/test_msgbox.c:150:0: style: The function 'test_msgbox_close' is never used. [unusedFunction]

^
tests/src/test_cases/test_msgbox.c:170:0: style: The function 'test_msgbox_close_async' is never used. [unusedFunction]

^
tests/src/test_cases/test_msgbox.c:180:0: style: The function 'test_msgbox_close_async_modal' is never used. [unusedFunction]

^
tests/src/test_cases/test_msgbox.c:190:0: style: The function 'test_msgbox_close_click_event' is never used. [unusedFunction]

^
tests/src/test_cases/test_msgbox.c:160:0: style: The function 'test_msgbox_close_modal' is never used. [unusedFunction]

^
tests/src/test_cases/test_msgbox.c:64:0: style: The function 'test_msgbox_creation_successfull_modal' is never used. [unusedFunction]

^
tests/src/test_cases/test_msgbox.c:53:0: style: The function 'test_msgbox_creation_successfull_no_close_btn' is never used. [unusedFunction]

^
tests/src/test_cases/test_msgbox.c:42:0: style: The function 'test_msgbox_creation_successfull_with_close_btn' is never used. [unusedFunction]

^
tests/src/test_cases/test_msgbox.c:134:0: style: The function 'test_msgbox_get_active_btn' is never used. [unusedFunction]

^
tests/src/test_cases/test_msgbox.c:142:0: style: The function 'test_msgbox_get_active_btn_text' is never used. [unusedFunction]

^
tests/src/test_cases/test_msgbox.c:120:0: style: The function 'test_msgbox_get_btns' is never used. [unusedFunction]

^
tests/src/test_cases/test_msgbox.c:88:0: style: The function 'test_msgbox_get_close_btn' is never used. [unusedFunction]

^
tests/src/test_cases/test_msgbox.c:113:0: style: The function 'test_msgbox_get_content' is never used. [unusedFunction]

^
tests/src/test_cases/test_msgbox.c:100:0: style: The function 'test_msgbox_get_text' is never used. [unusedFunction]

^
tests/src/test_cases/test_msgbox.c:75:0: style: The function 'test_msgbox_get_title' is never used. [unusedFunction]

^
tests/src/test_cases/test_slider.c:176:0: style: The function 'test_normal_mode_slider_hit_test' is never used. [unusedFunction]

^
tests/src/test_cases/test_obj_tree.c:9:0: style: The function 'test_obj_tree_1' is never used. [unusedFunction]

^
tests/src/test_cases/test_obj_tree.c:14:0: style: The function 'test_obj_tree_2' is never used. [unusedFunction]

^
tests/src/test_cases/test_obj_tree.c:39:0: style: The function 'test_obj_tree_3' is never used. [unusedFunction]

^
tests/src/test_cases/test_slider.c:149:0: style: The function 'test_ranged_mode_adjust_with_encoder' is never used. [unusedFunction]

^
tests/src/test_cases/test_fs.c:28:0: style: The function 'test_read' is never used. [unusedFunction]

^
tests/src/test_cases/test_fs.c:68:0: style: The function 'test_read_random' is never used. [unusedFunction]

^
tests/src/test_cases/test_roller.c:54:0: style: The function 'test_roller_get_options' is never used. [unusedFunction]

^
tests/src/test_cases/test_roller.c:59:0: style: The function 'test_roller_get_selected_option' is never used. [unusedFunction]

^
tests/src/test_cases/test_roller.c:79:0: style: The function 'test_roller_get_selected_option_truncated_buffer' is never used. [unusedFunction]

^
tests/src/test_cases/test_roller.c:160:0: style: The function 'test_roller_infinite_mode_first_option_gets_selected_after_last_option' is never used. [unusedFunction]

^
tests/src/test_cases/test_roller.c:94:0: style: The function 'test_roller_infinite_mode_get_selected_option' is never used. [unusedFunction]

^
tests/src/test_cases/test_roller.c:126:0: style: The function 'test_roller_keypad_events' is never used. [unusedFunction]

^
tests/src/test_cases/test_roller.c:223:0: style: The function 'test_roller_release_handler_pointer_indev' is never used. [unusedFunction]

^
tests/src/test_cases/test_roller.c:187:0: style: The function 'test_roller_rendering_test' is never used. [unusedFunction]

^
tests/src/test_cases/test_roller.c:209:0: style: The function 'test_roller_select_option_with_click' is never used. [unusedFunction]

^
tests/src/test_cases/test_slider.c:78:0: style: The function 'test_slider_event_invalid_key_should_not_change_values' is never used. [unusedFunction]

^
tests/src/test_cases/test_slider.c:62:0: style: The function 'test_slider_event_keys_left_and_down_decrement_value_by_one' is never used. [unusedFunction]

^
tests/src/test_cases/test_slider.c:46:0: style: The function 'test_slider_event_keys_right_and_up_increment_value_by_one' is never used. [unusedFunction]

^
tests/src/test_cases/test_slider.c:128:0: style: The function 'test_slider_normal_mode_should_leave_edit_mode_if_released' is never used. [unusedFunction]

^
tests/src/test_cases/test_slider.c:196:0: style: The function 'test_slider_range_event_hit_test' is never used. [unusedFunction]

^
tests/src/test_cases/test_slider.c:89:0: style: The function 'test_slider_range_mode_should_leave_edit_mode_if_released' is never used. [unusedFunction]

^
tests/src/test_cases/test_slider.c:109:0: style: The function 'test_slider_range_mode_should_not_leave_edit_mode_if_released_with_no_left_knob_focus' is never used. [unusedFunction]

^
tests/src/test_cases/test_snapshot.c:40:0: style: The function 'test_snapshot_should_not_leak_memory' is never used. [unusedFunction]

^
tests/src/test_cases/test_spinbox.c:44:0: style: The function 'test_spinbox_decrement_when_min_range_is_negative' is never used. [unusedFunction]

^
tests/src/test_cases/test_spinbox.c:61:0: style: The function 'test_spinbox_decrement_when_min_range_is_zero' is never used. [unusedFunction]

^
tests/src/test_cases/test_spinbox.c:158:0: style: The function 'test_spinbox_event_key' is never used. [unusedFunction]

^
tests/src/test_cases/test_spinbox.c:217:0: style: The function 'test_spinbox_event_key_encoder_indev_editing_group' is never used. [unusedFunction]

^
tests/src/test_cases/test_spinbox.c:245:0: style: The function 'test_spinbox_event_key_encoder_indev_editing_group_left_step_direction' is never used. [unusedFunction]

^
tests/src/test_cases/test_spinbox.c:202:0: style: The function 'test_spinbox_event_key_encoder_indev_turn_left' is never used. [unusedFunction]

^
tests/src/test_cases/test_spinbox.c:188:0: style: The function 'test_spinbox_event_key_encoder_indev_turn_right' is never used. [unusedFunction]

^
tests/src/test_cases/test_spinbox.c:274:0: style: The function 'test_spinbox_event_release' is never used. [unusedFunction]

^
tests/src/test_cases/test_spinbox.c:78:0: style: The function 'test_spinbox_position_selection' is never used. [unusedFunction]

^
tests/src/test_cases/test_spinbox.c:145:0: style: The function 'test_spinbox_rollover' is never used. [unusedFunction]

^
tests/src/test_cases/test_spinbox.c:97:0: style: The function 'test_spinbox_set_range' is never used. [unusedFunction]

^
tests/src/test_cases/test_spinbox.c:121:0: style: The function 'test_spinbox_step_prev' is never used. [unusedFunction]

^
tests/src/test_cases/test_spinbox.c:286:0: style: The function 'test_spinbox_zero_crossing' is never used. [unusedFunction]

^
tests/src/test_cases/test_spinner.c:22:0: style: The function 'test_spinner_spinning' is never used. [unusedFunction]

^
tests/src/test_cases/test_style.c:126:0: style: The function 'test_style_replacement' is never used. [unusedFunction]

^
tests/src/test_cases/test_switch.c:74:0: style: The function 'test_switch_animation' is never used. [unusedFunction]

^
tests/src/test_cases/test_switch.c:43:0: style: The function 'test_switch_should_have_default_state_after_being_created' is never used. [unusedFunction]

^
tests/src/test_cases/test_switch.c:95:0: style: The function 'test_switch_should_not_have_extra_draw_size_at_creation' is never used. [unusedFunction]

^
tests/src/test_cases/test_switch.c:49:0: style: The function 'test_switch_should_not_leak_memory_after_deletion' is never used. [unusedFunction]

^
tests/src/test_cases/test_switch.c:132:0: style: The function 'test_switch_should_state_change_when_event_bubbling_is_enabled' is never used. [unusedFunction]

^
tests/src/test_cases/test_switch.c:123:0: style: The function 'test_switch_should_trigger_value_changed_event_only_once' is never used. [unusedFunction]

^
tests/src/test_cases/test_switch.c:102:0: style: The function 'test_switch_should_update_extra_draw_size_after_editing_padding' is never used. [unusedFunction]

^
tests/src/test_cases/test_table.c:86:0: style: The function 'test_table_cell_value_should_return_empty_string_when_cell_is_empty' is never used. [unusedFunction]

^
tests/src/test_cases/test_table.c:152:0: style: The function 'test_table_rendering' is never used. [unusedFunction]

^
tests/src/test_cases/test_table.c:91:0: style: The function 'test_table_row_height_should_increase_with_multiline_cell_value' is never used. [unusedFunction]

^
tests/src/test_cases/test_table.c:58:0: style: The function 'test_table_should_clear_selected_cell_ctrl' is never used. [unusedFunction]

^
tests/src/test_cases/test_table.c:31:0: style: The function 'test_table_should_grow_columns_automatically_when_setting_formatted_cell_value' is never used. [unusedFunction]

^
tests/src/test_cases/test_table.c:45:0: style: The function 'test_table_should_identify_cell_with_ctrl' is never used. [unusedFunction]

^
tests/src/test_cases/test_table.c:71:0: style: The function 'test_table_should_keep_not_selected_cell_ctrl' is never used. [unusedFunction]

^
tests/src/test_cases/test_table.c:188:0: style: The function 'test_table_should_reduce_cells' is never used. [unusedFunction]

^
tests/src/test_cases/test_table.c:218:0: style: The function 'test_table_should_reduce_cells_with_more_than_one_row' is never used. [unusedFunction]

^
tests/src/test_cases/test_table.c:20:0: style: The function 'test_table_should_return_assigned_cell_value' is never used. [unusedFunction]

^
tests/src/test_cases/test_table.c:106:0: style: The function 'test_table_should_wrap_long_texts' is never used. [unusedFunction]

^
tests/src/test_cases/test_tabview.c:75:0: style: The function 'test_tabview_add_one_tab_empty' is never used. [unusedFunction]

^
tests/src/test_cases/test_tabview.c:84:0: style: The function 'test_tabview_add_one_tab_empty_hor' is never used. [unusedFunction]

^
tests/src/test_cases/test_tabview.c:93:0: style: The function 'test_tabview_add_one_tab_no_scroll' is never used. [unusedFunction]

^
tests/src/test_cases/test_tabview.c:106:0: style: The function 'test_tabview_add_one_tab_with_scroll' is never used. [unusedFunction]

^
tests/src/test_cases/test_tabview.c:169:0: style: The function 'test_tabview_add_several_tabs_hor' is never used. [unusedFunction]

^
tests/src/test_cases/test_tabview.c:132:0: style: The function 'test_tabview_add_several_tabs_no_scroll' is never used. [unusedFunction]

^
tests/src/test_cases/test_tabview.c:48:0: style: The function 'test_tabview_create_successful_dir_bottom' is never used. [unusedFunction]

^
tests/src/test_cases/test_tabview.c:57:0: style: The function 'test_tabview_create_successful_dir_left' is never used. [unusedFunction]

^
tests/src/test_cases/test_tabview.c:66:0: style: The function 'test_tabview_create_successful_dir_right' is never used. [unusedFunction]

^
tests/src/test_cases/test_tabview.c:39:0: style: The function 'test_tabview_create_successful_dir_top' is never used. [unusedFunction]

^
tests/src/test_cases/test_tabview.c:187:0: style: The function 'test_tabview_get_content' is never used. [unusedFunction]

^
tests/src/test_cases/test_tabview.c:196:0: style: The function 'test_tabview_get_tab_btns' is never used. [unusedFunction]

^
tests/src/test_cases/test_tabview.c:150:0: style: The function 'test_tabview_rename_tab' is never used. [unusedFunction]

^
tests/src/test_cases/test_tabview.c:205:0: style: The function 'test_tabview_set_act_non_existent' is never used. [unusedFunction]

^
tests/src/test_cases/test_tabview.c:214:0: style: The function 'test_tabview_tab2_selected_event' is never used. [unusedFunction]

^
tests/src/test_cases/test_tabview.c:230:0: style: The function 'test_tabview_update_on_external_scroll' is never used. [unusedFunction]

^
tests/src/test_cases/test_textarea.c:61:0: style: The function 'test_textarea_cursor_click_pos_field_update' is never used. [unusedFunction]

^
tests/src/test_cases/test_textarea.c:96:0: style: The function 'test_textarea_in_one_line_mode_should_ignore_line_break_characters' is never used. [unusedFunction]

^
tests/src/test_cases/test_slider.c:35:0: style: The function 'test_textarea_should_have_valid_documented_default_values' is never used. [unusedFunction]

^
tests/src/test_cases/test_textarea.c:22:0: style: The function 'test_textarea_should_have_valid_documented_defualt_values' is never used. [unusedFunction]

^
tests/src/test_cases/test_textarea.c:86:0: style: The function 'test_textarea_should_keep_only_accepted_chars' is never used. [unusedFunction]

^
tests/src/test_cases/test_textarea.c:33:0: style: The function 'test_textarea_should_return_actual_text_when_password_mode_is_enabled' is never used. [unusedFunction]

^
tests/src/test_cases/test_textarea.c:44:0: style: The function 'test_textarea_should_update_label_style_with_one_line_enabled' is never used. [unusedFunction]

^
tests/src/test_cases/test_textarea.c:68:0: style: The function 'test_textarea_should_update_placeholder_text' is never used. [unusedFunction]

^
tests/src/test_cases/test_tiny_ttf.c:16:0: style: The function 'test_tiny_ttf_rendering_test' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:106:0: style: The function 'test_txt_cut_happy_path' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:115:0: style: The function 'test_txt_cut_should_handle_len_longer_than_string_length' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:101:0: style: The function 'test_txt_cut_should_handle_null_pointer_to_txt' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:144:0: style: The function 'test_txt_get_encoded_next_detect_invalid_2_byte_input' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:164:0: style: The function 'test_txt_get_encoded_next_detect_invalid_3_byte_input' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:184:0: style: The function 'test_txt_get_encoded_next_detect_invalid_4_byte_input' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:134:0: style: The function 'test_txt_get_encoded_next_detect_valid_2_byte_input' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:154:0: style: The function 'test_txt_get_encoded_next_detect_valid_3_byte_input' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:174:0: style: The function 'test_txt_get_encoded_next_detect_valid_4_byte_input' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:124:0: style: The function 'test_txt_get_encoded_next_should_decode_valid_ascii' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:195:0: style: The function 'test_txt_next_line_should_handle_empty_string' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:88:0: style: The function 'test_txt_should_handle_null_pointers_when_inserting' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:19:0: style: The function 'test_txt_should_identify_invalid_start_of_command' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:30:0: style: The function 'test_txt_should_identify_scaped_command_in_parameter' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:63:0: style: The function 'test_txt_should_identify_space_after_parameter' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:8:0: style: The function 'test_txt_should_identify_valid_start_of_command' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:74:0: style: The function 'test_txt_should_insert_string_into_another' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:52:0: style: The function 'test_txt_should_reset_state_when_receiving_color_cmd_while_processing_commands' is never used. [unusedFunction]

^
tests/src/test_cases/test_txt.c:41:0: style: The function 'test_txt_should_skip_color_parameter_in_parameter' is never used. [unusedFunction]

^
tests/src/test_cases/test_win.c:96:0: style: The function 'test_win_add_btn' is never used. [unusedFunction]

^
tests/src/test_cases/test_win.c:125:0: style: The function 'test_win_add_multiple_elements' is never used. [unusedFunction]

^
tests/src/test_cases/test_win.c:76:0: style: The function 'test_win_add_title_multiple' is never used. [unusedFunction]

^
tests/src/test_cases/test_win.c:52:0: style: The function 'test_win_add_title_single' is never used. [unusedFunction]

^
tests/src/test_cases/test_win.c:23:0: style: The function 'test_win_should_have_valid_documented_defualt_values' is never used. [unusedFunction]

^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingInclude]

